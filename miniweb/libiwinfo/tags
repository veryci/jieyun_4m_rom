!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ARRAY_SIZE	iwinfo_lib.c	317;"	d	file:
CountryCodes	iwinfo_madwifi.c	/^} CountryCodes[] = {$/;"	v	typeref:struct:ISO3166_to_CCode	file:
IEEE80211_ADDR_LEN	api/madwifi.h	25;"	d
IEEE80211_AUTH_8021X	api/madwifi.h	/^	IEEE80211_AUTH_8021X	= 3,	\/* 802.1x *\/$/;"	e	enum:ieee80211_authmode
IEEE80211_AUTH_AUTO	api/madwifi.h	/^	IEEE80211_AUTH_AUTO	= 4,	\/* auto-select\/accept *\/$/;"	e	enum:ieee80211_authmode
IEEE80211_AUTH_NONE	api/madwifi.h	/^	IEEE80211_AUTH_NONE	= 0,$/;"	e	enum:ieee80211_authmode
IEEE80211_AUTH_OPEN	api/madwifi.h	/^	IEEE80211_AUTH_OPEN	= 1,	\/* open *\/$/;"	e	enum:ieee80211_authmode
IEEE80211_AUTH_SHARED	api/madwifi.h	/^	IEEE80211_AUTH_SHARED	= 2,	\/* shared-key *\/$/;"	e	enum:ieee80211_authmode
IEEE80211_AUTH_WPA	api/madwifi.h	/^	IEEE80211_AUTH_WPA	= 5,	\/* WPA\/RSN w\/ 802.1x\/PSK *\/$/;"	e	enum:ieee80211_authmode
IEEE80211_CHAN_BYTES	api/madwifi.h	48;"	d
IEEE80211_CHAN_MAX	api/madwifi.h	47;"	d
IEEE80211_CIPHER_AES_CCM	api/madwifi.h	39;"	d
IEEE80211_CIPHER_AES_OCB	api/madwifi.h	38;"	d
IEEE80211_CIPHER_CKIP	api/madwifi.h	40;"	d
IEEE80211_CIPHER_MAX	api/madwifi.h	42;"	d
IEEE80211_CIPHER_NONE	api/madwifi.h	41;"	d
IEEE80211_CIPHER_TKIP	api/madwifi.h	37;"	d
IEEE80211_CIPHER_WEP	api/madwifi.h	36;"	d
IEEE80211_CLONE_BSSID	api/madwifi.h	63;"	d
IEEE80211_IOCTL_GETCHANINFO	api/madwifi.h	58;"	d
IEEE80211_IOCTL_GETCHANLIST	api/madwifi.h	57;"	d
IEEE80211_IOCTL_GETKEY	api/madwifi.h	51;"	d
IEEE80211_IOCTL_GETMODE	api/madwifi.h	56;"	d
IEEE80211_IOCTL_GETPARAM	api/madwifi.h	55;"	d
IEEE80211_IOCTL_STA_INFO	api/madwifi.h	53;"	d
IEEE80211_IOCTL_STA_STATS	api/madwifi.h	52;"	d
IEEE80211_KEYBUF_SIZE	api/madwifi.h	32;"	d
IEEE80211_KEY_DEFAULT	api/madwifi.h	46;"	d
IEEE80211_MICBUF_SIZE	api/madwifi.h	33;"	d
IEEE80211_M_AHDEMO	api/madwifi.h	/^	IEEE80211_M_AHDEMO	= 3,	\/* Old lucent compatible adhoc demo *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_HOSTAP	api/madwifi.h	/^	IEEE80211_M_HOSTAP	= 6,	\/* Software Access Point *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_IBSS	api/madwifi.h	/^	IEEE80211_M_IBSS 	= 0,	\/* IBSS (adhoc) station *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_MONITOR	api/madwifi.h	/^	IEEE80211_M_MONITOR	= 8,	\/* Monitor mode *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_STA	api/madwifi.h	/^	IEEE80211_M_STA		= 1,	\/* infrastructure station *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_M_WDS	api/madwifi.h	/^	IEEE80211_M_WDS		= 2,	\/* WDS link *\/$/;"	e	enum:ieee80211_opmode
IEEE80211_NO_STABEACONS	api/madwifi.h	64;"	d
IEEE80211_PARAM_AUTHMODE	api/madwifi.h	/^	IEEE80211_PARAM_AUTHMODE		= 3,	\/* authentication mode *\/$/;"	e	enum:__anon1
IEEE80211_PARAM_MCASTCIPHER	api/madwifi.h	/^	IEEE80211_PARAM_MCASTCIPHER		= 5,	\/* multicast\/default cipher *\/$/;"	e	enum:__anon1
IEEE80211_PARAM_MCASTKEYLEN	api/madwifi.h	/^	IEEE80211_PARAM_MCASTKEYLEN		= 6,	\/* multicast key length *\/$/;"	e	enum:__anon1
IEEE80211_PARAM_UCASTCIPHERS	api/madwifi.h	/^	IEEE80211_PARAM_UCASTCIPHERS	= 7,	\/* unicast cipher suites *\/$/;"	e	enum:__anon1
IEEE80211_PARAM_WPA	api/madwifi.h	/^	IEEE80211_PARAM_WPA				= 10,	\/* WPA mode (0,1,2) *\/$/;"	e	enum:__anon1
IEEE80211_RATE_MAXSIZE	api/madwifi.h	49;"	d
IEEE80211_RATE_VAL	api/madwifi.h	26;"	d
IEEE80211_SEQ_SEQ_MASK	api/madwifi.h	27;"	d
IEEE80211_SEQ_SEQ_SHIFT	api/madwifi.h	28;"	d
IEEE80211_TID_SIZE	api/madwifi.h	34;"	d
ISO3166_to_CCode	iwinfo_madwifi.c	/^static struct ISO3166_to_CCode$/;"	s	file:
IWEVASSOCREQIE	api/wext.h	380;"	d
IWEVASSOCRESPIE	api/wext.h	389;"	d
IWEVCUSTOM	api/wext.h	368;"	d
IWEVEXPIRED	api/wext.h	370;"	d
IWEVFIRST	api/wext.h	400;"	d
IWEVGENIE	api/wext.h	371;"	d
IWEVMICHAELMICFAILURE	api/wext.h	377;"	d
IWEVPMKIDCAND	api/wext.h	396;"	d
IWEVQUAL	api/wext.h	367;"	d
IWEVREGISTERED	api/wext.h	369;"	d
IWEVTXDROP	api/wext.h	366;"	d
IWINFO_80211_A	include/iwinfo.h	26;"	d
IWINFO_80211_AC	include/iwinfo.h	30;"	d
IWINFO_80211_B	include/iwinfo.h	27;"	d
IWINFO_80211_G	include/iwinfo.h	28;"	d
IWINFO_80211_N	include/iwinfo.h	29;"	d
IWINFO_AUTH_NAMES	iwinfo_lib.c	/^const char *IWINFO_AUTH_NAMES[] = {$/;"	v
IWINFO_AUTH_OPEN	include/iwinfo.h	45;"	d
IWINFO_AUTH_SHARED	include/iwinfo.h	46;"	d
IWINFO_BACKENDS	Makefile	/^IWINFO_BACKENDS    = $(BACKENDS)$/;"	m
IWINFO_BUFSIZE	include/iwinfo.h	23;"	d
IWINFO_CFLAGS	Makefile	/^IWINFO_CFLAGS      = $(CFLAGS) -std=gnu99 -fstrict-aliasing -Iinclude$/;"	m
IWINFO_CIPHER_AESOCB	include/iwinfo.h	38;"	d
IWINFO_CIPHER_CCMP	include/iwinfo.h	36;"	d
IWINFO_CIPHER_CKIP	include/iwinfo.h	39;"	d
IWINFO_CIPHER_NAMES	iwinfo_lib.c	/^const char *IWINFO_CIPHER_NAMES[] = {$/;"	v
IWINFO_CIPHER_NONE	include/iwinfo.h	32;"	d
IWINFO_CIPHER_TKIP	include/iwinfo.h	34;"	d
IWINFO_CIPHER_WEP104	include/iwinfo.h	37;"	d
IWINFO_CIPHER_WEP40	include/iwinfo.h	33;"	d
IWINFO_CIPHER_WRAP	include/iwinfo.h	35;"	d
IWINFO_CLI	Makefile	/^IWINFO_CLI         = iwinfo$/;"	m
IWINFO_CLI_LDFLAGS	Makefile	/^IWINFO_CLI_LDFLAGS = $(LDFLAGS) -L. -liwinfo$/;"	m
IWINFO_CLI_OBJ	Makefile	/^IWINFO_CLI_OBJ     = iwinfo_cli.o$/;"	m
IWINFO_ESSID_MAX_SIZE	include/iwinfo.h	24;"	d
IWINFO_HARDWARE_FILE	include/iwinfo.h	148;"	d
IWINFO_ISO3166_NAMES	iwinfo_lib.c	/^const struct iwinfo_iso3166_label IWINFO_ISO3166_NAMES[] = {$/;"	v	typeref:struct:iwinfo_iso3166_label
IWINFO_KMGMT_8021x	include/iwinfo.h	42;"	d
IWINFO_KMGMT_NAMES	iwinfo_lib.c	/^const char *IWINFO_KMGMT_NAMES[] = {$/;"	v
IWINFO_KMGMT_NONE	include/iwinfo.h	41;"	d
IWINFO_KMGMT_PSK	include/iwinfo.h	43;"	d
IWINFO_LIB	Makefile	/^IWINFO_LIB         = libiwinfo.so$/;"	m
IWINFO_LIB_LDFLAGS	Makefile	/^IWINFO_LIB_LDFLAGS = $(LDFLAGS) -shared$/;"	m
IWINFO_LIB_OBJ	Makefile	/^IWINFO_LIB_OBJ     = iwinfo_utils.o iwinfo_wext.o iwinfo_wext_scan.o iwinfo_lib.o$/;"	m
IWINFO_LUA	Makefile	/^IWINFO_LUA         = iwinfo.so$/;"	m
IWINFO_LUA_LDFLAGS	Makefile	/^IWINFO_LUA_LDFLAGS = $(LDFLAGS) -shared -L. -liwinfo -llua$/;"	m
IWINFO_LUA_OBJ	Makefile	/^IWINFO_LUA_OBJ     = iwinfo_lua.o$/;"	m
IWINFO_MADWIFI_META	include/iwinfo/lua.h	37;"	d
IWINFO_META	include/iwinfo/lua.h	29;"	d
IWINFO_NL80211_META	include/iwinfo/lua.h	41;"	d
IWINFO_OPMODE_ADHOC	include/iwinfo.h	/^	IWINFO_OPMODE_ADHOC      = 2,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_AP_VLAN	include/iwinfo.h	/^	IWINFO_OPMODE_AP_VLAN    = 5,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_CLIENT	include/iwinfo.h	/^	IWINFO_OPMODE_CLIENT     = 3,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_MASTER	include/iwinfo.h	/^	IWINFO_OPMODE_MASTER     = 1,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_MESHPOINT	include/iwinfo.h	/^	IWINFO_OPMODE_MESHPOINT  = 7,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_MONITOR	include/iwinfo.h	/^	IWINFO_OPMODE_MONITOR    = 4,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_NAMES	iwinfo_lib.c	/^const char *IWINFO_OPMODE_NAMES[] = {$/;"	v
IWINFO_OPMODE_P2P_CLIENT	include/iwinfo.h	/^	IWINFO_OPMODE_P2P_CLIENT = 8,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_P2P_GO	include/iwinfo.h	/^	IWINFO_OPMODE_P2P_GO     = 9,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_UNKNOWN	include/iwinfo.h	/^	IWINFO_OPMODE_UNKNOWN    = 0,$/;"	e	enum:iwinfo_opmode
IWINFO_OPMODE_WDS	include/iwinfo.h	/^	IWINFO_OPMODE_WDS        = 6,$/;"	e	enum:iwinfo_opmode
IWINFO_WEXT_META	include/iwinfo/lua.h	30;"	d
IWINFO_WL_META	include/iwinfo/lua.h	33;"	d
IW_AUTH_80211_AUTH_ALG	api/wext.h	573;"	d
IW_AUTH_ALG_LEAP	api/wext.h	598;"	d
IW_AUTH_ALG_OPEN_SYSTEM	api/wext.h	596;"	d
IW_AUTH_ALG_SHARED_KEY	api/wext.h	597;"	d
IW_AUTH_CIPHER_CCMP	api/wext.h	588;"	d
IW_AUTH_CIPHER_GROUP	api/wext.h	569;"	d
IW_AUTH_CIPHER_NONE	api/wext.h	585;"	d
IW_AUTH_CIPHER_PAIRWISE	api/wext.h	568;"	d
IW_AUTH_CIPHER_TKIP	api/wext.h	587;"	d
IW_AUTH_CIPHER_WEP104	api/wext.h	589;"	d
IW_AUTH_CIPHER_WEP40	api/wext.h	586;"	d
IW_AUTH_DROP_UNENCRYPTED	api/wext.h	572;"	d
IW_AUTH_FLAGS	api/wext.h	562;"	d
IW_AUTH_INDEX	api/wext.h	561;"	d
IW_AUTH_KEY_MGMT	api/wext.h	570;"	d
IW_AUTH_KEY_MGMT_802_1X	api/wext.h	592;"	d
IW_AUTH_KEY_MGMT_PSK	api/wext.h	593;"	d
IW_AUTH_PRIVACY_INVOKED	api/wext.h	577;"	d
IW_AUTH_ROAMING_CONTROL	api/wext.h	576;"	d
IW_AUTH_ROAMING_DISABLE	api/wext.h	602;"	d
IW_AUTH_ROAMING_ENABLE	api/wext.h	601;"	d
IW_AUTH_RX_UNENCRYPTED_EAPOL	api/wext.h	575;"	d
IW_AUTH_TKIP_COUNTERMEASURES	api/wext.h	571;"	d
IW_AUTH_WPA_ENABLED	api/wext.h	574;"	d
IW_AUTH_WPA_VERSION	api/wext.h	567;"	d
IW_AUTH_WPA_VERSION_DISABLED	api/wext.h	580;"	d
IW_AUTH_WPA_VERSION_WPA	api/wext.h	581;"	d
IW_AUTH_WPA_VERSION_WPA2	api/wext.h	582;"	d
IW_BITRATE_BROADCAST	api/wext.h	670;"	d
IW_BITRATE_TYPE	api/wext.h	668;"	d
IW_BITRATE_UNICAST	api/wext.h	669;"	d
IW_CUSTOM_MAX	api/wext.h	549;"	d
IW_DESCR_FLAG_DUMP	iwinfo_wext.h	64;"	d
IW_DESCR_FLAG_EVENT	iwinfo_wext.h	65;"	d
IW_DESCR_FLAG_NOMAX	iwinfo_wext.h	68;"	d
IW_DESCR_FLAG_NONE	iwinfo_wext.h	62;"	d
IW_DESCR_FLAG_RESTRICT	iwinfo_wext.h	66;"	d
IW_DESCR_FLAG_WAIT	iwinfo_wext.h	70;"	d
IW_ENCODE_ALG_CCMP	api/wext.h	611;"	d
IW_ENCODE_ALG_NONE	api/wext.h	608;"	d
IW_ENCODE_ALG_TKIP	api/wext.h	610;"	d
IW_ENCODE_ALG_WEP	api/wext.h	609;"	d
IW_ENCODE_DISABLED	api/wext.h	489;"	d
IW_ENCODE_ENABLED	api/wext.h	490;"	d
IW_ENCODE_EXT_GROUP_KEY	api/wext.h	615;"	d
IW_ENCODE_EXT_RX_SEQ_VALID	api/wext.h	614;"	d
IW_ENCODE_EXT_SET_TX_KEY	api/wext.h	616;"	d
IW_ENCODE_EXT_TX_SEQ_VALID	api/wext.h	613;"	d
IW_ENCODE_FLAGS	api/wext.h	487;"	d
IW_ENCODE_INDEX	api/wext.h	486;"	d
IW_ENCODE_MODE	api/wext.h	488;"	d
IW_ENCODE_NOKEY	api/wext.h	493;"	d
IW_ENCODE_OPEN	api/wext.h	492;"	d
IW_ENCODE_RESTRICTED	api/wext.h	491;"	d
IW_ENCODE_SEQ_MAX_SIZE	api/wext.h	606;"	d
IW_ENCODE_TEMP	api/wext.h	494;"	d
IW_ENCODING_TOKEN_MAX	api/wext.h	483;"	d
IW_ENC_CAPA_CIPHER_CCMP	api/wext.h	630;"	d
IW_ENC_CAPA_CIPHER_TKIP	api/wext.h	629;"	d
IW_ENC_CAPA_WPA	api/wext.h	627;"	d
IW_ENC_CAPA_WPA2	api/wext.h	628;"	d
IW_ESSID_MAX_SIZE	api/wext.h	451;"	d
IW_EVENT_CAPA_BASE	api/wext.h	635;"	d
IW_EVENT_CAPA_INDEX	api/wext.h	638;"	d
IW_EVENT_CAPA_K_0	api/wext.h	642;"	d
IW_EVENT_CAPA_K_1	api/wext.h	645;"	d
IW_EVENT_CAPA_MASK	api/wext.h	639;"	d
IW_EVENT_CAPA_SET	api/wext.h	647;"	d
IW_EVENT_CAPA_SET_KERNEL	api/wext.h	648;"	d
IW_EVENT_IDX	api/wext.h	401;"	d
IW_EV_ADDR_LEN	api/wext.h	1117;"	d
IW_EV_ADDR_PK_LEN	api/wext.h	1135;"	d
IW_EV_CHAR_LEN	api/wext.h	1113;"	d
IW_EV_CHAR_PK_LEN	api/wext.h	1131;"	d
IW_EV_FREQ_LEN	api/wext.h	1115;"	d
IW_EV_FREQ_PK_LEN	api/wext.h	1133;"	d
IW_EV_LCP_LEN	api/wext.h	1111;"	d
IW_EV_LCP_PK_LEN	api/wext.h	1129;"	d
IW_EV_PARAM_LEN	api/wext.h	1116;"	d
IW_EV_PARAM_PK_LEN	api/wext.h	1134;"	d
IW_EV_POINT_LEN	api/wext.h	1125;"	d
IW_EV_POINT_OFF	api/wext.h	1123;"	d
IW_EV_POINT_PK_LEN	api/wext.h	1137;"	d
IW_EV_QUAL_LEN	api/wext.h	1118;"	d
IW_EV_QUAL_PK_LEN	api/wext.h	1136;"	d
IW_EV_UINT_LEN	api/wext.h	1114;"	d
IW_EV_UINT_PK_LEN	api/wext.h	1132;"	d
IW_FREQ_AUTO	api/wext.h	475;"	d
IW_FREQ_FIXED	api/wext.h	476;"	d
IW_GENERIC_IE_MAX	api/wext.h	552;"	d
IW_HEADER_TYPE_ADDR	iwinfo_wext.h	54;"	d
IW_HEADER_TYPE_CHAR	iwinfo_wext.h	51;"	d
IW_HEADER_TYPE_FREQ	iwinfo_wext.h	53;"	d
IW_HEADER_TYPE_NULL	iwinfo_wext.h	50;"	d
IW_HEADER_TYPE_PARAM	iwinfo_wext.h	56;"	d
IW_HEADER_TYPE_POINT	iwinfo_wext.h	55;"	d
IW_HEADER_TYPE_QUAL	iwinfo_wext.h	57;"	d
IW_HEADER_TYPE_UINT	iwinfo_wext.h	52;"	d
IW_IE_CYPHER_NUM	iwinfo_wext.h	377;"	d
IW_IE_KEY_MGMT_NUM	iwinfo_wext.h	378;"	d
IW_IOCTL_IDX	api/wext.h	356;"	d
IW_IS_GET	api/wext.h	360;"	d
IW_IS_SET	api/wext.h	359;"	d
IW_MAX_AP	api/wext.h	448;"	d
IW_MAX_BITRATES	api/wext.h	436;"	d
IW_MAX_ENCODING_SIZES	api/wext.h	480;"	d
IW_MAX_FREQUENCIES	api/wext.h	430;"	d
IW_MAX_SPY	api/wext.h	444;"	d
IW_MAX_TXPOWER	api/wext.h	439;"	d
IW_MICFAILURE_COUNT	api/wext.h	623;"	d
IW_MICFAILURE_GROUP	api/wext.h	620;"	d
IW_MICFAILURE_KEY_ID	api/wext.h	619;"	d
IW_MICFAILURE_PAIRWISE	api/wext.h	621;"	d
IW_MICFAILURE_STAKEY	api/wext.h	622;"	d
IW_MLME_ASSOC	api/wext.h	558;"	d
IW_MLME_AUTH	api/wext.h	557;"	d
IW_MLME_DEAUTH	api/wext.h	555;"	d
IW_MLME_DISASSOC	api/wext.h	556;"	d
IW_MODE_ADHOC	api/wext.h	455;"	d
IW_MODE_AUTO	api/wext.h	454;"	d
IW_MODE_INFRA	api/wext.h	456;"	d
IW_MODE_MASTER	api/wext.h	457;"	d
IW_MODE_MONITOR	api/wext.h	460;"	d
IW_MODE_REPEAT	api/wext.h	458;"	d
IW_MODE_SECOND	api/wext.h	459;"	d
IW_MODUL_11A	api/wext.h	658;"	d
IW_MODUL_11AB	api/wext.h	659;"	d
IW_MODUL_11AG	api/wext.h	662;"	d
IW_MODUL_11B	api/wext.h	655;"	d
IW_MODUL_11G	api/wext.h	661;"	d
IW_MODUL_ALL	api/wext.h	651;"	d
IW_MODUL_CCK	api/wext.h	654;"	d
IW_MODUL_CUSTOM	api/wext.h	665;"	d
IW_MODUL_DS	api/wext.h	653;"	d
IW_MODUL_FH	api/wext.h	652;"	d
IW_MODUL_OFDM_A	api/wext.h	657;"	d
IW_MODUL_OFDM_G	api/wext.h	660;"	d
IW_MODUL_PBCC	api/wext.h	656;"	d
IW_MODUL_TURBO	api/wext.h	663;"	d
IW_PMKID_CAND_PREAUTH	api/wext.h	878;"	d
IW_PMKID_LEN	api/wext.h	860;"	d
IW_PMKSA_ADD	api/wext.h	856;"	d
IW_PMKSA_FLUSH	api/wext.h	858;"	d
IW_PMKSA_REMOVE	api/wext.h	857;"	d
IW_POWER_ALL_R	api/wext.h	505;"	d
IW_POWER_FORCE_S	api/wext.h	506;"	d
IW_POWER_MAX	api/wext.h	510;"	d
IW_POWER_MIN	api/wext.h	509;"	d
IW_POWER_MODE	api/wext.h	502;"	d
IW_POWER_MODIFIER	api/wext.h	508;"	d
IW_POWER_MULTICAST_R	api/wext.h	504;"	d
IW_POWER_ON	api/wext.h	497;"	d
IW_POWER_PERIOD	api/wext.h	499;"	d
IW_POWER_RELATIVE	api/wext.h	511;"	d
IW_POWER_REPEATER	api/wext.h	507;"	d
IW_POWER_SAVING	api/wext.h	501;"	d
IW_POWER_TIMEOUT	api/wext.h	500;"	d
IW_POWER_TYPE	api/wext.h	498;"	d
IW_POWER_UNICAST_R	api/wext.h	503;"	d
IW_PRIV_SIZE_FIXED	api/wext.h	418;"	d
IW_PRIV_SIZE_MASK	api/wext.h	420;"	d
IW_PRIV_TYPE_ADDR	api/wext.h	416;"	d
IW_PRIV_TYPE_BYTE	api/wext.h	412;"	d
IW_PRIV_TYPE_CHAR	api/wext.h	413;"	d
IW_PRIV_TYPE_FLOAT	api/wext.h	415;"	d
IW_PRIV_TYPE_INT	api/wext.h	414;"	d
IW_PRIV_TYPE_MASK	api/wext.h	410;"	d
IW_PRIV_TYPE_NONE	api/wext.h	411;"	d
IW_QUAL_ALL_INVALID	api/wext.h	472;"	d
IW_QUAL_ALL_UPDATED	api/wext.h	466;"	d
IW_QUAL_DBM	api/wext.h	467;"	d
IW_QUAL_LEVEL_INVALID	api/wext.h	469;"	d
IW_QUAL_LEVEL_UPDATED	api/wext.h	464;"	d
IW_QUAL_NOISE_INVALID	api/wext.h	470;"	d
IW_QUAL_NOISE_UPDATED	api/wext.h	465;"	d
IW_QUAL_QUAL_INVALID	api/wext.h	468;"	d
IW_QUAL_QUAL_UPDATED	api/wext.h	463;"	d
IW_QUAL_RCPI	api/wext.h	471;"	d
IW_RETRY_LIFETIME	api/wext.h	524;"	d
IW_RETRY_LIMIT	api/wext.h	523;"	d
IW_RETRY_LONG	api/wext.h	530;"	d
IW_RETRY_MAX	api/wext.h	527;"	d
IW_RETRY_MIN	api/wext.h	526;"	d
IW_RETRY_MODIFIER	api/wext.h	525;"	d
IW_RETRY_ON	api/wext.h	521;"	d
IW_RETRY_RELATIVE	api/wext.h	528;"	d
IW_RETRY_SHORT	api/wext.h	529;"	d
IW_RETRY_TYPE	api/wext.h	522;"	d
IW_SCAN_ALL_ESSID	api/wext.h	534;"	d
IW_SCAN_ALL_FREQ	api/wext.h	536;"	d
IW_SCAN_ALL_MODE	api/wext.h	538;"	d
IW_SCAN_ALL_RATE	api/wext.h	540;"	d
IW_SCAN_DEFAULT	api/wext.h	533;"	d
IW_SCAN_MAX_DATA	api/wext.h	546;"	d
IW_SCAN_THIS_ESSID	api/wext.h	535;"	d
IW_SCAN_THIS_FREQ	api/wext.h	537;"	d
IW_SCAN_THIS_MODE	api/wext.h	539;"	d
IW_SCAN_THIS_RATE	api/wext.h	541;"	d
IW_SCAN_TYPE_ACTIVE	api/wext.h	543;"	d
IW_SCAN_TYPE_PASSIVE	api/wext.h	544;"	d
IW_TXPOW_DBM	api/wext.h	515;"	d
IW_TXPOW_MWATT	api/wext.h	516;"	d
IW_TXPOW_RANGE	api/wext.h	518;"	d
IW_TXPOW_RELATIVE	api/wext.h	517;"	d
IW_TXPOW_TYPE	api/wext.h	514;"	d
LOG10_MAGIC	include/iwinfo/utils.h	27;"	d
LUA_REG	include/iwinfo/lua.h	45;"	d
LUA_WRAP_INT_OP	include/iwinfo/lua.h	48;"	d
LUA_WRAP_STRING_OP	include/iwinfo/lua.h	60;"	d
LUA_WRAP_STRUCT_OP	include/iwinfo/lua.h	73;"	d
MAX_NL80211_IFACE_COMB	api/nl80211.h	/^	MAX_NL80211_IFACE_COMB = NUM_NL80211_IFACE_COMB - 1$/;"	e	enum:nl80211_if_combination_attrs
MAX_NL80211_IFACE_LIMIT	api/nl80211.h	/^	MAX_NL80211_IFACE_LIMIT = NUM_NL80211_IFACE_LIMIT - 1$/;"	e	enum:nl80211_iface_limit_attrs
MAX_NL80211_PKTPAT	api/nl80211.h	/^	MAX_NL80211_PKTPAT = NUM_NL80211_PKTPAT - 1,$/;"	e	enum:nl80211_packet_pattern_attr
MAX_NL80211_PLINK_STATES	api/nl80211.h	/^	MAX_NL80211_PLINK_STATES = NUM_NL80211_PLINK_STATES - 1$/;"	e	enum:nl80211_plink_state
MAX_NL80211_PMKSA_CANDIDATE	api/nl80211.h	/^	MAX_NL80211_PMKSA_CANDIDATE = NUM_NL80211_PMKSA_CANDIDATE - 1$/;"	e	enum:nl80211_pmksa_candidate_attr
MAX_NL80211_REKEY_DATA	api/nl80211.h	/^	MAX_NL80211_REKEY_DATA = NUM_NL80211_REKEY_DATA - 1$/;"	e	enum:nl80211_rekey_data
MAX_NL80211_WOWLAN_PKTPAT	api/nl80211.h	3420;"	d
MAX_NL80211_WOWLAN_TCP	api/nl80211.h	/^	MAX_NL80211_WOWLAN_TCP = NUM_NL80211_WOWLAN_TCP - 1$/;"	e	enum:nl80211_wowlan_tcp_attrs
MAX_NL80211_WOWLAN_TRIG	api/nl80211.h	/^	MAX_NL80211_WOWLAN_TRIG = NUM_NL80211_WOWLAN_TRIG - 1$/;"	e	enum:nl80211_wowlan_triggers
NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED	api/nl80211.h	/^	NL80211_ACL_POLICY_ACCEPT_UNLESS_LISTED,$/;"	e	enum:nl80211_acl_policy
NL80211_ACL_POLICY_DENY_UNLESS_LISTED	api/nl80211.h	/^	NL80211_ACL_POLICY_DENY_UNLESS_LISTED,$/;"	e	enum:nl80211_acl_policy
NL80211_AC_BE	api/nl80211.h	/^	NL80211_AC_BE,$/;"	e	enum:nl80211_ac
NL80211_AC_BK	api/nl80211.h	/^	NL80211_AC_BK,$/;"	e	enum:nl80211_ac
NL80211_AC_VI	api/nl80211.h	/^	NL80211_AC_VI,$/;"	e	enum:nl80211_ac
NL80211_AC_VO	api/nl80211.h	/^	NL80211_AC_VO,$/;"	e	enum:nl80211_ac
NL80211_ATTR_4ADDR	api/nl80211.h	/^	NL80211_ATTR_4ADDR,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_ACK	api/nl80211.h	/^	NL80211_ATTR_ACK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_ACL_POLICY	api/nl80211.h	/^	NL80211_ATTR_ACL_POLICY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AKM_SUITES	api/nl80211.h	/^	NL80211_ATTR_AKM_SUITES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AKM_SUITES	api/nl80211.h	1970;"	d
NL80211_ATTR_AP_ISOLATE	api/nl80211.h	/^	NL80211_ATTR_AP_ISOLATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AUTH_TYPE	api/nl80211.h	/^	NL80211_ATTR_AUTH_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_AUTH_TYPE	api/nl80211.h	1965;"	d
NL80211_ATTR_BEACON_HEAD	api/nl80211.h	/^	NL80211_ATTR_BEACON_HEAD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BEACON_INTERVAL	api/nl80211.h	/^	NL80211_ATTR_BEACON_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BEACON_TAIL	api/nl80211.h	/^	NL80211_ATTR_BEACON_TAIL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BG_SCAN_PERIOD	api/nl80211.h	/^	NL80211_ATTR_BG_SCAN_PERIOD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS	api/nl80211.h	/^	NL80211_ATTR_BSS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_BASIC_RATES	api/nl80211.h	/^	NL80211_ATTR_BSS_BASIC_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_BASIC_RATES	api/nl80211.h	1955;"	d
NL80211_ATTR_BSS_CTS_PROT	api/nl80211.h	/^	NL80211_ATTR_BSS_CTS_PROT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_HT_OPMODE	api/nl80211.h	/^	NL80211_ATTR_BSS_HT_OPMODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_SHORT_PREAMBLE	api/nl80211.h	/^	NL80211_ATTR_BSS_SHORT_PREAMBLE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_BSS_SHORT_SLOT_TIME	api/nl80211.h	/^	NL80211_ATTR_BSS_SHORT_SLOT_TIME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CENTER_FREQ1	api/nl80211.h	/^	NL80211_ATTR_CENTER_FREQ1,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CENTER_FREQ2	api/nl80211.h	/^	NL80211_ATTR_CENTER_FREQ2,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CHANNEL_WIDTH	api/nl80211.h	/^	NL80211_ATTR_CHANNEL_WIDTH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CH_SWITCH_BLOCK_TX	api/nl80211.h	/^	NL80211_ATTR_CH_SWITCH_BLOCK_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CH_SWITCH_COUNT	api/nl80211.h	/^	NL80211_ATTR_CH_SWITCH_COUNT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES	api/nl80211.h	/^	NL80211_ATTR_CIPHER_SUITES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES_PAIRWISE	api/nl80211.h	/^	NL80211_ATTR_CIPHER_SUITES_PAIRWISE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITES_PAIRWISE	api/nl80211.h	1967;"	d
NL80211_ATTR_CIPHER_SUITE_GROUP	api/nl80211.h	/^	NL80211_ATTR_CIPHER_SUITE_GROUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CIPHER_SUITE_GROUP	api/nl80211.h	1968;"	d
NL80211_ATTR_COALESCE_RULE	api/nl80211.h	/^	NL80211_ATTR_COALESCE_RULE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_COALESCE_RULE_CONDITION	api/nl80211.h	/^	NL80211_ATTR_COALESCE_RULE_CONDITION,$/;"	e	enum:nl80211_attr_coalesce_rule
NL80211_ATTR_COALESCE_RULE_DELAY	api/nl80211.h	/^	NL80211_ATTR_COALESCE_RULE_DELAY,$/;"	e	enum:nl80211_attr_coalesce_rule
NL80211_ATTR_COALESCE_RULE_MAX	api/nl80211.h	/^	NL80211_ATTR_COALESCE_RULE_MAX = NUM_NL80211_ATTR_COALESCE_RULE - 1$/;"	e	enum:nl80211_attr_coalesce_rule
NL80211_ATTR_COALESCE_RULE_PKT_PATTERN	api/nl80211.h	/^	NL80211_ATTR_COALESCE_RULE_PKT_PATTERN,$/;"	e	enum:nl80211_attr_coalesce_rule
NL80211_ATTR_CONN_FAILED_REASON	api/nl80211.h	/^	NL80211_ATTR_CONN_FAILED_REASON,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CONTROL_PORT	api/nl80211.h	/^	NL80211_ATTR_CONTROL_PORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CONTROL_PORT_ETHERTYPE	api/nl80211.h	/^	NL80211_ATTR_CONTROL_PORT_ETHERTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT	api/nl80211.h	/^	NL80211_ATTR_CONTROL_PORT_NO_ENCRYPT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_COOKIE	api/nl80211.h	/^	NL80211_ATTR_COOKIE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CQM	api/nl80211.h	/^	NL80211_ATTR_CQM,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CQM_MAX	api/nl80211.h	/^	NL80211_ATTR_CQM_MAX = __NL80211_ATTR_CQM_AFTER_LAST - 1$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_PKT_LOSS_EVENT	api/nl80211.h	/^	NL80211_ATTR_CQM_PKT_LOSS_EVENT,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_HYST	api/nl80211.h	/^	NL80211_ATTR_CQM_RSSI_HYST,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_THOLD	api/nl80211.h	/^	NL80211_ATTR_CQM_RSSI_THOLD,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT	api/nl80211.h	/^	NL80211_ATTR_CQM_RSSI_THRESHOLD_EVENT,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_TXE_INTVL	api/nl80211.h	/^	NL80211_ATTR_CQM_TXE_INTVL,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_TXE_PKTS	api/nl80211.h	/^	NL80211_ATTR_CQM_TXE_PKTS,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CQM_TXE_RATE	api/nl80211.h	/^	NL80211_ATTR_CQM_TXE_RATE,$/;"	e	enum:nl80211_attr_cqm
NL80211_ATTR_CRIT_PROT_ID	api/nl80211.h	/^	NL80211_ATTR_CRIT_PROT_ID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CSA_C_OFFSETS_TX	api/nl80211.h	/^	NL80211_ATTR_CSA_C_OFFSETS_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CSA_C_OFF_BEACON	api/nl80211.h	/^	NL80211_ATTR_CSA_C_OFF_BEACON,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CSA_C_OFF_PRESP	api/nl80211.h	/^	NL80211_ATTR_CSA_C_OFF_PRESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_CSA_IES	api/nl80211.h	/^	NL80211_ATTR_CSA_IES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DEVICE_AP_SME	api/nl80211.h	/^	NL80211_ATTR_DEVICE_AP_SME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DFS_CAC_TIME	api/nl80211.h	/^	NL80211_ATTR_DFS_CAC_TIME,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_DFS_REGION	api/nl80211.h	/^	NL80211_ATTR_DFS_REGION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DISABLE_HT	api/nl80211.h	/^	NL80211_ATTR_DISABLE_HT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DISABLE_VHT	api/nl80211.h	/^	NL80211_ATTR_DISABLE_VHT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DISCONNECTED_BY_AP	api/nl80211.h	/^	NL80211_ATTR_DISCONNECTED_BY_AP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DONT_WAIT_FOR_ACK	api/nl80211.h	/^	NL80211_ATTR_DONT_WAIT_FOR_ACK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DTIM_PERIOD	api/nl80211.h	/^	NL80211_ATTR_DTIM_PERIOD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_DURATION	api/nl80211.h	/^	NL80211_ATTR_DURATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_EXT_CAPA	api/nl80211.h	/^	NL80211_ATTR_EXT_CAPA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_EXT_CAPA_MASK	api/nl80211.h	/^	NL80211_ATTR_EXT_CAPA_MASK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FEATURE_FLAGS	api/nl80211.h	/^	NL80211_ATTR_FEATURE_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FEATURE_FLAGS	api/nl80211.h	1973;"	d
NL80211_ATTR_FEATURE_FLAGS	api/nl80211.h	916;"	d
NL80211_ATTR_FRAME	api/nl80211.h	/^	NL80211_ATTR_FRAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FRAME	api/nl80211.h	1963;"	d
NL80211_ATTR_FRAME_MATCH	api/nl80211.h	/^	NL80211_ATTR_FRAME_MATCH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FRAME_TYPE	api/nl80211.h	/^	NL80211_ATTR_FRAME_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_AFTER	api/nl80211.h	/^	NL80211_ATTR_FREQ_AFTER,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_BEFORE	api/nl80211.h	/^	NL80211_ATTR_FREQ_BEFORE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_FIXED	api/nl80211.h	/^	NL80211_ATTR_FREQ_FIXED,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_FREQ_RANGE_END	api/nl80211.h	/^	NL80211_ATTR_FREQ_RANGE_END,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_FREQ_RANGE_MAX_BW	api/nl80211.h	/^	NL80211_ATTR_FREQ_RANGE_MAX_BW,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_FREQ_RANGE_START	api/nl80211.h	/^	NL80211_ATTR_FREQ_RANGE_START,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_GENERATION	api/nl80211.h	/^	NL80211_ATTR_GENERATION, \/* replaces old SCAN_GENERATION *\/$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HANDLE_DFS	api/nl80211.h	/^	NL80211_ATTR_HANDLE_DFS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HIDDEN_SSID	api/nl80211.h	/^	NL80211_ATTR_HIDDEN_SSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HT_CAPABILITY	api/nl80211.h	/^	NL80211_ATTR_HT_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_HT_CAPABILITY	api/nl80211.h	1954;"	d
NL80211_ATTR_HT_CAPABILITY_MASK	api/nl80211.h	/^	NL80211_ATTR_HT_CAPABILITY_MASK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE	api/nl80211.h	/^	NL80211_ATTR_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE	api/nl80211.h	1960;"	d
NL80211_ATTR_IE_ASSOC_RESP	api/nl80211.h	/^	NL80211_ATTR_IE_ASSOC_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE_PROBE_RESP	api/nl80211.h	/^	NL80211_ATTR_IE_PROBE_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IE_RIC	api/nl80211.h	/^	NL80211_ATTR_IE_RIC,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFACE_SOCKET_OWNER	api/nl80211.h	/^	NL80211_ATTR_IFACE_SOCKET_OWNER,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFINDEX	api/nl80211.h	/^	NL80211_ATTR_IFINDEX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFNAME	api/nl80211.h	/^	NL80211_ATTR_IFNAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_IFTYPE	api/nl80211.h	/^	NL80211_ATTR_IFTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_INACTIVITY_TIMEOUT	api/nl80211.h	/^	NL80211_ATTR_INACTIVITY_TIMEOUT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_INTERFACE_COMBINATIONS	api/nl80211.h	/^	NL80211_ATTR_INTERFACE_COMBINATIONS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY	api/nl80211.h	/^	NL80211_ATTR_KEY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY	api/nl80211.h	1971;"	d
NL80211_ATTR_KEYS	api/nl80211.h	/^	NL80211_ATTR_KEYS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEYS	api/nl80211.h	1972;"	d
NL80211_ATTR_KEY_CIPHER	api/nl80211.h	/^	NL80211_ATTR_KEY_CIPHER,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DATA	api/nl80211.h	/^	NL80211_ATTR_KEY_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT	api/nl80211.h	/^	NL80211_ATTR_KEY_DEFAULT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT_MGMT	api/nl80211.h	/^	NL80211_ATTR_KEY_DEFAULT_MGMT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_DEFAULT_TYPES	api/nl80211.h	/^	NL80211_ATTR_KEY_DEFAULT_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_IDX	api/nl80211.h	/^	NL80211_ATTR_KEY_IDX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_SEQ	api/nl80211.h	/^	NL80211_ATTR_KEY_SEQ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_KEY_TYPE	api/nl80211.h	/^	NL80211_ATTR_KEY_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_LOCAL_MESH_POWER_MODE	api/nl80211.h	/^	NL80211_ATTR_LOCAL_MESH_POWER_MODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_LOCAL_STATE_CHANGE	api/nl80211.h	/^	NL80211_ATTR_LOCAL_STATE_CHANGE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAC	api/nl80211.h	/^	NL80211_ATTR_MAC,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAC_ACL_MAX	api/nl80211.h	/^	NL80211_ATTR_MAC_ACL_MAX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAC_ADDRS	api/nl80211.h	/^	NL80211_ATTR_MAC_ADDRS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAC_HINT	api/nl80211.h	/^	NL80211_ATTR_MAC_HINT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX	api/nl80211.h	/^	NL80211_ATTR_MAX = __NL80211_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_AP_ASSOC_STA	api/nl80211.h	/^	NL80211_ATTR_MAX_AP_ASSOC_STA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_CRIT_PROT_DURATION	api/nl80211.h	/^	NL80211_ATTR_MAX_CRIT_PROT_DURATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_CSA_COUNTERS	api/nl80211.h	/^	NL80211_ATTR_MAX_CSA_COUNTERS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_MATCH_SETS	api/nl80211.h	/^	NL80211_ATTR_MAX_MATCH_SETS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_PMKIDS	api/nl80211.h	/^	NL80211_ATTR_MAX_NUM_PMKIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_SCAN_SSIDS	api/nl80211.h	/^	NL80211_ATTR_MAX_NUM_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS	api/nl80211.h	/^	NL80211_ATTR_MAX_NUM_SCHED_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION	api/nl80211.h	/^	NL80211_ATTR_MAX_REMAIN_ON_CHANNEL_DURATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_SCAN_IE_LEN	api/nl80211.h	/^	NL80211_ATTR_MAX_SCAN_IE_LEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN	api/nl80211.h	/^	NL80211_ATTR_MAX_SCHED_SCAN_IE_LEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MCAST_RATE	api/nl80211.h	/^	NL80211_ATTR_MCAST_RATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MDID	api/nl80211.h	/^	NL80211_ATTR_MDID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_CONFIG	api/nl80211.h	/^	NL80211_ATTR_MESH_CONFIG,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_ID	api/nl80211.h	/^	NL80211_ATTR_MESH_ID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MESH_PARAMS	api/nl80211.h	1947;"	d
NL80211_ATTR_MESH_SETUP	api/nl80211.h	/^	NL80211_ATTR_MESH_SETUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MGMT_SUBTYPE	api/nl80211.h	/^	NL80211_ATTR_MGMT_SUBTYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MGMT_SUBTYPE	api/nl80211.h	1959;"	d
NL80211_ATTR_MNTR_FLAGS	api/nl80211.h	/^	NL80211_ATTR_MNTR_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MPATH_INFO	api/nl80211.h	/^	NL80211_ATTR_MPATH_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_MPATH_NEXT_HOP	api/nl80211.h	/^	NL80211_ATTR_MPATH_NEXT_HOP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_NOACK_MAP	api/nl80211.h	/^	NL80211_ATTR_NOACK_MAP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_OFFCHANNEL_TX_OK	api/nl80211.h	/^	NL80211_ATTR_OFFCHANNEL_TX_OK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_OPMODE_NOTIF	api/nl80211.h	/^	NL80211_ATTR_OPMODE_NOTIF,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_P2P_CTWINDOW	api/nl80211.h	/^	NL80211_ATTR_P2P_CTWINDOW,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_P2P_OPPPS	api/nl80211.h	/^	NL80211_ATTR_P2P_OPPPS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PEER_AID	api/nl80211.h	/^	NL80211_ATTR_PEER_AID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PID	api/nl80211.h	/^	NL80211_ATTR_PID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PMKID	api/nl80211.h	/^	NL80211_ATTR_PMKID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PMKSA_CANDIDATE	api/nl80211.h	/^	NL80211_ATTR_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN	api/nl80211.h	/^	NL80211_ATTR_POWER_RULE_MAX_ANT_GAIN,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_POWER_RULE_MAX_EIRP	api/nl80211.h	/^	NL80211_ATTR_POWER_RULE_MAX_EIRP,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_PREV_BSSID	api/nl80211.h	/^	NL80211_ATTR_PREV_BSSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PRIVACY	api/nl80211.h	/^	NL80211_ATTR_PRIVACY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PROBE_RESP	api/nl80211.h	/^	NL80211_ATTR_PROBE_RESP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PROBE_RESP_OFFLOAD	api/nl80211.h	/^	NL80211_ATTR_PROBE_RESP_OFFLOAD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PROTOCOL_FEATURES	api/nl80211.h	/^	NL80211_ATTR_PROTOCOL_FEATURES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_PS_STATE	api/nl80211.h	/^	NL80211_ATTR_PS_STATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_QOS_MAP	api/nl80211.h	/^	NL80211_ATTR_QOS_MAP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RADAR_EVENT	api/nl80211.h	/^	NL80211_ATTR_RADAR_EVENT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REASON_CODE	api/nl80211.h	/^	NL80211_ATTR_REASON_CODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REASON_CODE	api/nl80211.h	1966;"	d
NL80211_ATTR_REG_ALPHA2	api/nl80211.h	/^	NL80211_ATTR_REG_ALPHA2,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_INITIATOR	api/nl80211.h	/^	NL80211_ATTR_REG_INITIATOR,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_INITIATOR	api/nl80211.h	1961;"	d
NL80211_ATTR_REG_RULES	api/nl80211.h	/^	NL80211_ATTR_REG_RULES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_RULE_FLAGS	api/nl80211.h	/^	NL80211_ATTR_REG_RULE_FLAGS,$/;"	e	enum:nl80211_reg_rule_attr
NL80211_ATTR_REG_TYPE	api/nl80211.h	/^	NL80211_ATTR_REG_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REG_TYPE	api/nl80211.h	1962;"	d
NL80211_ATTR_REKEY_DATA	api/nl80211.h	/^	NL80211_ATTR_REKEY_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_REQ_IE	api/nl80211.h	/^	NL80211_ATTR_REQ_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RESP_IE	api/nl80211.h	/^	NL80211_ATTR_RESP_IE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_ROAM_SUPPORT	api/nl80211.h	/^	NL80211_ATTR_ROAM_SUPPORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RXMGMT_FLAGS	api/nl80211.h	/^	NL80211_ATTR_RXMGMT_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RX_FRAME_TYPES	api/nl80211.h	/^	NL80211_ATTR_RX_FRAME_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_RX_SIGNAL_DBM	api/nl80211.h	/^	NL80211_ATTR_RX_SIGNAL_DBM,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SAE_DATA	api/nl80211.h	/^	NL80211_ATTR_SAE_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_FLAGS	api/nl80211.h	/^	NL80211_ATTR_SCAN_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_FREQUENCIES	api/nl80211.h	/^	NL80211_ATTR_SCAN_FREQUENCIES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_GENERATION	api/nl80211.h	1946;"	d
NL80211_ATTR_SCAN_SSIDS	api/nl80211.h	/^	NL80211_ATTR_SCAN_SSIDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCAN_SUPP_RATES	api/nl80211.h	/^	NL80211_ATTR_SCAN_SUPP_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_INTERVAL	api/nl80211.h	/^	NL80211_ATTR_SCHED_SCAN_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_MATCH	api/nl80211.h	/^	NL80211_ATTR_SCHED_SCAN_MATCH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SCHED_SCAN_MATCH_SSID	api/nl80211.h	2562;"	d
NL80211_ATTR_SOFTWARE_IFTYPES	api/nl80211.h	/^	NL80211_ATTR_SOFTWARE_IFTYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SPLIT_WIPHY_DUMP	api/nl80211.h	/^	NL80211_ATTR_SPLIT_WIPHY_DUMP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SSID	api/nl80211.h	/^	NL80211_ATTR_SSID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SSID	api/nl80211.h	1964;"	d
NL80211_ATTR_STATUS_CODE	api/nl80211.h	/^	NL80211_ATTR_STATUS_CODE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_AID	api/nl80211.h	/^	NL80211_ATTR_STA_AID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_CAPABILITY	api/nl80211.h	/^	NL80211_ATTR_STA_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_EXT_CAPABILITY	api/nl80211.h	/^	NL80211_ATTR_STA_EXT_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_FLAGS	api/nl80211.h	/^	NL80211_ATTR_STA_FLAGS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_FLAGS2	api/nl80211.h	/^	NL80211_ATTR_STA_FLAGS2,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_INFO	api/nl80211.h	/^	NL80211_ATTR_STA_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_LISTEN_INTERVAL	api/nl80211.h	/^	NL80211_ATTR_STA_LISTEN_INTERVAL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_PLINK_ACTION	api/nl80211.h	/^	NL80211_ATTR_STA_PLINK_ACTION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_PLINK_STATE	api/nl80211.h	/^	NL80211_ATTR_STA_PLINK_STATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_SUPPORTED_CHANNELS	api/nl80211.h	/^	NL80211_ATTR_STA_SUPPORTED_CHANNELS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES	api/nl80211.h	/^	NL80211_ATTR_STA_SUPPORTED_OPER_CLASSES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_SUPPORTED_RATES	api/nl80211.h	/^	NL80211_ATTR_STA_SUPPORTED_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_VLAN	api/nl80211.h	/^	NL80211_ATTR_STA_VLAN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_STA_WME	api/nl80211.h	/^	NL80211_ATTR_STA_WME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORTED_COMMANDS	api/nl80211.h	/^	NL80211_ATTR_SUPPORTED_COMMANDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORTED_IFTYPES	api/nl80211.h	/^	NL80211_ATTR_SUPPORTED_IFTYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_10_MHZ	api/nl80211.h	/^	NL80211_ATTR_SUPPORT_10_MHZ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_5_MHZ	api/nl80211.h	/^	NL80211_ATTR_SUPPORT_5_MHZ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_AP_UAPSD	api/nl80211.h	/^	NL80211_ATTR_SUPPORT_AP_UAPSD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_IBSS_RSN	api/nl80211.h	/^	NL80211_ATTR_SUPPORT_IBSS_RSN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SUPPORT_MESH_AUTH	api/nl80211.h	/^	NL80211_ATTR_SUPPORT_MESH_AUTH,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_SURVEY_INFO	api/nl80211.h	/^	NL80211_ATTR_SURVEY_INFO,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_ACTION	api/nl80211.h	/^	NL80211_ATTR_TDLS_ACTION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_DIALOG_TOKEN	api/nl80211.h	/^	NL80211_ATTR_TDLS_DIALOG_TOKEN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_EXTERNAL_SETUP	api/nl80211.h	/^	NL80211_ATTR_TDLS_EXTERNAL_SETUP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_OPERATION	api/nl80211.h	/^	NL80211_ATTR_TDLS_OPERATION,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_PEER_CAPABILITY	api/nl80211.h	/^	NL80211_ATTR_TDLS_PEER_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TDLS_SUPPORT	api/nl80211.h	/^	NL80211_ATTR_TDLS_SUPPORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TESTDATA	api/nl80211.h	/^	NL80211_ATTR_TESTDATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TIMED_OUT	api/nl80211.h	/^	NL80211_ATTR_TIMED_OUT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_FRAME_TYPES	api/nl80211.h	/^	NL80211_ATTR_TX_FRAME_TYPES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_NO_CCK_RATE	api/nl80211.h	/^	NL80211_ATTR_TX_NO_CCK_RATE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_TX_RATES	api/nl80211.h	/^	NL80211_ATTR_TX_RATES,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_UNSPEC	api/nl80211.h	/^	NL80211_ATTR_UNSPEC,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_USER_REG_HINT_TYPE	api/nl80211.h	/^	NL80211_ATTR_USER_REG_HINT_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_USE_MFP	api/nl80211.h	/^	NL80211_ATTR_USE_MFP,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VENDOR_DATA	api/nl80211.h	/^	NL80211_ATTR_VENDOR_DATA,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VENDOR_EVENTS	api/nl80211.h	/^	NL80211_ATTR_VENDOR_EVENTS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VENDOR_ID	api/nl80211.h	/^	NL80211_ATTR_VENDOR_ID,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VENDOR_SUBCMD	api/nl80211.h	/^	NL80211_ATTR_VENDOR_SUBCMD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VHT_CAPABILITY	api/nl80211.h	/^	NL80211_ATTR_VHT_CAPABILITY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_VHT_CAPABILITY_MASK	api/nl80211.h	/^	NL80211_ATTR_VHT_CAPABILITY_MASK,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WDEV	api/nl80211.h	/^	NL80211_ATTR_WDEV,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY	api/nl80211.h	/^	NL80211_ATTR_WIPHY,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX	api/nl80211.h	/^	NL80211_ATTR_WIPHY_ANTENNA_AVAIL_RX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX	api/nl80211.h	/^	NL80211_ATTR_WIPHY_ANTENNA_AVAIL_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_GAIN	api/nl80211.h	/^	NL80211_ATTR_WIPHY_ANTENNA_GAIN,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_RX	api/nl80211.h	/^	NL80211_ATTR_WIPHY_ANTENNA_RX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_ANTENNA_TX	api/nl80211.h	/^	NL80211_ATTR_WIPHY_ANTENNA_TX,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_BANDS	api/nl80211.h	/^	NL80211_ATTR_WIPHY_BANDS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_CHANNEL_TYPE	api/nl80211.h	/^	NL80211_ATTR_WIPHY_CHANNEL_TYPE,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_CHANNEL_TYPE	api/nl80211.h	1958;"	d
NL80211_ATTR_WIPHY_COVERAGE_CLASS	api/nl80211.h	/^	NL80211_ATTR_WIPHY_COVERAGE_CLASS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FRAG_THRESHOLD	api/nl80211.h	/^	NL80211_ATTR_WIPHY_FRAG_THRESHOLD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FREQ	api/nl80211.h	/^	NL80211_ATTR_WIPHY_FREQ,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_FREQ	api/nl80211.h	1957;"	d
NL80211_ATTR_WIPHY_FREQ_HINT	api/nl80211.h	/^	NL80211_ATTR_WIPHY_FREQ_HINT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_NAME	api/nl80211.h	/^	NL80211_ATTR_WIPHY_NAME,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RETRY_LONG	api/nl80211.h	/^	NL80211_ATTR_WIPHY_RETRY_LONG,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RETRY_SHORT	api/nl80211.h	/^	NL80211_ATTR_WIPHY_RETRY_SHORT,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_RTS_THRESHOLD	api/nl80211.h	/^	NL80211_ATTR_WIPHY_RTS_THRESHOLD,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TXQ_PARAMS	api/nl80211.h	/^	NL80211_ATTR_WIPHY_TXQ_PARAMS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TXQ_PARAMS	api/nl80211.h	1956;"	d
NL80211_ATTR_WIPHY_TX_POWER_LEVEL	api/nl80211.h	/^	NL80211_ATTR_WIPHY_TX_POWER_LEVEL,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WIPHY_TX_POWER_SETTING	api/nl80211.h	/^	NL80211_ATTR_WIPHY_TX_POWER_SETTING,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WOWLAN_TRIGGERS	api/nl80211.h	/^	NL80211_ATTR_WOWLAN_TRIGGERS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED	api/nl80211.h	/^	NL80211_ATTR_WOWLAN_TRIGGERS_SUPPORTED,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WPA_VERSIONS	api/nl80211.h	/^	NL80211_ATTR_WPA_VERSIONS,$/;"	e	enum:nl80211_attrs
NL80211_ATTR_WPA_VERSIONS	api/nl80211.h	1969;"	d
NL80211_AUTHTYPE_AUTOMATIC	api/nl80211.h	/^	NL80211_AUTHTYPE_AUTOMATIC$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_FT	api/nl80211.h	/^	NL80211_AUTHTYPE_FT,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_MAX	api/nl80211.h	/^	NL80211_AUTHTYPE_MAX = __NL80211_AUTHTYPE_NUM - 1,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_NETWORK_EAP	api/nl80211.h	/^	NL80211_AUTHTYPE_NETWORK_EAP,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_OPEN_SYSTEM	api/nl80211.h	/^	NL80211_AUTHTYPE_OPEN_SYSTEM,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_SAE	api/nl80211.h	/^	NL80211_AUTHTYPE_SAE,$/;"	e	enum:nl80211_auth_type
NL80211_AUTHTYPE_SHARED_KEY	api/nl80211.h	/^	NL80211_AUTHTYPE_SHARED_KEY,$/;"	e	enum:nl80211_auth_type
NL80211_BAND_2GHZ	api/nl80211.h	/^	NL80211_BAND_2GHZ,$/;"	e	enum:nl80211_band
NL80211_BAND_5GHZ	api/nl80211.h	/^	NL80211_BAND_5GHZ,$/;"	e	enum:nl80211_band
NL80211_BAND_60GHZ	api/nl80211.h	/^	NL80211_BAND_60GHZ,$/;"	e	enum:nl80211_band
NL80211_BAND_ATTR_FREQS	api/nl80211.h	/^	NL80211_BAND_ATTR_FREQS,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_AMPDU_DENSITY	api/nl80211.h	/^	NL80211_BAND_ATTR_HT_AMPDU_DENSITY,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_AMPDU_FACTOR	api/nl80211.h	/^	NL80211_BAND_ATTR_HT_AMPDU_FACTOR,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_CAPA	api/nl80211.h	/^	NL80211_BAND_ATTR_HT_CAPA,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_HT_CAPA	api/nl80211.h	2334;"	d
NL80211_BAND_ATTR_HT_MCS_SET	api/nl80211.h	/^	NL80211_BAND_ATTR_HT_MCS_SET,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_MAX	api/nl80211.h	/^	NL80211_BAND_ATTR_MAX = __NL80211_BAND_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_RATES	api/nl80211.h	/^	NL80211_BAND_ATTR_RATES,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_VHT_CAPA	api/nl80211.h	/^	NL80211_BAND_ATTR_VHT_CAPA,$/;"	e	enum:nl80211_band_attr
NL80211_BAND_ATTR_VHT_MCS_SET	api/nl80211.h	/^	NL80211_BAND_ATTR_VHT_MCS_SET,$/;"	e	enum:nl80211_band_attr
NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE	api/nl80211.h	/^	NL80211_BITRATE_ATTR_2GHZ_SHORTPREAMBLE,$/;"	e	enum:nl80211_bitrate_attr
NL80211_BITRATE_ATTR_MAX	api/nl80211.h	/^	NL80211_BITRATE_ATTR_MAX = __NL80211_BITRATE_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_bitrate_attr
NL80211_BITRATE_ATTR_RATE	api/nl80211.h	/^	NL80211_BITRATE_ATTR_RATE,$/;"	e	enum:nl80211_bitrate_attr
NL80211_BSS_BEACON_IES	api/nl80211.h	/^	NL80211_BSS_BEACON_IES,$/;"	e	enum:nl80211_bss
NL80211_BSS_BEACON_INTERVAL	api/nl80211.h	/^	NL80211_BSS_BEACON_INTERVAL,$/;"	e	enum:nl80211_bss
NL80211_BSS_BSSID	api/nl80211.h	/^	NL80211_BSS_BSSID,$/;"	e	enum:nl80211_bss
NL80211_BSS_CAPABILITY	api/nl80211.h	/^	NL80211_BSS_CAPABILITY,$/;"	e	enum:nl80211_bss
NL80211_BSS_CHAN_WIDTH	api/nl80211.h	/^	NL80211_BSS_CHAN_WIDTH,$/;"	e	enum:nl80211_bss
NL80211_BSS_CHAN_WIDTH_10	api/nl80211.h	/^	NL80211_BSS_CHAN_WIDTH_10,$/;"	e	enum:nl80211_bss_scan_width
NL80211_BSS_CHAN_WIDTH_20	api/nl80211.h	/^	NL80211_BSS_CHAN_WIDTH_20,$/;"	e	enum:nl80211_bss_scan_width
NL80211_BSS_CHAN_WIDTH_5	api/nl80211.h	/^	NL80211_BSS_CHAN_WIDTH_5,$/;"	e	enum:nl80211_bss_scan_width
NL80211_BSS_FREQUENCY	api/nl80211.h	/^	NL80211_BSS_FREQUENCY,$/;"	e	enum:nl80211_bss
NL80211_BSS_INFORMATION_ELEMENTS	api/nl80211.h	/^	NL80211_BSS_INFORMATION_ELEMENTS,$/;"	e	enum:nl80211_bss
NL80211_BSS_MAX	api/nl80211.h	/^	NL80211_BSS_MAX = __NL80211_BSS_AFTER_LAST - 1$/;"	e	enum:nl80211_bss
NL80211_BSS_SEEN_MS_AGO	api/nl80211.h	/^	NL80211_BSS_SEEN_MS_AGO,$/;"	e	enum:nl80211_bss
NL80211_BSS_SIGNAL_MBM	api/nl80211.h	/^	NL80211_BSS_SIGNAL_MBM,$/;"	e	enum:nl80211_bss
NL80211_BSS_SIGNAL_UNSPEC	api/nl80211.h	/^	NL80211_BSS_SIGNAL_UNSPEC,$/;"	e	enum:nl80211_bss
NL80211_BSS_STATUS	api/nl80211.h	/^	NL80211_BSS_STATUS,$/;"	e	enum:nl80211_bss
NL80211_BSS_STATUS_ASSOCIATED	api/nl80211.h	/^	NL80211_BSS_STATUS_ASSOCIATED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_STATUS_AUTHENTICATED	api/nl80211.h	/^	NL80211_BSS_STATUS_AUTHENTICATED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_STATUS_IBSS_JOINED	api/nl80211.h	/^	NL80211_BSS_STATUS_IBSS_JOINED,$/;"	e	enum:nl80211_bss_status
NL80211_BSS_TSF	api/nl80211.h	/^	NL80211_BSS_TSF,$/;"	e	enum:nl80211_bss
NL80211_CHAN_HT20	api/nl80211.h	/^	NL80211_CHAN_HT20,$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_HT40MINUS	api/nl80211.h	/^	NL80211_CHAN_HT40MINUS,$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_HT40PLUS	api/nl80211.h	/^	NL80211_CHAN_HT40PLUS$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_NO_HT	api/nl80211.h	/^	NL80211_CHAN_NO_HT,$/;"	e	enum:nl80211_channel_type
NL80211_CHAN_WIDTH_10	api/nl80211.h	/^	NL80211_CHAN_WIDTH_10,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_160	api/nl80211.h	/^	NL80211_CHAN_WIDTH_160,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_20	api/nl80211.h	/^	NL80211_CHAN_WIDTH_20,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_20_NOHT	api/nl80211.h	/^	NL80211_CHAN_WIDTH_20_NOHT,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_40	api/nl80211.h	/^	NL80211_CHAN_WIDTH_40,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_5	api/nl80211.h	/^	NL80211_CHAN_WIDTH_5,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_80	api/nl80211.h	/^	NL80211_CHAN_WIDTH_80,$/;"	e	enum:nl80211_chan_width
NL80211_CHAN_WIDTH_80P80	api/nl80211.h	/^	NL80211_CHAN_WIDTH_80P80,$/;"	e	enum:nl80211_chan_width
NL80211_CMD_ACTION	api/nl80211.h	/^	NL80211_CMD_ACTION = NL80211_CMD_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_ACTION_TX_STATUS	api/nl80211.h	/^	NL80211_CMD_ACTION_TX_STATUS = NL80211_CMD_FRAME_TX_STATUS,$/;"	e	enum:nl80211_commands
NL80211_CMD_ASSOCIATE	api/nl80211.h	/^	NL80211_CMD_ASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_ASSOCIATE	api/nl80211.h	911;"	d
NL80211_CMD_AUTHENTICATE	api/nl80211.h	/^	NL80211_CMD_AUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_AUTHENTICATE	api/nl80211.h	910;"	d
NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL	api/nl80211.h	/^	NL80211_CMD_CANCEL_REMAIN_ON_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_CHANNEL_SWITCH	api/nl80211.h	/^	NL80211_CMD_CHANNEL_SWITCH,$/;"	e	enum:nl80211_commands
NL80211_CMD_CH_SWITCH_NOTIFY	api/nl80211.h	/^	NL80211_CMD_CH_SWITCH_NOTIFY,$/;"	e	enum:nl80211_commands
NL80211_CMD_CONNECT	api/nl80211.h	/^	NL80211_CMD_CONNECT,$/;"	e	enum:nl80211_commands
NL80211_CMD_CONNECT	api/nl80211.h	1953;"	d
NL80211_CMD_CONN_FAILED	api/nl80211.h	/^	NL80211_CMD_CONN_FAILED,$/;"	e	enum:nl80211_commands
NL80211_CMD_CRIT_PROTOCOL_START	api/nl80211.h	/^	NL80211_CMD_CRIT_PROTOCOL_START,$/;"	e	enum:nl80211_commands
NL80211_CMD_CRIT_PROTOCOL_STOP	api/nl80211.h	/^	NL80211_CMD_CRIT_PROTOCOL_STOP,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEAUTHENTICATE	api/nl80211.h	/^	NL80211_CMD_DEAUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEAUTHENTICATE	api/nl80211.h	912;"	d
NL80211_CMD_DEL_BEACON	api/nl80211.h	/^	NL80211_CMD_DEL_BEACON = NL80211_CMD_STOP_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_INTERFACE	api/nl80211.h	/^	NL80211_CMD_DEL_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_KEY	api/nl80211.h	/^	NL80211_CMD_DEL_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_MPATH	api/nl80211.h	/^	NL80211_CMD_DEL_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_PMKSA	api/nl80211.h	/^	NL80211_CMD_DEL_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_STATION	api/nl80211.h	/^	NL80211_CMD_DEL_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_DEL_WIPHY	api/nl80211.h	/^	NL80211_CMD_DEL_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_DISASSOCIATE	api/nl80211.h	/^	NL80211_CMD_DISASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_DISASSOCIATE	api/nl80211.h	913;"	d
NL80211_CMD_DISCONNECT	api/nl80211.h	/^	NL80211_CMD_DISCONNECT,$/;"	e	enum:nl80211_commands
NL80211_CMD_FLUSH_PMKSA	api/nl80211.h	/^	NL80211_CMD_FLUSH_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME	api/nl80211.h	/^	NL80211_CMD_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME_TX_STATUS	api/nl80211.h	/^	NL80211_CMD_FRAME_TX_STATUS,$/;"	e	enum:nl80211_commands
NL80211_CMD_FRAME_WAIT_CANCEL	api/nl80211.h	/^	NL80211_CMD_FRAME_WAIT_CANCEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_FT_EVENT	api/nl80211.h	/^	NL80211_CMD_FT_EVENT,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_BEACON	api/nl80211.h	/^	NL80211_CMD_GET_BEACON,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_COALESCE	api/nl80211.h	/^	NL80211_CMD_GET_COALESCE,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_INTERFACE	api/nl80211.h	/^	NL80211_CMD_GET_INTERFACE,	\/* can dump *\/$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_KEY	api/nl80211.h	/^	NL80211_CMD_GET_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_MESH_CONFIG	api/nl80211.h	/^	NL80211_CMD_GET_MESH_CONFIG,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_MESH_PARAMS	api/nl80211.h	919;"	d
NL80211_CMD_GET_MPATH	api/nl80211.h	/^	NL80211_CMD_GET_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_POWER_SAVE	api/nl80211.h	/^	NL80211_CMD_GET_POWER_SAVE,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_PROTOCOL_FEATURES	api/nl80211.h	/^	NL80211_CMD_GET_PROTOCOL_FEATURES,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_REG	api/nl80211.h	/^	NL80211_CMD_GET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_SCAN	api/nl80211.h	/^	NL80211_CMD_GET_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_STATION	api/nl80211.h	/^	NL80211_CMD_GET_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_SURVEY	api/nl80211.h	/^	NL80211_CMD_GET_SURVEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_WIPHY	api/nl80211.h	/^	NL80211_CMD_GET_WIPHY,		\/* can dump *\/$/;"	e	enum:nl80211_commands
NL80211_CMD_GET_WOWLAN	api/nl80211.h	/^	NL80211_CMD_GET_WOWLAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_JOIN_IBSS	api/nl80211.h	/^	NL80211_CMD_JOIN_IBSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_JOIN_MESH	api/nl80211.h	/^	NL80211_CMD_JOIN_MESH,$/;"	e	enum:nl80211_commands
NL80211_CMD_LEAVE_IBSS	api/nl80211.h	/^	NL80211_CMD_LEAVE_IBSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_LEAVE_MESH	api/nl80211.h	/^	NL80211_CMD_LEAVE_MESH,$/;"	e	enum:nl80211_commands
NL80211_CMD_MAX	api/nl80211.h	/^	NL80211_CMD_MAX = __NL80211_CMD_AFTER_LAST - 1$/;"	e	enum:nl80211_commands
NL80211_CMD_MICHAEL_MIC_FAILURE	api/nl80211.h	/^	NL80211_CMD_MICHAEL_MIC_FAILURE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_BEACON	api/nl80211.h	/^	NL80211_CMD_NEW_BEACON = NL80211_CMD_START_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_INTERFACE	api/nl80211.h	/^	NL80211_CMD_NEW_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_KEY	api/nl80211.h	/^	NL80211_CMD_NEW_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_MPATH	api/nl80211.h	/^	NL80211_CMD_NEW_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_PEER_CANDIDATE	api/nl80211.h	/^	NL80211_CMD_NEW_PEER_CANDIDATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_SCAN_RESULTS	api/nl80211.h	/^	NL80211_CMD_NEW_SCAN_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_STATION	api/nl80211.h	/^	NL80211_CMD_NEW_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_SURVEY_RESULTS	api/nl80211.h	/^	NL80211_CMD_NEW_SURVEY_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_NEW_WIPHY	api/nl80211.h	/^	NL80211_CMD_NEW_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_NOTIFY_CQM	api/nl80211.h	/^	NL80211_CMD_NOTIFY_CQM,$/;"	e	enum:nl80211_commands
NL80211_CMD_PMKSA_CANDIDATE	api/nl80211.h	/^	NL80211_CMD_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_PROBE_CLIENT	api/nl80211.h	/^	NL80211_CMD_PROBE_CLIENT,$/;"	e	enum:nl80211_commands
NL80211_CMD_RADAR_DETECT	api/nl80211.h	/^	NL80211_CMD_RADAR_DETECT,$/;"	e	enum:nl80211_commands
NL80211_CMD_REGISTER_ACTION	api/nl80211.h	/^	NL80211_CMD_REGISTER_ACTION = NL80211_CMD_REGISTER_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_REGISTER_BEACONS	api/nl80211.h	/^	NL80211_CMD_REGISTER_BEACONS,$/;"	e	enum:nl80211_commands
NL80211_CMD_REGISTER_FRAME	api/nl80211.h	/^	NL80211_CMD_REGISTER_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_BEACON_HINT	api/nl80211.h	/^	NL80211_CMD_REG_BEACON_HINT,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_BEACON_HINT	api/nl80211.h	914;"	d
NL80211_CMD_REG_CHANGE	api/nl80211.h	/^	NL80211_CMD_REG_CHANGE,$/;"	e	enum:nl80211_commands
NL80211_CMD_REG_CHANGE	api/nl80211.h	909;"	d
NL80211_CMD_REMAIN_ON_CHANNEL	api/nl80211.h	/^	NL80211_CMD_REMAIN_ON_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_REQ_SET_REG	api/nl80211.h	/^	NL80211_CMD_REQ_SET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_ROAM	api/nl80211.h	/^	NL80211_CMD_ROAM,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCAN_ABORTED	api/nl80211.h	/^	NL80211_CMD_SCAN_ABORTED,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCHED_SCAN_RESULTS	api/nl80211.h	/^	NL80211_CMD_SCHED_SCAN_RESULTS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SCHED_SCAN_STOPPED	api/nl80211.h	/^	NL80211_CMD_SCHED_SCAN_STOPPED,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BEACON	api/nl80211.h	/^	NL80211_CMD_SET_BEACON,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BSS	api/nl80211.h	/^	NL80211_CMD_SET_BSS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_BSS	api/nl80211.h	907;"	d
NL80211_CMD_SET_CHANNEL	api/nl80211.h	/^	NL80211_CMD_SET_CHANNEL,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_COALESCE	api/nl80211.h	/^	NL80211_CMD_SET_COALESCE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_CQM	api/nl80211.h	/^	NL80211_CMD_SET_CQM,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_INTERFACE	api/nl80211.h	/^	NL80211_CMD_SET_INTERFACE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_KEY	api/nl80211.h	/^	NL80211_CMD_SET_KEY,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MAC_ACL	api/nl80211.h	/^	NL80211_CMD_SET_MAC_ACL,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MCAST_RATE	api/nl80211.h	/^	NL80211_CMD_SET_MCAST_RATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MESH_CONFIG	api/nl80211.h	/^	NL80211_CMD_SET_MESH_CONFIG,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MESH_PARAMS	api/nl80211.h	920;"	d
NL80211_CMD_SET_MGMT_EXTRA_IE	api/nl80211.h	/^	NL80211_CMD_SET_MGMT_EXTRA_IE \/* reserved; not used *\/,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_MGMT_EXTRA_IE	api/nl80211.h	908;"	d
NL80211_CMD_SET_MPATH	api/nl80211.h	/^	NL80211_CMD_SET_MPATH,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_NOACK_MAP	api/nl80211.h	/^	NL80211_CMD_SET_NOACK_MAP,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_PMKSA	api/nl80211.h	/^	NL80211_CMD_SET_PMKSA,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_POWER_SAVE	api/nl80211.h	/^	NL80211_CMD_SET_POWER_SAVE,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_QOS_MAP	api/nl80211.h	/^	NL80211_CMD_SET_QOS_MAP,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_REG	api/nl80211.h	/^	NL80211_CMD_SET_REG,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_REKEY_OFFLOAD	api/nl80211.h	/^	NL80211_CMD_SET_REKEY_OFFLOAD,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_STATION	api/nl80211.h	/^	NL80211_CMD_SET_STATION,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_TX_BITRATE_MASK	api/nl80211.h	/^	NL80211_CMD_SET_TX_BITRATE_MASK,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WDS_PEER	api/nl80211.h	/^	NL80211_CMD_SET_WDS_PEER,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WIPHY	api/nl80211.h	/^	NL80211_CMD_SET_WIPHY,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WIPHY_NETNS	api/nl80211.h	/^	NL80211_CMD_SET_WIPHY_NETNS,$/;"	e	enum:nl80211_commands
NL80211_CMD_SET_WOWLAN	api/nl80211.h	/^	NL80211_CMD_SET_WOWLAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_START_AP	api/nl80211.h	/^	NL80211_CMD_START_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_START_P2P_DEVICE	api/nl80211.h	/^	NL80211_CMD_START_P2P_DEVICE,$/;"	e	enum:nl80211_commands
NL80211_CMD_START_SCHED_SCAN	api/nl80211.h	/^	NL80211_CMD_START_SCHED_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_STOP_AP	api/nl80211.h	/^	NL80211_CMD_STOP_AP,$/;"	e	enum:nl80211_commands
NL80211_CMD_STOP_P2P_DEVICE	api/nl80211.h	/^	NL80211_CMD_STOP_P2P_DEVICE,$/;"	e	enum:nl80211_commands
NL80211_CMD_STOP_SCHED_SCAN	api/nl80211.h	/^	NL80211_CMD_STOP_SCHED_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_TDLS_MGMT	api/nl80211.h	/^	NL80211_CMD_TDLS_MGMT,$/;"	e	enum:nl80211_commands
NL80211_CMD_TDLS_OPER	api/nl80211.h	/^	NL80211_CMD_TDLS_OPER,$/;"	e	enum:nl80211_commands
NL80211_CMD_TESTMODE	api/nl80211.h	/^	NL80211_CMD_TESTMODE,$/;"	e	enum:nl80211_commands
NL80211_CMD_TRIGGER_SCAN	api/nl80211.h	/^	NL80211_CMD_TRIGGER_SCAN,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNEXPECTED_4ADDR_FRAME	api/nl80211.h	/^	NL80211_CMD_UNEXPECTED_4ADDR_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNEXPECTED_FRAME	api/nl80211.h	/^	NL80211_CMD_UNEXPECTED_FRAME,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNPROT_DEAUTHENTICATE	api/nl80211.h	/^	NL80211_CMD_UNPROT_DEAUTHENTICATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNPROT_DISASSOCIATE	api/nl80211.h	/^	NL80211_CMD_UNPROT_DISASSOCIATE,$/;"	e	enum:nl80211_commands
NL80211_CMD_UNSPEC	api/nl80211.h	/^	NL80211_CMD_UNSPEC,$/;"	e	enum:nl80211_commands
NL80211_CMD_UPDATE_FT_IES	api/nl80211.h	/^	NL80211_CMD_UPDATE_FT_IES,$/;"	e	enum:nl80211_commands
NL80211_CMD_VENDOR	api/nl80211.h	/^	NL80211_CMD_VENDOR,$/;"	e	enum:nl80211_commands
NL80211_COALESCE_CONDITION_MATCH	api/nl80211.h	/^	NL80211_COALESCE_CONDITION_MATCH,$/;"	e	enum:nl80211_coalesce_condition
NL80211_COALESCE_CONDITION_NO_MATCH	api/nl80211.h	/^	NL80211_COALESCE_CONDITION_NO_MATCH$/;"	e	enum:nl80211_coalesce_condition
NL80211_CONN_FAIL_BLOCKED_CLIENT	api/nl80211.h	/^	NL80211_CONN_FAIL_BLOCKED_CLIENT,$/;"	e	enum:nl80211_connect_failed_reason
NL80211_CONN_FAIL_MAX_CLIENTS	api/nl80211.h	/^	NL80211_CONN_FAIL_MAX_CLIENTS,$/;"	e	enum:nl80211_connect_failed_reason
NL80211_CQM_RSSI_BEACON_LOSS_EVENT	api/nl80211.h	/^	NL80211_CQM_RSSI_BEACON_LOSS_EVENT,$/;"	e	enum:nl80211_cqm_rssi_threshold_event
NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH	api/nl80211.h	/^	NL80211_CQM_RSSI_THRESHOLD_EVENT_HIGH,$/;"	e	enum:nl80211_cqm_rssi_threshold_event
NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW	api/nl80211.h	/^	NL80211_CQM_RSSI_THRESHOLD_EVENT_LOW,$/;"	e	enum:nl80211_cqm_rssi_threshold_event
NL80211_CQM_TXE_MAX_INTVL	api/nl80211.h	1992;"	d
NL80211_CRIT_PROTO_APIPA	api/nl80211.h	/^	NL80211_CRIT_PROTO_APIPA,$/;"	e	enum:nl80211_crit_proto_id
NL80211_CRIT_PROTO_DHCP	api/nl80211.h	/^	NL80211_CRIT_PROTO_DHCP,$/;"	e	enum:nl80211_crit_proto_id
NL80211_CRIT_PROTO_EAPOL	api/nl80211.h	/^	NL80211_CRIT_PROTO_EAPOL,$/;"	e	enum:nl80211_crit_proto_id
NL80211_CRIT_PROTO_MAX_DURATION	api/nl80211.h	4123;"	d
NL80211_CRIT_PROTO_UNSPEC	api/nl80211.h	/^	NL80211_CRIT_PROTO_UNSPEC,$/;"	e	enum:nl80211_crit_proto_id
NL80211_DFS_AVAILABLE	api/nl80211.h	/^	NL80211_DFS_AVAILABLE,$/;"	e	enum:nl80211_dfs_state
NL80211_DFS_ETSI	api/nl80211.h	/^	NL80211_DFS_ETSI	= 2,$/;"	e	enum:nl80211_dfs_regions
NL80211_DFS_FCC	api/nl80211.h	/^	NL80211_DFS_FCC		= 1,$/;"	e	enum:nl80211_dfs_regions
NL80211_DFS_JP	api/nl80211.h	/^	NL80211_DFS_JP		= 3,$/;"	e	enum:nl80211_dfs_regions
NL80211_DFS_UNAVAILABLE	api/nl80211.h	/^	NL80211_DFS_UNAVAILABLE,$/;"	e	enum:nl80211_dfs_state
NL80211_DFS_UNSET	api/nl80211.h	/^	NL80211_DFS_UNSET	= 0,$/;"	e	enum:nl80211_dfs_regions
NL80211_DFS_USABLE	api/nl80211.h	/^	NL80211_DFS_USABLE,$/;"	e	enum:nl80211_dfs_state
NL80211_FEATURE_ACTIVE_MONITOR	api/nl80211.h	/^	NL80211_FEATURE_ACTIVE_MONITOR			= 1 << 17,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_ADVERTISE_CHAN_LIMITS	api/nl80211.h	/^	NL80211_FEATURE_ADVERTISE_CHAN_LIMITS		= 1 << 14,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_AP_MODE_CHAN_WIDTH_CHANGE	api/nl80211.h	/^	NL80211_FEATURE_AP_MODE_CHAN_WIDTH_CHANGE	= 1 << 18,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_AP_SCAN	api/nl80211.h	/^	NL80211_FEATURE_AP_SCAN				= 1 << 8,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_CELL_BASE_REG_HINTS	api/nl80211.h	/^	NL80211_FEATURE_CELL_BASE_REG_HINTS		= 1 << 3,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_FULL_AP_CLIENT_STATE	api/nl80211.h	/^	NL80211_FEATURE_FULL_AP_CLIENT_STATE		= 1 << 15,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_HT_IBSS	api/nl80211.h	/^	NL80211_FEATURE_HT_IBSS				= 1 << 1,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_INACTIVITY_TIMER	api/nl80211.h	/^	NL80211_FEATURE_INACTIVITY_TIMER		= 1 << 2,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_LOW_PRIORITY_SCAN	api/nl80211.h	/^	NL80211_FEATURE_LOW_PRIORITY_SCAN		= 1 << 6,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_NEED_OBSS_SCAN	api/nl80211.h	/^	NL80211_FEATURE_NEED_OBSS_SCAN			= 1 << 10,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_P2P_DEVICE_NEEDS_CHANNEL	api/nl80211.h	/^	NL80211_FEATURE_P2P_DEVICE_NEEDS_CHANNEL	= 1 << 4,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_P2P_GO_CTWIN	api/nl80211.h	/^	NL80211_FEATURE_P2P_GO_CTWIN			= 1 << 11,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_P2P_GO_OPPPS	api/nl80211.h	/^	NL80211_FEATURE_P2P_GO_OPPPS			= 1 << 12,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_SAE	api/nl80211.h	/^	NL80211_FEATURE_SAE				= 1 << 5,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_SCAN_FLUSH	api/nl80211.h	/^	NL80211_FEATURE_SCAN_FLUSH			= 1 << 7,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_SK_TX_STATUS	api/nl80211.h	/^	NL80211_FEATURE_SK_TX_STATUS			= 1 << 0,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_USERSPACE_MPM	api/nl80211.h	/^	NL80211_FEATURE_USERSPACE_MPM			= 1 << 16,$/;"	e	enum:nl80211_feature_flags
NL80211_FEATURE_VIF_TXPOWER	api/nl80211.h	/^	NL80211_FEATURE_VIF_TXPOWER			= 1 << 9,$/;"	e	enum:nl80211_feature_flags
NL80211_FREQUENCY_ATTR_DFS_CAC_TIME	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_DFS_CAC_TIME,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_DFS_STATE	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_DFS_STATE,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_DFS_TIME	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_DFS_TIME,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_DISABLED	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_DISABLED,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_FREQ	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_FREQ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_GO_CONCURRENT	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_GO_CONCURRENT,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_INDOOR_ONLY	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_INDOOR_ONLY,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_MAX = __NL80211_FREQUENCY_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX_TX_POWER	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_MAX_TX_POWER,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_MAX_TX_POWER	api/nl80211.h	2418;"	d
NL80211_FREQUENCY_ATTR_NO_10MHZ	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_10MHZ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_160MHZ	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_160MHZ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_20MHZ	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_20MHZ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_80MHZ	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_80MHZ,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_HT40_MINUS	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_HT40_MINUS,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_HT40_PLUS	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_HT40_PLUS,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_IBSS	api/nl80211.h	2420;"	d
NL80211_FREQUENCY_ATTR_NO_IR	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_NO_IR,$/;"	e	enum:nl80211_frequency_attr
NL80211_FREQUENCY_ATTR_NO_IR	api/nl80211.h	2421;"	d
NL80211_FREQUENCY_ATTR_PASSIVE_SCAN	api/nl80211.h	2419;"	d
NL80211_FREQUENCY_ATTR_RADAR	api/nl80211.h	/^	NL80211_FREQUENCY_ATTR_RADAR,$/;"	e	enum:nl80211_frequency_attr
NL80211_GENL_NAME	api/nl80211.h	30;"	d
NL80211_HIDDEN_SSID_NOT_IN_USE	api/nl80211.h	/^	NL80211_HIDDEN_SSID_NOT_IN_USE,$/;"	e	enum:nl80211_hidden_ssid
NL80211_HIDDEN_SSID_ZERO_CONTENTS	api/nl80211.h	/^	NL80211_HIDDEN_SSID_ZERO_CONTENTS$/;"	e	enum:nl80211_hidden_ssid
NL80211_HIDDEN_SSID_ZERO_LEN	api/nl80211.h	/^	NL80211_HIDDEN_SSID_ZERO_LEN,$/;"	e	enum:nl80211_hidden_ssid
NL80211_HT_CAPABILITY_LEN	api/nl80211.h	1981;"	d
NL80211_IFACE_COMB_LIMITS	api/nl80211.h	/^	NL80211_IFACE_COMB_LIMITS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_MAXNUM	api/nl80211.h	/^	NL80211_IFACE_COMB_MAXNUM,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_NUM_CHANNELS	api/nl80211.h	/^	NL80211_IFACE_COMB_NUM_CHANNELS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_RADAR_DETECT_REGIONS	api/nl80211.h	/^	NL80211_IFACE_COMB_RADAR_DETECT_REGIONS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_RADAR_DETECT_WIDTHS	api/nl80211.h	/^	NL80211_IFACE_COMB_RADAR_DETECT_WIDTHS,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_STA_AP_BI_MATCH	api/nl80211.h	/^	NL80211_IFACE_COMB_STA_AP_BI_MATCH,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_COMB_UNSPEC	api/nl80211.h	/^	NL80211_IFACE_COMB_UNSPEC,$/;"	e	enum:nl80211_if_combination_attrs
NL80211_IFACE_LIMIT_MAX	api/nl80211.h	/^	NL80211_IFACE_LIMIT_MAX,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFACE_LIMIT_TYPES	api/nl80211.h	/^	NL80211_IFACE_LIMIT_TYPES,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFACE_LIMIT_UNSPEC	api/nl80211.h	/^	NL80211_IFACE_LIMIT_UNSPEC,$/;"	e	enum:nl80211_iface_limit_attrs
NL80211_IFTYPE_ADHOC	api/nl80211.h	/^	NL80211_IFTYPE_ADHOC,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_AP	api/nl80211.h	/^	NL80211_IFTYPE_AP,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_AP_VLAN	api/nl80211.h	/^	NL80211_IFTYPE_AP_VLAN,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MAX	api/nl80211.h	/^	NL80211_IFTYPE_MAX = NUM_NL80211_IFTYPES - 1$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MESH_POINT	api/nl80211.h	/^	NL80211_IFTYPE_MESH_POINT,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_MONITOR	api/nl80211.h	/^	NL80211_IFTYPE_MONITOR,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_P2P_CLIENT	api/nl80211.h	/^	NL80211_IFTYPE_P2P_CLIENT,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_P2P_DEVICE	api/nl80211.h	/^	NL80211_IFTYPE_P2P_DEVICE,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_P2P_GO	api/nl80211.h	/^	NL80211_IFTYPE_P2P_GO,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_STATION	api/nl80211.h	/^	NL80211_IFTYPE_STATION,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_UNSPECIFIED	api/nl80211.h	/^	NL80211_IFTYPE_UNSPECIFIED,$/;"	e	enum:nl80211_iftype
NL80211_IFTYPE_WDS	api/nl80211.h	/^	NL80211_IFTYPE_WDS,$/;"	e	enum:nl80211_iftype
NL80211_KCK_LEN	api/nl80211.h	3802;"	d
NL80211_KEK_LEN	api/nl80211.h	3803;"	d
NL80211_KEYTYPE_GROUP	api/nl80211.h	/^	NL80211_KEYTYPE_GROUP,$/;"	e	enum:nl80211_key_type
NL80211_KEYTYPE_PAIRWISE	api/nl80211.h	/^	NL80211_KEYTYPE_PAIRWISE,$/;"	e	enum:nl80211_key_type
NL80211_KEYTYPE_PEERKEY	api/nl80211.h	/^	NL80211_KEYTYPE_PEERKEY,$/;"	e	enum:nl80211_key_type
NL80211_KEY_CIPHER	api/nl80211.h	/^	NL80211_KEY_CIPHER,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DATA	api/nl80211.h	/^	NL80211_KEY_DATA,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT	api/nl80211.h	/^	NL80211_KEY_DEFAULT,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_MGMT	api/nl80211.h	/^	NL80211_KEY_DEFAULT_MGMT,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_TYPES	api/nl80211.h	/^	NL80211_KEY_DEFAULT_TYPES,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_DEFAULT_TYPE_MULTICAST	api/nl80211.h	/^	NL80211_KEY_DEFAULT_TYPE_MULTICAST,$/;"	e	enum:nl80211_key_default_types
NL80211_KEY_DEFAULT_TYPE_UNICAST	api/nl80211.h	/^	NL80211_KEY_DEFAULT_TYPE_UNICAST,$/;"	e	enum:nl80211_key_default_types
NL80211_KEY_IDX	api/nl80211.h	/^	NL80211_KEY_IDX,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_MAX	api/nl80211.h	/^	NL80211_KEY_MAX = __NL80211_KEY_AFTER_LAST - 1$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_SEQ	api/nl80211.h	/^	NL80211_KEY_SEQ,$/;"	e	enum:nl80211_key_attributes
NL80211_KEY_TYPE	api/nl80211.h	/^	NL80211_KEY_TYPE,$/;"	e	enum:nl80211_key_attributes
NL80211_MAX_NR_AKM_SUITES	api/nl80211.h	1985;"	d
NL80211_MAX_NR_CIPHER_SUITES	api/nl80211.h	1984;"	d
NL80211_MAX_SUPP_HT_RATES	api/nl80211.h	1976;"	d
NL80211_MAX_SUPP_RATES	api/nl80211.h	1975;"	d
NL80211_MAX_SUPP_REG_RULES	api/nl80211.h	1977;"	d
NL80211_MESHCONF_ATTR_MAX	api/nl80211.h	/^	NL80211_MESHCONF_ATTR_MAX = __NL80211_MESHCONF_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_AUTO_OPEN_PLINKS	api/nl80211.h	/^	NL80211_MESHCONF_AUTO_OPEN_PLINKS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_AWAKE_WINDOW	api/nl80211.h	/^	NL80211_MESHCONF_AWAKE_WINDOW,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_CONFIRM_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_CONFIRM_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_ELEMENT_TTL	api/nl80211.h	/^	NL80211_MESHCONF_ELEMENT_TTL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_FORWARDING	api/nl80211.h	/^	NL80211_MESHCONF_FORWARDING,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_GATE_ANNOUNCEMENTS	api/nl80211.h	/^	NL80211_MESHCONF_GATE_ANNOUNCEMENTS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HOLDING_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_HOLDING_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HT_OPMODE	api/nl80211.h	/^	NL80211_MESHCONF_HT_OPMODE,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_ACTIVE_PATH_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_CONFIRMATION_INTERVAL	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_CONFIRMATION_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_MAX_PREQ_RETRIES,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_NET_DIAM_TRVS_TIME,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_PATH_TO_ROOT_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_PATH_TO_ROOT_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_PERR_MIN_INTERVAL	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_PERR_MIN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_PREQ_MIN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_RANN_INTERVAL	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_RANN_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_ROOTMODE	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_ROOTMODE,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_HWMP_ROOT_INTERVAL	api/nl80211.h	/^	NL80211_MESHCONF_HWMP_ROOT_INTERVAL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MAX_PEER_LINKS	api/nl80211.h	/^	NL80211_MESHCONF_MAX_PEER_LINKS,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MAX_RETRIES	api/nl80211.h	/^	NL80211_MESHCONF_MAX_RETRIES,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_MIN_DISCOVERY_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_PATH_REFRESH_TIME	api/nl80211.h	/^	NL80211_MESHCONF_PATH_REFRESH_TIME,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_PLINK_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_PLINK_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_POWER_MODE	api/nl80211.h	/^	NL80211_MESHCONF_POWER_MODE,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_RETRY_TIMEOUT	api/nl80211.h	/^	NL80211_MESHCONF_RETRY_TIMEOUT,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_RSSI_THRESHOLD	api/nl80211.h	/^	NL80211_MESHCONF_RSSI_THRESHOLD,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_SYNC_OFFSET_MAX_NEIGHBOR	api/nl80211.h	/^	NL80211_MESHCONF_SYNC_OFFSET_MAX_NEIGHBOR,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESHCONF_TTL	api/nl80211.h	/^	NL80211_MESHCONF_TTL,$/;"	e	enum:nl80211_meshconf_params
NL80211_MESH_POWER_ACTIVE	api/nl80211.h	/^	NL80211_MESH_POWER_ACTIVE,$/;"	e	enum:nl80211_mesh_power_mode
NL80211_MESH_POWER_DEEP_SLEEP	api/nl80211.h	/^	NL80211_MESH_POWER_DEEP_SLEEP,$/;"	e	enum:nl80211_mesh_power_mode
NL80211_MESH_POWER_LIGHT_SLEEP	api/nl80211.h	/^	NL80211_MESH_POWER_LIGHT_SLEEP,$/;"	e	enum:nl80211_mesh_power_mode
NL80211_MESH_POWER_MAX	api/nl80211.h	/^	NL80211_MESH_POWER_MAX = __NL80211_MESH_POWER_AFTER_LAST - 1$/;"	e	enum:nl80211_mesh_power_mode
NL80211_MESH_POWER_UNKNOWN	api/nl80211.h	/^	NL80211_MESH_POWER_UNKNOWN,$/;"	e	enum:nl80211_mesh_power_mode
NL80211_MESH_SETUP_ATTR_MAX	api/nl80211.h	/^	NL80211_MESH_SETUP_ATTR_MAX = __NL80211_MESH_SETUP_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_AUTH_PROTOCOL	api/nl80211.h	/^	NL80211_MESH_SETUP_AUTH_PROTOCOL,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_ENABLE_VENDOR_METRIC	api/nl80211.h	/^	NL80211_MESH_SETUP_ENABLE_VENDOR_METRIC,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_ENABLE_VENDOR_PATH_SEL	api/nl80211.h	/^	NL80211_MESH_SETUP_ENABLE_VENDOR_PATH_SEL,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_ENABLE_VENDOR_SYNC	api/nl80211.h	/^	NL80211_MESH_SETUP_ENABLE_VENDOR_SYNC,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_IE	api/nl80211.h	/^	NL80211_MESH_SETUP_IE,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_USERSPACE_AMPE	api/nl80211.h	/^	NL80211_MESH_SETUP_USERSPACE_AMPE,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_USERSPACE_AUTH	api/nl80211.h	/^	NL80211_MESH_SETUP_USERSPACE_AUTH,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_USERSPACE_MPM	api/nl80211.h	/^	NL80211_MESH_SETUP_USERSPACE_MPM,$/;"	e	enum:nl80211_mesh_setup_params
NL80211_MESH_SETUP_VENDOR_PATH_SEL_IE	api/nl80211.h	921;"	d
NL80211_MFP_NO	api/nl80211.h	/^	NL80211_MFP_NO,$/;"	e	enum:nl80211_mfp
NL80211_MFP_REQUIRED	api/nl80211.h	/^	NL80211_MFP_REQUIRED,$/;"	e	enum:nl80211_mfp
NL80211_MIN_REMAIN_ON_CHANNEL_TIME	api/nl80211.h	1987;"	d
NL80211_MNTR_FLAG_ACTIVE	api/nl80211.h	/^	NL80211_MNTR_FLAG_ACTIVE,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_CONTROL	api/nl80211.h	/^	NL80211_MNTR_FLAG_CONTROL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_COOK_FRAMES	api/nl80211.h	/^	NL80211_MNTR_FLAG_COOK_FRAMES,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_FCSFAIL	api/nl80211.h	/^	NL80211_MNTR_FLAG_FCSFAIL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_MAX	api/nl80211.h	/^	NL80211_MNTR_FLAG_MAX = __NL80211_MNTR_FLAG_AFTER_LAST - 1$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_OTHER_BSS	api/nl80211.h	/^	NL80211_MNTR_FLAG_OTHER_BSS,$/;"	e	enum:nl80211_mntr_flags
NL80211_MNTR_FLAG_PLCPFAIL	api/nl80211.h	/^	NL80211_MNTR_FLAG_PLCPFAIL,$/;"	e	enum:nl80211_mntr_flags
NL80211_MPATH_FLAG_ACTIVE	api/nl80211.h	/^	NL80211_MPATH_FLAG_ACTIVE =	1<<0,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_FIXED	api/nl80211.h	/^	NL80211_MPATH_FLAG_FIXED =	1<<3,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_RESOLVED	api/nl80211.h	/^	NL80211_MPATH_FLAG_RESOLVED =	1<<4,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_RESOLVING	api/nl80211.h	/^	NL80211_MPATH_FLAG_RESOLVING =	1<<1,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_FLAG_SN_VALID	api/nl80211.h	/^	NL80211_MPATH_FLAG_SN_VALID =	1<<2,$/;"	e	enum:nl80211_mpath_flags
NL80211_MPATH_INFO_DISCOVERY_RETRIES	api/nl80211.h	/^	NL80211_MPATH_INFO_DISCOVERY_RETRIES,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_DISCOVERY_TIMEOUT	api/nl80211.h	/^	NL80211_MPATH_INFO_DISCOVERY_TIMEOUT,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_EXPTIME	api/nl80211.h	/^	NL80211_MPATH_INFO_EXPTIME,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_FLAGS	api/nl80211.h	/^	NL80211_MPATH_INFO_FLAGS,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_FRAME_QLEN	api/nl80211.h	/^	NL80211_MPATH_INFO_FRAME_QLEN,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_MAX	api/nl80211.h	/^	NL80211_MPATH_INFO_MAX = __NL80211_MPATH_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_METRIC	api/nl80211.h	/^	NL80211_MPATH_INFO_METRIC,$/;"	e	enum:nl80211_mpath_info
NL80211_MPATH_INFO_SN	api/nl80211.h	/^	NL80211_MPATH_INFO_SN,$/;"	e	enum:nl80211_mpath_info
NL80211_NUM_ACS	api/nl80211.h	/^	NL80211_NUM_ACS$/;"	e	enum:nl80211_ac
NL80211_PKTPAT_MASK	api/nl80211.h	/^	NL80211_PKTPAT_MASK,$/;"	e	enum:nl80211_packet_pattern_attr
NL80211_PKTPAT_OFFSET	api/nl80211.h	/^	NL80211_PKTPAT_OFFSET,$/;"	e	enum:nl80211_packet_pattern_attr
NL80211_PKTPAT_PATTERN	api/nl80211.h	/^	NL80211_PKTPAT_PATTERN,$/;"	e	enum:nl80211_packet_pattern_attr
NL80211_PLINK_ACTION_BLOCK	api/nl80211.h	/^	NL80211_PLINK_ACTION_BLOCK,$/;"	e	enum:plink_actions
NL80211_PLINK_ACTION_NO_ACTION	api/nl80211.h	/^	NL80211_PLINK_ACTION_NO_ACTION,$/;"	e	enum:plink_actions
NL80211_PLINK_ACTION_OPEN	api/nl80211.h	/^	NL80211_PLINK_ACTION_OPEN,$/;"	e	enum:plink_actions
NL80211_PLINK_BLOCKED	api/nl80211.h	/^	NL80211_PLINK_BLOCKED,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_CNF_RCVD	api/nl80211.h	/^	NL80211_PLINK_CNF_RCVD,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_ESTAB	api/nl80211.h	/^	NL80211_PLINK_ESTAB,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_HOLDING	api/nl80211.h	/^	NL80211_PLINK_HOLDING,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_LISTEN	api/nl80211.h	/^	NL80211_PLINK_LISTEN,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_OPN_RCVD	api/nl80211.h	/^	NL80211_PLINK_OPN_RCVD,$/;"	e	enum:nl80211_plink_state
NL80211_PLINK_OPN_SNT	api/nl80211.h	/^	NL80211_PLINK_OPN_SNT,$/;"	e	enum:nl80211_plink_state
NL80211_PMKSA_CANDIDATE_BSSID	api/nl80211.h	/^	NL80211_PMKSA_CANDIDATE_BSSID,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PMKSA_CANDIDATE_INDEX	api/nl80211.h	/^	NL80211_PMKSA_CANDIDATE_INDEX,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PMKSA_CANDIDATE_PREAUTH	api/nl80211.h	/^	NL80211_PMKSA_CANDIDATE_PREAUTH,$/;"	e	enum:nl80211_pmksa_candidate_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_80211U	api/nl80211.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_80211U =	1<<3,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_P2P	api/nl80211.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_P2P =	1<<2,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS	api/nl80211.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS =	1<<0,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS2	api/nl80211.h	/^	NL80211_PROBE_RESP_OFFLOAD_SUPPORT_WPS2 =	1<<1,$/;"	e	enum:nl80211_probe_resp_offload_support_attr
NL80211_PROTOCOL_FEATURE_SPLIT_WIPHY_DUMP	api/nl80211.h	/^	NL80211_PROTOCOL_FEATURE_SPLIT_WIPHY_DUMP =	1 << 0,$/;"	e	enum:nl80211_protocol_features
NL80211_PS_DISABLED	api/nl80211.h	/^	NL80211_PS_DISABLED,$/;"	e	enum:nl80211_ps_state
NL80211_PS_ENABLED	api/nl80211.h	/^	NL80211_PS_ENABLED,$/;"	e	enum:nl80211_ps_state
NL80211_RADAR_CAC_ABORTED	api/nl80211.h	/^	NL80211_RADAR_CAC_ABORTED,$/;"	e	enum:nl80211_radar_event
NL80211_RADAR_CAC_FINISHED	api/nl80211.h	/^	NL80211_RADAR_CAC_FINISHED,$/;"	e	enum:nl80211_radar_event
NL80211_RADAR_DETECTED	api/nl80211.h	/^	NL80211_RADAR_DETECTED,$/;"	e	enum:nl80211_radar_event
NL80211_RADAR_NOP_FINISHED	api/nl80211.h	/^	NL80211_RADAR_NOP_FINISHED,$/;"	e	enum:nl80211_radar_event
NL80211_RATE_INFO_160_MHZ_WIDTH	api/nl80211.h	/^	NL80211_RATE_INFO_160_MHZ_WIDTH,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_40_MHZ_WIDTH	api/nl80211.h	/^	NL80211_RATE_INFO_40_MHZ_WIDTH,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_80P80_MHZ_WIDTH	api/nl80211.h	/^	NL80211_RATE_INFO_80P80_MHZ_WIDTH,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_80_MHZ_WIDTH	api/nl80211.h	/^	NL80211_RATE_INFO_80_MHZ_WIDTH,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_BITRATE	api/nl80211.h	/^	NL80211_RATE_INFO_BITRATE,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_BITRATE32	api/nl80211.h	/^	NL80211_RATE_INFO_BITRATE32,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_MAX	api/nl80211.h	/^	NL80211_RATE_INFO_MAX = __NL80211_RATE_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_MCS	api/nl80211.h	/^	NL80211_RATE_INFO_MCS,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_SHORT_GI	api/nl80211.h	/^	NL80211_RATE_INFO_SHORT_GI,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_VHT_MCS	api/nl80211.h	/^	NL80211_RATE_INFO_VHT_MCS,$/;"	e	enum:nl80211_rate_info
NL80211_RATE_INFO_VHT_NSS	api/nl80211.h	/^	NL80211_RATE_INFO_VHT_NSS,$/;"	e	enum:nl80211_rate_info
NL80211_REGDOM_SET_BY_CORE	api/nl80211.h	/^	NL80211_REGDOM_SET_BY_CORE,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_COUNTRY_IE	api/nl80211.h	/^	NL80211_REGDOM_SET_BY_COUNTRY_IE,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_DRIVER	api/nl80211.h	/^	NL80211_REGDOM_SET_BY_DRIVER,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_SET_BY_USER	api/nl80211.h	/^	NL80211_REGDOM_SET_BY_USER,$/;"	e	enum:nl80211_reg_initiator
NL80211_REGDOM_TYPE_COUNTRY	api/nl80211.h	/^	NL80211_REGDOM_TYPE_COUNTRY,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_CUSTOM_WORLD	api/nl80211.h	/^	NL80211_REGDOM_TYPE_CUSTOM_WORLD,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_INTERSECTION	api/nl80211.h	/^	NL80211_REGDOM_TYPE_INTERSECTION,$/;"	e	enum:nl80211_reg_type
NL80211_REGDOM_TYPE_WORLD	api/nl80211.h	/^	NL80211_REGDOM_TYPE_WORLD,$/;"	e	enum:nl80211_reg_type
NL80211_REG_RULE_ATTR_MAX	api/nl80211.h	/^	NL80211_REG_RULE_ATTR_MAX = __NL80211_REG_RULE_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_reg_rule_attr
NL80211_REKEY_DATA_KCK	api/nl80211.h	/^	NL80211_REKEY_DATA_KCK,$/;"	e	enum:nl80211_rekey_data
NL80211_REKEY_DATA_KEK	api/nl80211.h	/^	NL80211_REKEY_DATA_KEK,$/;"	e	enum:nl80211_rekey_data
NL80211_REKEY_DATA_REPLAY_CTR	api/nl80211.h	/^	NL80211_REKEY_DATA_REPLAY_CTR,$/;"	e	enum:nl80211_rekey_data
NL80211_REPLAY_CTR_LEN	api/nl80211.h	3804;"	d
NL80211_RRF_AUTO_BW	api/nl80211.h	/^	NL80211_RRF_AUTO_BW		= 1<<11,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_DFS	api/nl80211.h	/^	NL80211_RRF_DFS			= 1<<4,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_CCK	api/nl80211.h	/^	NL80211_RRF_NO_CCK		= 1<<1,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_IBSS	api/nl80211.h	2595;"	d
NL80211_RRF_NO_INDOOR	api/nl80211.h	/^	NL80211_RRF_NO_INDOOR		= 1<<2,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_IR	api/nl80211.h	/^	NL80211_RRF_NO_IR		= 1<<7,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_IR	api/nl80211.h	2596;"	d
NL80211_RRF_NO_IR_ALL	api/nl80211.h	2599;"	d
NL80211_RRF_NO_OFDM	api/nl80211.h	/^	NL80211_RRF_NO_OFDM		= 1<<0,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_NO_OUTDOOR	api/nl80211.h	/^	NL80211_RRF_NO_OUTDOOR		= 1<<3,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_PASSIVE_SCAN	api/nl80211.h	2594;"	d
NL80211_RRF_PTMP_ONLY	api/nl80211.h	/^	NL80211_RRF_PTMP_ONLY		= 1<<6,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RRF_PTP_ONLY	api/nl80211.h	/^	NL80211_RRF_PTP_ONLY		= 1<<5,$/;"	e	enum:nl80211_reg_rule_flags
NL80211_RXMGMT_FLAG_ANSWERED	api/nl80211.h	/^	NL80211_RXMGMT_FLAG_ANSWERED = 1 << 0,$/;"	e	enum:nl80211_rxmgmt_flags
NL80211_SCAN_FLAG_AP	api/nl80211.h	/^	NL80211_SCAN_FLAG_AP				= 1<<2,$/;"	e	enum:nl80211_scan_flags
NL80211_SCAN_FLAG_FLUSH	api/nl80211.h	/^	NL80211_SCAN_FLAG_FLUSH				= 1<<1,$/;"	e	enum:nl80211_scan_flags
NL80211_SCAN_FLAG_LOW_PRIORITY	api/nl80211.h	/^	NL80211_SCAN_FLAG_LOW_PRIORITY			= 1<<0,$/;"	e	enum:nl80211_scan_flags
NL80211_SCAN_RSSI_THOLD_OFF	api/nl80211.h	1990;"	d
NL80211_SCHED_SCAN_MATCH_ATTR_MAX	api/nl80211.h	/^	NL80211_SCHED_SCAN_MATCH_ATTR_MAX =$/;"	e	enum:nl80211_sched_scan_match_attr
NL80211_SCHED_SCAN_MATCH_ATTR_RSSI	api/nl80211.h	/^	NL80211_SCHED_SCAN_MATCH_ATTR_RSSI,$/;"	e	enum:nl80211_sched_scan_match_attr
NL80211_SCHED_SCAN_MATCH_ATTR_SSID	api/nl80211.h	/^	NL80211_SCHED_SCAN_MATCH_ATTR_SSID,$/;"	e	enum:nl80211_sched_scan_match_attr
NL80211_STA_BSS_PARAM_BEACON_INTERVAL	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_BEACON_INTERVAL,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_CTS_PROT	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_CTS_PROT,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_DTIM_PERIOD	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_DTIM_PERIOD,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_MAX	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_MAX = __NL80211_STA_BSS_PARAM_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_SHORT_PREAMBLE	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_SHORT_PREAMBLE,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_BSS_PARAM_SHORT_SLOT_TIME	api/nl80211.h	/^	NL80211_STA_BSS_PARAM_SHORT_SLOT_TIME,$/;"	e	enum:nl80211_sta_bss_param
NL80211_STA_FLAG_ASSOCIATED	api/nl80211.h	/^	NL80211_STA_FLAG_ASSOCIATED,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_AUTHENTICATED	api/nl80211.h	/^	NL80211_STA_FLAG_AUTHENTICATED,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_AUTHORIZED	api/nl80211.h	/^	NL80211_STA_FLAG_AUTHORIZED,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_MAX	api/nl80211.h	/^	NL80211_STA_FLAG_MAX = __NL80211_STA_FLAG_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_MAX_OLD_API	api/nl80211.h	2077;"	d
NL80211_STA_FLAG_MFP	api/nl80211.h	/^	NL80211_STA_FLAG_MFP,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_SHORT_PREAMBLE	api/nl80211.h	/^	NL80211_STA_FLAG_SHORT_PREAMBLE,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_TDLS_PEER	api/nl80211.h	/^	NL80211_STA_FLAG_TDLS_PEER,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_FLAG_WME	api/nl80211.h	/^	NL80211_STA_FLAG_WME,$/;"	e	enum:nl80211_sta_flags
NL80211_STA_INFO_BEACON_LOSS	api/nl80211.h	/^	NL80211_STA_INFO_BEACON_LOSS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_BSS_PARAM	api/nl80211.h	/^	NL80211_STA_INFO_BSS_PARAM,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_CHAIN_SIGNAL	api/nl80211.h	/^	NL80211_STA_INFO_CHAIN_SIGNAL,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_CHAIN_SIGNAL_AVG	api/nl80211.h	/^	NL80211_STA_INFO_CHAIN_SIGNAL_AVG,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_CONNECTED_TIME	api/nl80211.h	/^	NL80211_STA_INFO_CONNECTED_TIME,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_EXPECTED_THROUGHPUT	api/nl80211.h	/^	NL80211_STA_INFO_EXPECTED_THROUGHPUT,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_INACTIVE_TIME	api/nl80211.h	/^	NL80211_STA_INFO_INACTIVE_TIME,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_LLID	api/nl80211.h	/^	NL80211_STA_INFO_LLID,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_LOCAL_PM	api/nl80211.h	/^	NL80211_STA_INFO_LOCAL_PM,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_MAX	api/nl80211.h	/^	NL80211_STA_INFO_MAX = __NL80211_STA_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_NONPEER_PM	api/nl80211.h	/^	NL80211_STA_INFO_NONPEER_PM,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_PEER_PM	api/nl80211.h	/^	NL80211_STA_INFO_PEER_PM,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_PLID	api/nl80211.h	/^	NL80211_STA_INFO_PLID,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_PLINK_STATE	api/nl80211.h	/^	NL80211_STA_INFO_PLINK_STATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_BITRATE	api/nl80211.h	/^	NL80211_STA_INFO_RX_BITRATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_BYTES	api/nl80211.h	/^	NL80211_STA_INFO_RX_BYTES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_BYTES64	api/nl80211.h	/^	NL80211_STA_INFO_RX_BYTES64,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_RX_PACKETS	api/nl80211.h	/^	NL80211_STA_INFO_RX_PACKETS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_SIGNAL	api/nl80211.h	/^	NL80211_STA_INFO_SIGNAL,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_SIGNAL_AVG	api/nl80211.h	/^	NL80211_STA_INFO_SIGNAL_AVG,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_STA_FLAGS	api/nl80211.h	/^	NL80211_STA_INFO_STA_FLAGS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_BITRATE	api/nl80211.h	/^	NL80211_STA_INFO_TX_BITRATE,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_BYTES	api/nl80211.h	/^	NL80211_STA_INFO_TX_BYTES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_BYTES64	api/nl80211.h	/^	NL80211_STA_INFO_TX_BYTES64,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_FAILED	api/nl80211.h	/^	NL80211_STA_INFO_TX_FAILED,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_PACKETS	api/nl80211.h	/^	NL80211_STA_INFO_TX_PACKETS,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_TX_RETRIES	api/nl80211.h	/^	NL80211_STA_INFO_TX_RETRIES,$/;"	e	enum:nl80211_sta_info
NL80211_STA_INFO_T_OFFSET	api/nl80211.h	/^	NL80211_STA_INFO_T_OFFSET,$/;"	e	enum:nl80211_sta_info
NL80211_STA_WME_MAX	api/nl80211.h	/^	NL80211_STA_WME_MAX = __NL80211_STA_WME_AFTER_LAST - 1$/;"	e	enum:nl80211_sta_wme_attr
NL80211_STA_WME_MAX_SP	api/nl80211.h	/^	NL80211_STA_WME_MAX_SP,$/;"	e	enum:nl80211_sta_wme_attr
NL80211_STA_WME_UAPSD_QUEUES	api/nl80211.h	/^	NL80211_STA_WME_UAPSD_QUEUES,$/;"	e	enum:nl80211_sta_wme_attr
NL80211_SURVEY_INFO_CHANNEL_TIME	api/nl80211.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_BUSY	api/nl80211.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_BUSY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_EXT_BUSY	api/nl80211.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_EXT_BUSY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_RX	api/nl80211.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_RX,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_CHANNEL_TIME_TX	api/nl80211.h	/^	NL80211_SURVEY_INFO_CHANNEL_TIME_TX,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_FREQUENCY	api/nl80211.h	/^	NL80211_SURVEY_INFO_FREQUENCY,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_IN_USE	api/nl80211.h	/^	NL80211_SURVEY_INFO_IN_USE,$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_MAX	api/nl80211.h	/^	NL80211_SURVEY_INFO_MAX = __NL80211_SURVEY_INFO_AFTER_LAST - 1$/;"	e	enum:nl80211_survey_info
NL80211_SURVEY_INFO_NOISE	api/nl80211.h	/^	NL80211_SURVEY_INFO_NOISE,$/;"	e	enum:nl80211_survey_info
NL80211_TDLS_DISABLE_LINK	api/nl80211.h	/^	NL80211_TDLS_DISABLE_LINK,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_DISCOVERY_REQ	api/nl80211.h	/^	NL80211_TDLS_DISCOVERY_REQ,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_ENABLE_LINK	api/nl80211.h	/^	NL80211_TDLS_ENABLE_LINK,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_PEER_HT	api/nl80211.h	/^	NL80211_TDLS_PEER_HT = 1<<0,$/;"	e	enum:nl80211_tdls_peer_capability
NL80211_TDLS_PEER_VHT	api/nl80211.h	/^	NL80211_TDLS_PEER_VHT = 1<<1,$/;"	e	enum:nl80211_tdls_peer_capability
NL80211_TDLS_PEER_WMM	api/nl80211.h	/^	NL80211_TDLS_PEER_WMM = 1<<2,$/;"	e	enum:nl80211_tdls_peer_capability
NL80211_TDLS_SETUP	api/nl80211.h	/^	NL80211_TDLS_SETUP,$/;"	e	enum:nl80211_tdls_operation
NL80211_TDLS_TEARDOWN	api/nl80211.h	/^	NL80211_TDLS_TEARDOWN,$/;"	e	enum:nl80211_tdls_operation
NL80211_TKIP_DATA_OFFSET_ENCR_KEY	api/nl80211.h	1978;"	d
NL80211_TKIP_DATA_OFFSET_RX_MIC_KEY	api/nl80211.h	1980;"	d
NL80211_TKIP_DATA_OFFSET_TX_MIC_KEY	api/nl80211.h	1979;"	d
NL80211_TXQ_ATTR_AC	api/nl80211.h	/^	NL80211_TXQ_ATTR_AC,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_AIFS	api/nl80211.h	/^	NL80211_TXQ_ATTR_AIFS,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_CWMAX	api/nl80211.h	/^	NL80211_TXQ_ATTR_CWMAX,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_CWMIN	api/nl80211.h	/^	NL80211_TXQ_ATTR_CWMIN,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_MAX	api/nl80211.h	/^	NL80211_TXQ_ATTR_MAX = __NL80211_TXQ_ATTR_AFTER_LAST - 1$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_ATTR_QUEUE	api/nl80211.h	2984;"	d
NL80211_TXQ_ATTR_TXOP	api/nl80211.h	/^	NL80211_TXQ_ATTR_TXOP,$/;"	e	enum:nl80211_txq_attr
NL80211_TXQ_Q_BE	api/nl80211.h	2987;"	d
NL80211_TXQ_Q_BK	api/nl80211.h	2988;"	d
NL80211_TXQ_Q_VI	api/nl80211.h	2986;"	d
NL80211_TXQ_Q_VO	api/nl80211.h	2985;"	d
NL80211_TXRATE_DEFAULT_GI	api/nl80211.h	/^	NL80211_TXRATE_DEFAULT_GI,$/;"	e	enum:nl80211_txrate_gi
NL80211_TXRATE_FORCE_LGI	api/nl80211.h	/^	NL80211_TXRATE_FORCE_LGI,$/;"	e	enum:nl80211_txrate_gi
NL80211_TXRATE_FORCE_SGI	api/nl80211.h	/^	NL80211_TXRATE_FORCE_SGI,$/;"	e	enum:nl80211_txrate_gi
NL80211_TXRATE_GI	api/nl80211.h	/^	NL80211_TXRATE_GI,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_HT	api/nl80211.h	/^	NL80211_TXRATE_HT,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_LEGACY	api/nl80211.h	/^	NL80211_TXRATE_LEGACY,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_MAX	api/nl80211.h	/^	NL80211_TXRATE_MAX = __NL80211_TXRATE_AFTER_LAST - 1$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TXRATE_MCS	api/nl80211.h	3254;"	d
NL80211_TXRATE_VHT	api/nl80211.h	/^	NL80211_TXRATE_VHT,$/;"	e	enum:nl80211_tx_rate_attributes
NL80211_TX_POWER_AUTOMATIC	api/nl80211.h	/^	NL80211_TX_POWER_AUTOMATIC,$/;"	e	enum:nl80211_tx_power_setting
NL80211_TX_POWER_FIXED	api/nl80211.h	/^	NL80211_TX_POWER_FIXED,$/;"	e	enum:nl80211_tx_power_setting
NL80211_TX_POWER_LIMITED	api/nl80211.h	/^	NL80211_TX_POWER_LIMITED,$/;"	e	enum:nl80211_tx_power_setting
NL80211_USER_REG_HINT_CELL_BASE	api/nl80211.h	/^	NL80211_USER_REG_HINT_CELL_BASE = 1,$/;"	e	enum:nl80211_user_reg_hint_type
NL80211_USER_REG_HINT_INDOOR	api/nl80211.h	/^	NL80211_USER_REG_HINT_INDOOR    = 2,$/;"	e	enum:nl80211_user_reg_hint_type
NL80211_USER_REG_HINT_USER	api/nl80211.h	/^	NL80211_USER_REG_HINT_USER	= 0,$/;"	e	enum:nl80211_user_reg_hint_type
NL80211_VENDOR_ID_IS_LINUX	api/nl80211.h	4141;"	d
NL80211_VHT_CAPABILITY_LEN	api/nl80211.h	1982;"	d
NL80211_VHT_NSS_MAX	api/nl80211.h	3255;"	d
NL80211_WOWLAN_PKTPAT_MASK	api/nl80211.h	3416;"	d
NL80211_WOWLAN_PKTPAT_OFFSET	api/nl80211.h	3418;"	d
NL80211_WOWLAN_PKTPAT_PATTERN	api/nl80211.h	3417;"	d
NL80211_WOWLAN_TCP_DATA_INTERVAL	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DATA_INTERVAL,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DATA_PAYLOAD	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DATA_PAYLOAD,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DATA_PAYLOAD_SEQ	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DATA_PAYLOAD_SEQ,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DATA_PAYLOAD_TOKEN	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DATA_PAYLOAD_TOKEN,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DST_IPV4	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DST_IPV4,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DST_MAC	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DST_MAC,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_DST_PORT	api/nl80211.h	/^	NL80211_WOWLAN_TCP_DST_PORT,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_SRC_IPV4	api/nl80211.h	/^	NL80211_WOWLAN_TCP_SRC_IPV4,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_SRC_PORT	api/nl80211.h	/^	NL80211_WOWLAN_TCP_SRC_PORT,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_WAKE_MASK	api/nl80211.h	/^	NL80211_WOWLAN_TCP_WAKE_MASK,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TCP_WAKE_PAYLOAD	api/nl80211.h	/^	NL80211_WOWLAN_TCP_WAKE_PAYLOAD,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NL80211_WOWLAN_TRIG_4WAY_HANDSHAKE	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_4WAY_HANDSHAKE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_ANY	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_ANY,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_DISCONNECT	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_DISCONNECT,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_EAP_IDENT_REQUEST	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_EAP_IDENT_REQUEST,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_GTK_REKEY_FAILURE	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_GTK_REKEY_FAILURE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_GTK_REKEY_SUPPORTED	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_GTK_REKEY_SUPPORTED,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_MAGIC_PKT	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_MAGIC_PKT,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_PKT_PATTERN	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_PKT_PATTERN,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_RFKILL_RELEASE	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_RFKILL_RELEASE,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_TCP_CONNECTION	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_TCP_CONNECTION,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_PKT_80211	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_PKT_80211,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_PKT_80211_LEN	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_PKT_80211_LEN,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_PKT_8023	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_PKT_8023,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_PKT_8023_LEN	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_PKT_8023_LEN,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_TCP_CONNLOST	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_TCP_CONNLOST,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_TCP_MATCH	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_TCP_MATCH,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WOWLAN_TRIG_WAKEUP_TCP_NOMORETOKENS	api/nl80211.h	/^	NL80211_WOWLAN_TRIG_WAKEUP_TCP_NOMORETOKENS,$/;"	e	enum:nl80211_wowlan_triggers
NL80211_WPA_VERSION_1	api/nl80211.h	/^	NL80211_WPA_VERSION_1 = 1 << 0,$/;"	e	enum:nl80211_wpa_versions
NL80211_WPA_VERSION_2	api/nl80211.h	/^	NL80211_WPA_VERSION_2 = 1 << 1,$/;"	e	enum:nl80211_wpa_versions
NUM_NL80211_ATTR_COALESCE_RULE	api/nl80211.h	/^	NUM_NL80211_ATTR_COALESCE_RULE,$/;"	e	enum:nl80211_attr_coalesce_rule
NUM_NL80211_CRIT_PROTO	api/nl80211.h	/^	NUM_NL80211_CRIT_PROTO$/;"	e	enum:nl80211_crit_proto_id
NUM_NL80211_IFACE_COMB	api/nl80211.h	/^	NUM_NL80211_IFACE_COMB,$/;"	e	enum:nl80211_if_combination_attrs
NUM_NL80211_IFACE_LIMIT	api/nl80211.h	/^	NUM_NL80211_IFACE_LIMIT,$/;"	e	enum:nl80211_iface_limit_attrs
NUM_NL80211_IFTYPES	api/nl80211.h	/^	NUM_NL80211_IFTYPES,$/;"	e	enum:nl80211_iftype
NUM_NL80211_KEYTYPES	api/nl80211.h	/^	NUM_NL80211_KEYTYPES$/;"	e	enum:nl80211_key_type
NUM_NL80211_KEY_DEFAULT_TYPES	api/nl80211.h	/^	NUM_NL80211_KEY_DEFAULT_TYPES$/;"	e	enum:nl80211_key_default_types
NUM_NL80211_PKTPAT	api/nl80211.h	/^	NUM_NL80211_PKTPAT,$/;"	e	enum:nl80211_packet_pattern_attr
NUM_NL80211_PLINK_ACTIONS	api/nl80211.h	/^	NUM_NL80211_PLINK_ACTIONS,$/;"	e	enum:plink_actions
NUM_NL80211_PLINK_STATES	api/nl80211.h	/^	NUM_NL80211_PLINK_STATES,$/;"	e	enum:nl80211_plink_state
NUM_NL80211_PMKSA_CANDIDATE	api/nl80211.h	/^	NUM_NL80211_PMKSA_CANDIDATE,$/;"	e	enum:nl80211_pmksa_candidate_attr
NUM_NL80211_REKEY_DATA	api/nl80211.h	/^	NUM_NL80211_REKEY_DATA,$/;"	e	enum:nl80211_rekey_data
NUM_NL80211_WOWLAN_PKTPAT	api/nl80211.h	3419;"	d
NUM_NL80211_WOWLAN_TCP	api/nl80211.h	/^	NUM_NL80211_WOWLAN_TCP,$/;"	e	enum:nl80211_wowlan_tcp_attrs
NUM_NL80211_WOWLAN_TRIG	api/nl80211.h	/^	NUM_NL80211_WOWLAN_TRIG,$/;"	e	enum:nl80211_wowlan_triggers
R_common	iwinfo_lua.c	/^static const luaL_reg R_common[] = {$/;"	v	file:
R_madwifi	iwinfo_lua.c	/^static const luaL_reg R_madwifi[] = {$/;"	v	file:
R_nl80211	iwinfo_lua.c	/^static const luaL_reg R_nl80211[] = {$/;"	v	file:
R_wext	iwinfo_lua.c	/^static const luaL_reg R_wext[] = {$/;"	v	file:
R_wl	iwinfo_lua.c	/^static const luaL_reg R_wl[] = {$/;"	v	file:
SIOC80211IFCREATE	api/madwifi.h	60;"	d
SIOC80211IFDESTROY	api/madwifi.h	61;"	d
SIOCGIWAP	api/wext.h	269;"	d
SIOCGIWAPLIST	api/wext.h	270;"	d
SIOCGIWAUTH	api/wext.h	320;"	d
SIOCGIWENCODE	api/wext.h	297;"	d
SIOCGIWENCODEEXT	api/wext.h	324;"	d
SIOCGIWESSID	api/wext.h	276;"	d
SIOCGIWFRAG	api/wext.h	289;"	d
SIOCGIWFREQ	api/wext.h	245;"	d
SIOCGIWGENIE	api/wext.h	313;"	d
SIOCGIWMODE	api/wext.h	247;"	d
SIOCGIWMODUL	api/wext.h	303;"	d
SIOCGIWNAME	api/wext.h	236;"	d
SIOCGIWNICKN	api/wext.h	278;"	d
SIOCGIWNWID	api/wext.h	243;"	d
SIOCGIWPOWER	api/wext.h	300;"	d
SIOCGIWPRIV	api/wext.h	255;"	d
SIOCGIWRANGE	api/wext.h	253;"	d
SIOCGIWRATE	api/wext.h	285;"	d
SIOCGIWRETRY	api/wext.h	293;"	d
SIOCGIWRTS	api/wext.h	287;"	d
SIOCGIWSCAN	api/wext.h	272;"	d
SIOCGIWSENS	api/wext.h	249;"	d
SIOCGIWSPY	api/wext.h	263;"	d
SIOCGIWSTATS	api/wext.h	257;"	d
SIOCGIWTHRSPY	api/wext.h	265;"	d
SIOCGIWTXPOW	api/wext.h	291;"	d
SIOCIWFIRST	api/wext.h	354;"	d
SIOCIWFIRSTPRIV	api/wext.h	338;"	d
SIOCIWLAST	api/wext.h	355;"	d
SIOCIWLASTPRIV	api/wext.h	339;"	d
SIOCSIWAP	api/wext.h	268;"	d
SIOCSIWAUTH	api/wext.h	319;"	d
SIOCSIWCOMMIT	api/wext.h	235;"	d
SIOCSIWENCODE	api/wext.h	296;"	d
SIOCSIWENCODEEXT	api/wext.h	323;"	d
SIOCSIWESSID	api/wext.h	275;"	d
SIOCSIWFRAG	api/wext.h	288;"	d
SIOCSIWFREQ	api/wext.h	244;"	d
SIOCSIWGENIE	api/wext.h	312;"	d
SIOCSIWMLME	api/wext.h	316;"	d
SIOCSIWMODE	api/wext.h	246;"	d
SIOCSIWMODUL	api/wext.h	302;"	d
SIOCSIWNICKN	api/wext.h	277;"	d
SIOCSIWNWID	api/wext.h	242;"	d
SIOCSIWPMKSA	api/wext.h	327;"	d
SIOCSIWPOWER	api/wext.h	299;"	d
SIOCSIWPRIV	api/wext.h	254;"	d
SIOCSIWRANGE	api/wext.h	252;"	d
SIOCSIWRATE	api/wext.h	284;"	d
SIOCSIWRETRY	api/wext.h	292;"	d
SIOCSIWRTS	api/wext.h	286;"	d
SIOCSIWSCAN	api/wext.h	271;"	d
SIOCSIWSENS	api/wext.h	248;"	d
SIOCSIWSPY	api/wext.h	262;"	d
SIOCSIWSTATS	api/wext.h	256;"	d
SIOCSIWTHRSPY	api/wext.h	264;"	d
SIOCSIWTXPOW	api/wext.h	290;"	d
WIRELESS_EXT	api/wext.h	88;"	d
WLC_BAND_2G	api/broadcom.h	60;"	d
WLC_BAND_5G	api/broadcom.h	59;"	d
WLC_BAND_ALL	api/broadcom.h	61;"	d
WLC_CNTRY_BUF_SZ	api/broadcom.h	29;"	d
WLC_GET_AP	api/broadcom.h	42;"	d
WLC_GET_ASSOCLIST	api/broadcom.h	48;"	d
WLC_GET_AUTH	api/broadcom.h	34;"	d
WLC_GET_BANDLIST	api/broadcom.h	47;"	d
WLC_GET_BSSID	api/broadcom.h	35;"	d
WLC_GET_BSS_INFO	api/broadcom.h	46;"	d
WLC_GET_CHANNEL	api/broadcom.h	37;"	d
WLC_GET_COUNTRY	api/broadcom.h	40;"	d
WLC_GET_COUNTRY_LIST	api/broadcom.h	50;"	d
WLC_GET_INFRA	api/broadcom.h	33;"	d
WLC_GET_MAGIC	api/broadcom.h	31;"	d
WLC_GET_PASSIVE	api/broadcom.h	39;"	d
WLC_GET_PHYTYPE	api/broadcom.h	38;"	d
WLC_GET_PHY_NOISE	api/broadcom.h	45;"	d
WLC_GET_RATE	api/broadcom.h	32;"	d
WLC_GET_REVINFO	api/broadcom.h	41;"	d
WLC_GET_RSSI	api/broadcom.h	43;"	d
WLC_GET_SSID	api/broadcom.h	36;"	d
WLC_GET_VAR	api/broadcom.h	51;"	d
WLC_GET_WPA_AUTH	api/broadcom.h	49;"	d
WLC_GET_WSEC	api/broadcom.h	44;"	d
WLC_IOCTL_MAGIC	api/broadcom.h	26;"	d
WLC_IOCTL_MAXLEN	api/broadcom.h	27;"	d
WLC_PHY_TYPE_A	api/broadcom.h	53;"	d
WLC_PHY_TYPE_B	api/broadcom.h	54;"	d
WLC_PHY_TYPE_G	api/broadcom.h	55;"	d
WLC_PHY_TYPE_LP	api/broadcom.h	57;"	d
WLC_PHY_TYPE_N	api/broadcom.h	56;"	d
WL_BSS_NOISE_OFFSET	api/broadcom.h	24;"	d
WL_BSS_RSSI_OFFSET	api/broadcom.h	23;"	d
WL_MAX_STA_COUNT	api/broadcom.h	21;"	d
WL_MCSSET_LEN	api/broadcom.h	20;"	d
WL_NUMRATES	api/broadcom.h	79;"	d
_BROADCOM_H	api/broadcom.h	18;"	d
_LINUX_WIRELESS_H	api/wext.h	11;"	d
_MADWIFI_H	api/madwifi.h	22;"	d
__IWINFO_H_	include/iwinfo.h	2;"	d
__IWINFO_LUALIB_H_	include/iwinfo/lua.h	20;"	d
__IWINFO_NL80211_H_	iwinfo_nl80211.h	20;"	d
__IWINFO_UTILS_H_	include/iwinfo/utils.h	20;"	d
__IWINFO_WEXT_SCAN_H_	iwinfo_wext.h	20;"	d
__LINUX_NL80211_H	api/nl80211.h	2;"	d
__NL80211_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_attrs
__NL80211_ATTR_CQM_AFTER_LAST	api/nl80211.h	/^	__NL80211_ATTR_CQM_AFTER_LAST,$/;"	e	enum:nl80211_attr_cqm
__NL80211_ATTR_CQM_INVALID	api/nl80211.h	/^	__NL80211_ATTR_CQM_INVALID,$/;"	e	enum:nl80211_attr_cqm
__NL80211_AUTHTYPE_NUM	api/nl80211.h	/^	__NL80211_AUTHTYPE_NUM,$/;"	e	enum:nl80211_auth_type
__NL80211_BAND_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_BAND_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_band_attr
__NL80211_BAND_ATTR_INVALID	api/nl80211.h	/^	__NL80211_BAND_ATTR_INVALID,$/;"	e	enum:nl80211_band_attr
__NL80211_BITRATE_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_BITRATE_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_bitrate_attr
__NL80211_BITRATE_ATTR_INVALID	api/nl80211.h	/^	__NL80211_BITRATE_ATTR_INVALID,$/;"	e	enum:nl80211_bitrate_attr
__NL80211_BSS_AFTER_LAST	api/nl80211.h	/^	__NL80211_BSS_AFTER_LAST,$/;"	e	enum:nl80211_bss
__NL80211_BSS_INVALID	api/nl80211.h	/^	__NL80211_BSS_INVALID,$/;"	e	enum:nl80211_bss
__NL80211_CMD_AFTER_LAST	api/nl80211.h	/^	__NL80211_CMD_AFTER_LAST,$/;"	e	enum:nl80211_commands
__NL80211_COALESCE_RULE_INVALID	api/nl80211.h	/^	__NL80211_COALESCE_RULE_INVALID,$/;"	e	enum:nl80211_attr_coalesce_rule
__NL80211_FREQUENCY_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_FREQUENCY_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_frequency_attr
__NL80211_FREQUENCY_ATTR_INVALID	api/nl80211.h	/^	__NL80211_FREQUENCY_ATTR_INVALID,$/;"	e	enum:nl80211_frequency_attr
__NL80211_FREQUENCY_ATTR_NO_IBSS	api/nl80211.h	/^	__NL80211_FREQUENCY_ATTR_NO_IBSS,$/;"	e	enum:nl80211_frequency_attr
__NL80211_KEY_AFTER_LAST	api/nl80211.h	/^	__NL80211_KEY_AFTER_LAST,$/;"	e	enum:nl80211_key_attributes
__NL80211_KEY_DEFAULT_TYPE_INVALID	api/nl80211.h	/^	__NL80211_KEY_DEFAULT_TYPE_INVALID,$/;"	e	enum:nl80211_key_default_types
__NL80211_KEY_INVALID	api/nl80211.h	/^	__NL80211_KEY_INVALID,$/;"	e	enum:nl80211_key_attributes
__NL80211_MESHCONF_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_MESHCONF_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_meshconf_params
__NL80211_MESHCONF_INVALID	api/nl80211.h	/^	__NL80211_MESHCONF_INVALID,$/;"	e	enum:nl80211_meshconf_params
__NL80211_MESH_POWER_AFTER_LAST	api/nl80211.h	/^	__NL80211_MESH_POWER_AFTER_LAST,$/;"	e	enum:nl80211_mesh_power_mode
__NL80211_MESH_SETUP_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_MESH_SETUP_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_mesh_setup_params
__NL80211_MESH_SETUP_INVALID	api/nl80211.h	/^	__NL80211_MESH_SETUP_INVALID,$/;"	e	enum:nl80211_mesh_setup_params
__NL80211_MNTR_FLAG_AFTER_LAST	api/nl80211.h	/^	__NL80211_MNTR_FLAG_AFTER_LAST,$/;"	e	enum:nl80211_mntr_flags
__NL80211_MNTR_FLAG_INVALID	api/nl80211.h	/^	__NL80211_MNTR_FLAG_INVALID,$/;"	e	enum:nl80211_mntr_flags
__NL80211_MPATH_INFO_AFTER_LAST	api/nl80211.h	/^	__NL80211_MPATH_INFO_AFTER_LAST,$/;"	e	enum:nl80211_mpath_info
__NL80211_MPATH_INFO_INVALID	api/nl80211.h	/^	__NL80211_MPATH_INFO_INVALID,$/;"	e	enum:nl80211_mpath_info
__NL80211_PKTPAT_INVALID	api/nl80211.h	/^	__NL80211_PKTPAT_INVALID,$/;"	e	enum:nl80211_packet_pattern_attr
__NL80211_PMKSA_CANDIDATE_INVALID	api/nl80211.h	/^	__NL80211_PMKSA_CANDIDATE_INVALID,$/;"	e	enum:nl80211_pmksa_candidate_attr
__NL80211_RATE_INFO_AFTER_LAST	api/nl80211.h	/^	__NL80211_RATE_INFO_AFTER_LAST,$/;"	e	enum:nl80211_rate_info
__NL80211_RATE_INFO_INVALID	api/nl80211.h	/^	__NL80211_RATE_INFO_INVALID,$/;"	e	enum:nl80211_rate_info
__NL80211_REG_RULE_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_REG_RULE_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_reg_rule_attr
__NL80211_REG_RULE_ATTR_INVALID	api/nl80211.h	/^	__NL80211_REG_RULE_ATTR_INVALID,$/;"	e	enum:nl80211_reg_rule_attr
__NL80211_REKEY_DATA_INVALID	api/nl80211.h	/^	__NL80211_REKEY_DATA_INVALID,$/;"	e	enum:nl80211_rekey_data
__NL80211_RRF_NO_IBSS	api/nl80211.h	/^	__NL80211_RRF_NO_IBSS		= 1<<8,$/;"	e	enum:nl80211_reg_rule_flags
__NL80211_SCHED_SCAN_MATCH_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_SCHED_SCAN_MATCH_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_sched_scan_match_attr
__NL80211_SCHED_SCAN_MATCH_ATTR_INVALID	api/nl80211.h	/^	__NL80211_SCHED_SCAN_MATCH_ATTR_INVALID,$/;"	e	enum:nl80211_sched_scan_match_attr
__NL80211_STA_BSS_PARAM_AFTER_LAST	api/nl80211.h	/^	__NL80211_STA_BSS_PARAM_AFTER_LAST,$/;"	e	enum:nl80211_sta_bss_param
__NL80211_STA_BSS_PARAM_INVALID	api/nl80211.h	/^	__NL80211_STA_BSS_PARAM_INVALID,$/;"	e	enum:nl80211_sta_bss_param
__NL80211_STA_FLAG_AFTER_LAST	api/nl80211.h	/^	__NL80211_STA_FLAG_AFTER_LAST,$/;"	e	enum:nl80211_sta_flags
__NL80211_STA_FLAG_INVALID	api/nl80211.h	/^	__NL80211_STA_FLAG_INVALID,$/;"	e	enum:nl80211_sta_flags
__NL80211_STA_INFO_AFTER_LAST	api/nl80211.h	/^	__NL80211_STA_INFO_AFTER_LAST,$/;"	e	enum:nl80211_sta_info
__NL80211_STA_INFO_INVALID	api/nl80211.h	/^	__NL80211_STA_INFO_INVALID,$/;"	e	enum:nl80211_sta_info
__NL80211_STA_WME_AFTER_LAST	api/nl80211.h	/^	__NL80211_STA_WME_AFTER_LAST,$/;"	e	enum:nl80211_sta_wme_attr
__NL80211_STA_WME_INVALID	api/nl80211.h	/^	__NL80211_STA_WME_INVALID,$/;"	e	enum:nl80211_sta_wme_attr
__NL80211_SURVEY_INFO_AFTER_LAST	api/nl80211.h	/^	__NL80211_SURVEY_INFO_AFTER_LAST,$/;"	e	enum:nl80211_survey_info
__NL80211_SURVEY_INFO_INVALID	api/nl80211.h	/^	__NL80211_SURVEY_INFO_INVALID,$/;"	e	enum:nl80211_survey_info
__NL80211_TXQ_ATTR_AFTER_LAST	api/nl80211.h	/^	__NL80211_TXQ_ATTR_AFTER_LAST,$/;"	e	enum:nl80211_txq_attr
__NL80211_TXQ_ATTR_INVALID	api/nl80211.h	/^	__NL80211_TXQ_ATTR_INVALID,$/;"	e	enum:nl80211_txq_attr
__NL80211_TXRATE_AFTER_LAST	api/nl80211.h	/^	__NL80211_TXRATE_AFTER_LAST,$/;"	e	enum:nl80211_tx_rate_attributes
__NL80211_TXRATE_INVALID	api/nl80211.h	/^	__NL80211_TXRATE_INVALID,$/;"	e	enum:nl80211_tx_rate_attributes
__NL80211_WOWLAN_PKTPAT_INVALID	api/nl80211.h	3415;"	d
__NL80211_WOWLAN_TCP_INVALID	api/nl80211.h	/^	__NL80211_WOWLAN_TCP_INVALID,$/;"	e	enum:nl80211_wowlan_tcp_attrs
__NL80211_WOWLAN_TRIG_INVALID	api/nl80211.h	/^	__NL80211_WOWLAN_TRIG_INVALID,$/;"	e	enum:nl80211_wowlan_triggers
addr	api/wext.h	/^	struct sockaddr		addr;		\/* Source address (hw\/mac) *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::sockaddr
addr	api/wext.h	/^	struct sockaddr	addr;		\/* Destination address (hw\/mac) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr
addr	api/wext.h	/^	struct sockaddr	addr; \/* ff:ff:ff:ff:ff:ff for broadcast\/multicast$/;"	m	struct:iw_encode_ext	typeref:struct:iw_encode_ext::sockaddr
addr	api/wext.h	/^	struct sockaddr	addr;$/;"	m	struct:iw_mlme	typeref:struct:iw_mlme::sockaddr
alg	api/wext.h	/^	uint16_t		alg; \/* IW_ENCODE_ALG_* *\/$/;"	m	struct:iw_encode_ext
anarev	api/broadcom.h	/^	uint		anarev;		\/* anacore rev *\/$/;"	m	struct:wlc_rev_info
ap_addr	api/wext.h	/^	struct sockaddr	ap_addr;	\/* Access point address *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::sockaddr
assoclist	include/iwinfo.h	/^	int (*assoclist)(const char *, char *, int *);$/;"	m	struct:iwinfo_ops
auth_algs	include/iwinfo.h	/^	uint8_t auth_algs;$/;"	m	struct:iwinfo_crypto_entry
auth_suites	include/iwinfo.h	/^	uint8_t auth_suites;$/;"	m	struct:iwinfo_crypto_entry
avg_qual	api/wext.h	/^	struct iw_quality	avg_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality
backends	iwinfo_lib.c	/^static const struct iwinfo_ops *backends[] = {$/;"	v	typeref:struct:iwinfo_ops	file:
band	api/broadcom.h	/^	uint32_t band;$/;"	m	struct:wl_country_list
band_set	api/broadcom.h	/^	uint32_t band_set;$/;"	m	struct:wl_country_list
beacon	api/wext.h	/^	uint32_t		beacon;		\/* Missed beacons\/superframe *\/$/;"	m	struct:iw_missed
bitrate	api/wext.h	/^	int32_t		bitrate[IW_MAX_BITRATES];	\/* list, in bps *\/$/;"	m	struct:iw_range
bitrate	api/wext.h	/^	struct iw_param	bitrate;	\/* default bit rate *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
bitrate	include/iwinfo.h	/^	int (*bitrate)(const char *, int *);$/;"	m	struct:iwinfo_ops
bitrate_capa	api/wext.h	/^	uint32_t		bitrate_capa;	\/* Types of bitrates supported *\/$/;"	m	struct:iw_range
boardid	api/broadcom.h	/^	uint		boardid;	\/* board identifier (usu. PCI sub-device id) *\/$/;"	m	struct:wlc_rev_info
boardrev	api/broadcom.h	/^	uint		boardrev;	\/* board revision *\/$/;"	m	struct:wlc_rev_info
boardvendor	api/broadcom.h	/^	uint		boardvendor;	\/* board vendor (usu. PCI sub-vendor id) *\/$/;"	m	struct:wlc_rev_info
bssid	api/wext.h	/^	struct sockaddr	bssid; \/* ff:ff:ff:ff:ff:ff for broadcast BSSID or$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::sockaddr
bssid	api/wext.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmkid_cand	typeref:struct:iw_pmkid_cand::sockaddr
bssid	api/wext.h	/^	struct sockaddr	bssid;$/;"	m	struct:iw_pmksa	typeref:struct:iw_pmksa::sockaddr
bssid	include/iwinfo.h	/^	int (*bssid)(const char *, char *);$/;"	m	struct:iwinfo_ops
bssid	iwinfo_nl80211.c	/^	unsigned char bssid[7];$/;"	m	struct:nl80211_ssid_bssid	file:
buf	api/broadcom.h	/^	void					*buf;	\/* pointer to user buffer *\/$/;"	m	struct:wl_ioctl
buf	iwinfo_nl80211.h	/^	void *buf;$/;"	m	struct:nl80211_array_buf
buflen	api/broadcom.h	/^	uint32_t buflen;$/;"	m	struct:wl_country_list
bufsize	api/nl80211.h	/^	__u32 min_len, max_len, bufsize;$/;"	m	struct:nl80211_wowlan_tcp_data_token_feature
bus	api/broadcom.h	/^	uint		bus;		\/* bus type *\/$/;"	m	struct:wlc_rev_info
cap	api/broadcom.h	/^    uint16_t				cap;        \/* sta's advertised capabilities *\/$/;"	m	struct:wl_sta_info
cb	iwinfo_nl80211.h	/^	struct nl_cb *cb;$/;"	m	struct:nl80211_msg_conveyor	typeref:struct:nl80211_msg_conveyor::nl_cb
ccode	include/iwinfo.h	/^	uint8_t ccode[4];$/;"	m	struct:iwinfo_country_entry
ccode	iwinfo_madwifi.c	/^	u_int16_t ccode;$/;"	m	struct:ISO3166_to_CCode	file:
channel	include/iwinfo.h	/^	int (*channel)(const char *, int *);$/;"	m	struct:iwinfo_ops
channel	include/iwinfo.h	/^	uint8_t channel;$/;"	m	struct:iwinfo_freqlist_entry
channel	include/iwinfo.h	/^	uint8_t channel;$/;"	m	struct:iwinfo_scanlist_entry
channel_list	api/wext.h	/^	struct iw_freq	channel_list[IW_MAX_FREQUENCIES];$/;"	m	struct:iw_scan_req	typeref:struct:iw_scan_req::iw_freq
chipnum	api/broadcom.h	/^	uint		chipnum;	\/* chip number *\/$/;"	m	struct:wlc_rev_info
chiprev	api/broadcom.h	/^	uint		chiprev;	\/* chip revision *\/$/;"	m	struct:wlc_rev_info
close	include/iwinfo.h	/^	void (*close)(void);$/;"	m	struct:iwinfo_ops
cmd	api/broadcom.h	/^	uint32_t				cmd;	\/* common ioctl definition *\/$/;"	m	struct:wl_ioctl
cmd	api/wext.h	/^	uint16_t		cmd;			\/* Wireless IOCTL *\/$/;"	m	struct:iw_event
cmd	api/wext.h	/^	uint16_t		cmd; \/* IW_MLME_* *\/$/;"	m	struct:iw_mlme
cmd	api/wext.h	/^	uint32_t		cmd;		\/* Number of the ioctl to issue *\/$/;"	m	struct:iw_priv_args
cmd	api/wext.h	/^	uint32_t		cmd; \/* IW_PMKSA_* *\/$/;"	m	struct:iw_pmksa
code	api/wext.h	/^	uint32_t		code;		\/* Rx : Unable to code\/decode (WEP) *\/$/;"	m	struct:iw_discarded
corerev	api/broadcom.h	/^	uint		corerev;	\/* core revision *\/$/;"	m	struct:wlc_rev_info
count	api/broadcom.h	/^	uint					count;$/;"	m	struct:wl_maclist
count	api/broadcom.h	/^	uint32_t count;$/;"	m	struct:wl_country_list
count	api/broadcom.h	/^    uint32_t  				count;          \/* # rates in this set *\/$/;"	m	struct:wl_rateset
count	iwinfo_nl80211.h	/^	int count;$/;"	m	struct:nl80211_array_buf
country	include/iwinfo.h	/^	int (*country)(const char *, char *);$/;"	m	struct:iwinfo_ops
country_abbrev	api/broadcom.h	/^	char country_abbrev[1];$/;"	m	struct:wl_country_list
countrylist	include/iwinfo.h	/^	int (*countrylist)(const char *, char *, int *);$/;"	m	struct:iwinfo_ops
crypto	include/iwinfo.h	/^	struct iwinfo_crypto_entry crypto;$/;"	m	struct:iwinfo_scanlist_entry	typeref:struct:iwinfo_scanlist_entry::iwinfo_crypto_entry
current	iwinfo_wext.h	/^  char *        current;        \/* Current event in stream of events *\/$/;"	m	struct:stream_descr
data	api/wext.h	/^	struct iw_point	data;		\/* Other large parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point
dbm	include/iwinfo.h	/^	uint8_t  dbm;$/;"	m	struct:iwinfo_txpwrlist_entry
device_id	include/iwinfo.h	/^	uint16_t device_id;$/;"	m	struct:iwinfo_hardware_entry
device_id	include/iwinfo.h	/^	uint16_t device_id;$/;"	m	struct:iwinfo_hardware_id
device_name	include/iwinfo.h	/^	char device_name[64];$/;"	m	struct:iwinfo_hardware_entry
deviceid	api/broadcom.h	/^	uint		deviceid;	\/* device id of chip *\/$/;"	m	struct:wlc_rev_info
disabled	api/wext.h	/^  uint8_t		disabled;	\/* Disable the feature *\/$/;"	m	struct:iw_param
discard	api/wext.h	/^	struct iw_discarded	discard;	\/* Packet discarded counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_discarded
driverrev	api/broadcom.h	/^	uint		driverrev;	\/* driver version *\/$/;"	m	struct:wlc_rev_info
e	api/wext.h	/^	int16_t		e;		\/* Exponent *\/$/;"	m	struct:iw_freq
e	iwinfo_nl80211.c	/^	struct iwinfo_scanlist_entry *e;$/;"	m	struct:nl80211_scanlist	typeref:struct:nl80211_scanlist::iwinfo_scanlist_entry	file:
ea	api/broadcom.h	/^	struct wl_ether_addr 	ea[1];$/;"	m	struct:wl_maclist	typeref:struct:wl_maclist::wl_ether_addr
ea	api/broadcom.h	/^    unsigned char			ea[6];      \/* Station address *\/$/;"	m	struct:wl_sta_info
enabled	include/iwinfo.h	/^	uint8_t	enabled;$/;"	m	struct:iwinfo_crypto_entry
enc_capa	api/wext.h	/^	uint32_t		enc_capa;	\/* IW_ENC_CAPA_* bit field *\/$/;"	m	struct:iw_range
encoding	api/wext.h	/^	struct iw_point	encoding;	\/* Encoding stuff : tokens *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point
encoding_login_index	api/wext.h	/^	uint8_t	encoding_login_index;	\/* token index for login token *\/$/;"	m	struct:iw_range
encoding_size	api/wext.h	/^	uint16_t	encoding_size[IW_MAX_ENCODING_SIZES];	\/* Different token sizes *\/$/;"	m	struct:iw_range
encryption	include/iwinfo.h	/^	int (*encryption)(const char *, char *);$/;"	m	struct:iwinfo_ops
end	iwinfo_wext.h	/^  char *        end;            \/* End of the stream *\/$/;"	m	struct:stream_descr
essid	api/wext.h	/^	struct iw_point	essid;		\/* Extended network name *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_point
essid	api/wext.h	/^	uint8_t		essid[IW_ESSID_MAX_SIZE];$/;"	m	struct:iw_scan_req
essid_len	api/wext.h	/^	uint8_t		essid_len;$/;"	m	struct:iw_scan_req
event_capa	api/wext.h	/^	uint32_t		event_capa[6];$/;"	m	struct:iw_range
event_type_size	iwinfo_wext.h	/^static const int event_type_size[] = {$/;"	v
ext_flags	api/wext.h	/^	uint32_t		ext_flags; \/* IW_ENCODE_EXT_* *\/$/;"	m	struct:iw_encode_ext
fixed	api/wext.h	/^  uint8_t		fixed;		\/* Hardware should not use auto select *\/$/;"	m	struct:iw_param
flags	api/broadcom.h	/^    uint32_t				flags;      \/* flags defined below *\/$/;"	m	struct:wl_sta_info
flags	api/wext.h	/^	uint32_t		flags; \/* IW_PMKID_CAND_* *\/$/;"	m	struct:iw_pmkid_cand
flags	api/wext.h	/^	uint32_t		flags;$/;"	m	struct:iw_michaelmicfailure
flags	api/wext.h	/^	uint8_t		flags;		\/* Flags (fixed\/auto) *\/$/;"	m	struct:iw_freq
flags	api/wext.h	/^	uint8_t		flags; \/* reserved as padding; use zero, this may$/;"	m	struct:iw_scan_req
flags	api/wext.h	/^  uint16_t		flags;		\/* Optional params *\/$/;"	m	struct:iw_point
flags	api/wext.h	/^  uint16_t		flags;		\/* Various specifc flags (if any) *\/$/;"	m	struct:iw_param
flags	iwinfo_wext.h	/^	uint32_t	flags;			\/* Special handling of the request *\/$/;"	m	struct:iw_ioctl_description
foo	api/broadcom.h	/^	uint16_t				foo;$/;"	m	struct:wl_sta_rssi
format_assocrate	iwinfo_cli.c	/^static char * format_assocrate(struct iwinfo_rate_entry *r)$/;"	f	file:
format_bssid	iwinfo_cli.c	/^static char * format_bssid(unsigned char *mac)$/;"	f	file:
format_channel	iwinfo_cli.c	/^static char * format_channel(int ch)$/;"	f	file:
format_enc_ciphers	iwinfo_cli.c	/^static char * format_enc_ciphers(int ciphers)$/;"	f	file:
format_enc_suites	iwinfo_cli.c	/^static char * format_enc_suites(int suites)$/;"	f	file:
format_encryption	iwinfo_cli.c	/^static char * format_encryption(struct iwinfo_crypto_entry *c)$/;"	f	file:
format_frequency	iwinfo_cli.c	/^static char * format_frequency(int freq)$/;"	f	file:
format_hwmodes	iwinfo_cli.c	/^static char * format_hwmodes(int modes)$/;"	f	file:
format_noise	iwinfo_cli.c	/^static char * format_noise(int noise)$/;"	f	file:
format_quality	iwinfo_cli.c	/^static char * format_quality(int qual)$/;"	f	file:
format_quality_max	iwinfo_cli.c	/^static char * format_quality_max(int qmax)$/;"	f	file:
format_rate	iwinfo_cli.c	/^static char * format_rate(int rate)$/;"	f	file:
format_signal	iwinfo_cli.c	/^static char * format_signal(int sig)$/;"	f	file:
format_ssid	iwinfo_cli.c	/^static char * format_ssid(char *ssid)$/;"	f	file:
format_txpower	iwinfo_cli.c	/^static char * format_txpower(int pwr)$/;"	f	file:
frag	api/wext.h	/^	struct iw_param	frag;		\/* Fragmentation threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
fragment	api/wext.h	/^	uint32_t		fragment;	\/* Rx : Can't perform MAC reassembly *\/$/;"	m	struct:iw_discarded
freq	api/wext.h	/^	struct iw_freq	freq;		\/* frequency or channel :$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_freq
freq	api/wext.h	/^	struct iw_freq	freq[IW_MAX_FREQUENCIES];	\/* list *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_freq
freqlist	include/iwinfo.h	/^	int (*freqlist)(const char *, char *, int *);$/;"	m	struct:iwinfo_ops
frequency	include/iwinfo.h	/^	int (*frequency)(const char *, int *);$/;"	m	struct:iwinfo_ops
frequency_offset	include/iwinfo.h	/^	int (*frequency_offset)(const char *, int *);$/;"	m	struct:iwinfo_ops
frequency_offset	include/iwinfo.h	/^	int16_t frequency_offset;$/;"	m	struct:iwinfo_hardware_entry
get80211priv	iwinfo_madwifi.c	/^static int get80211priv(const char *ifname, int op, void *data, size_t len)$/;"	f	file:
get_args	api/wext.h	/^	uint16_t		get_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args
group_ciphers	include/iwinfo.h	/^	uint8_t group_ciphers;$/;"	m	struct:iwinfo_crypto_entry
hardware_id	include/iwinfo.h	/^	int (*hardware_id)(const char *, char *);$/;"	m	struct:iwinfo_ops
hardware_name	include/iwinfo.h	/^	int (*hardware_name)(const char *, char *);$/;"	m	struct:iwinfo_ops
header_type	iwinfo_wext.h	/^	uint8_t	header_type;		\/* NULL, iw_point or other *\/$/;"	m	struct:iw_ioctl_description
hex	iwinfo_nl80211.c	1886;"	d	file:
high	api/wext.h	/^	struct iw_quality	high;		\/* High threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality
hwmodelist	include/iwinfo.h	/^	int (*hwmodelist)(const char *, int *);$/;"	m	struct:iwinfo_ops
i	api/wext.h	/^	uint8_t		i;		\/* List index (when in range struct) *\/$/;"	m	struct:iw_freq
ic_channels	api/madwifi.h	/^	u_int8_t ic_channels[IEEE80211_CHAN_BYTES];$/;"	m	struct:ieee80211req_chanlist
ic_chans	api/madwifi.h	/^	struct ieee80211_channel ic_chans[IEEE80211_CHAN_MAX];$/;"	m	struct:ieee80211req_chaninfo	typeref:struct:ieee80211req_chaninfo::ieee80211_channel
ic_flags	api/madwifi.h	/^	u_int16_t ic_flags;	\/* see below *\/$/;"	m	struct:ieee80211_channel
ic_freq	api/madwifi.h	/^	u_int16_t ic_freq;	\/* setting in MHz *\/$/;"	m	struct:ieee80211_channel
ic_idletime	api/madwifi.h	/^	u_int8_t ic_idletime; \/* phy idle time in % *\/$/;"	m	struct:ieee80211_channel
ic_ieee	api/madwifi.h	/^	u_int8_t ic_ieee;	\/* IEEE channel number *\/$/;"	m	struct:ieee80211_channel
ic_maxpower	api/madwifi.h	/^	int8_t ic_maxpower;	\/* maximum tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_maxregpower	api/madwifi.h	/^	int8_t ic_maxregpower;	\/* maximum regulatory tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_minpower	api/madwifi.h	/^	int8_t ic_minpower;	\/* minimum tx power in dBm *\/$/;"	m	struct:ieee80211_channel
ic_nchans	api/madwifi.h	/^	u_int ic_nchans;$/;"	m	struct:ieee80211req_chaninfo
ic_scanflags	api/madwifi.h	/^	u_int8_t ic_scanflags;$/;"	m	struct:ieee80211_channel
icp_flags	api/madwifi.h	/^	u_int16_t icp_flags;			\/* see below *\/$/;"	m	struct:ieee80211_clone_params
icp_name	api/madwifi.h	/^	char icp_name[IFNAMSIZ];		\/* device name *\/$/;"	m	struct:ieee80211_clone_params
icp_opmode	api/madwifi.h	/^	u_int16_t icp_opmode;			\/* operating mode *\/$/;"	m	struct:ieee80211_clone_params
id	iwinfo_nl80211.h	/^	int id;$/;"	m	struct:nl80211_group_conveyor
idle	api/broadcom.h	/^    uint32_t				idle;       \/* time since data pkt rx'd from sta *\/$/;"	m	struct:wl_sta_info
ieee80211_authmode	api/madwifi.h	/^enum ieee80211_authmode {$/;"	g
ieee80211_channel	api/madwifi.h	/^struct ieee80211_channel {$/;"	s
ieee80211_clone_params	api/madwifi.h	/^struct ieee80211_clone_params {$/;"	s
ieee80211_opmode	api/madwifi.h	/^enum ieee80211_opmode {$/;"	g
ieee80211req_chaninfo	api/madwifi.h	/^struct ieee80211req_chaninfo {$/;"	s
ieee80211req_chanlist	api/madwifi.h	/^struct ieee80211req_chanlist {$/;"	s
ieee80211req_key	api/madwifi.h	/^struct ieee80211req_key {$/;"	s
ieee80211req_sta_info	api/madwifi.h	/^struct ieee80211req_sta_info {$/;"	s
ifr_ifrn	api/wext.h	/^	} ifr_ifrn;$/;"	m	struct:iwreq	typeref:union:iwreq::__anon2
ifrn_name	api/wext.h	/^		char	ifrn_name[16];	\/* if name, e.g. "eth0" *\/$/;"	m	union:iwreq::__anon2
ik_flags	api/madwifi.h	/^	u_int8_t ik_flags;$/;"	m	struct:ieee80211req_key
ik_keydata	api/madwifi.h	/^	u_int8_t ik_keydata[IEEE80211_KEYBUF_SIZE+IEEE80211_MICBUF_SIZE];$/;"	m	struct:ieee80211req_key
ik_keyix	api/madwifi.h	/^	u_int16_t ik_keyix;	\/* key index *\/$/;"	m	struct:ieee80211req_key
ik_keylen	api/madwifi.h	/^	u_int8_t ik_keylen;		\/* key length in bytes *\/$/;"	m	struct:ieee80211req_key
ik_keyrsc	api/madwifi.h	/^	u_int64_t ik_keyrsc;		\/* key receive sequence counter *\/$/;"	m	struct:ieee80211req_key
ik_keytsc	api/madwifi.h	/^	u_int64_t ik_keytsc;		\/* key transmit sequence counter *\/$/;"	m	struct:ieee80211req_key
ik_macaddr	api/madwifi.h	/^	u_int8_t ik_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_key
ik_pad	api/madwifi.h	/^	u_int8_t ik_pad;$/;"	m	struct:ieee80211req_key
ik_type	api/madwifi.h	/^	u_int8_t ik_type;		\/* key\/cipher type *\/$/;"	m	struct:ieee80211req_key
in	api/broadcom.h	/^    uint32_t				in;   		\/* seconds elapsed since associated *\/$/;"	m	struct:wl_sta_info
inactive	include/iwinfo.h	/^	uint32_t inactive;$/;"	m	struct:iwinfo_assoclist_entry
index	api/wext.h	/^	uint32_t		index; \/* the smaller the index, the higher the$/;"	m	struct:iw_pmkid_cand
ioctl_socket	iwinfo_utils.c	/^static int ioctl_socket = -1;$/;"	v	file:
is_40mhz	include/iwinfo.h	/^	uint8_t is_40mhz:1;$/;"	m	struct:iwinfo_rate_entry
is_short_gi	include/iwinfo.h	/^	uint8_t is_short_gi:1;$/;"	m	struct:iwinfo_rate_entry
isi_associd	api/madwifi.h	/^	u_int16_t isi_associd;		\/* assoc response *\/$/;"	m	struct:ieee80211req_sta_info
isi_athflags	api/madwifi.h	/^	u_int8_t isi_athflags;		\/* Atheros capabilities *\/$/;"	m	struct:ieee80211req_sta_info
isi_authmode	api/madwifi.h	/^	u_int8_t isi_authmode;		\/* authentication algorithm *\/$/;"	m	struct:ieee80211req_sta_info
isi_capinfo	api/madwifi.h	/^	u_int16_t isi_capinfo;		\/* capabilities *\/$/;"	m	struct:ieee80211req_sta_info
isi_erp	api/madwifi.h	/^	u_int8_t isi_erp;		\/* ERP element *\/$/;"	m	struct:ieee80211req_sta_info
isi_flags	api/madwifi.h	/^	u_int16_t isi_flags;		\/* channel flags *\/$/;"	m	struct:ieee80211req_sta_info
isi_freq	api/madwifi.h	/^	u_int16_t isi_freq;		\/* MHz *\/$/;"	m	struct:ieee80211req_sta_info
isi_ie_len	api/madwifi.h	/^	u_int16_t isi_ie_len;		\/* IE length *\/$/;"	m	struct:ieee80211req_sta_info
isi_inact	api/madwifi.h	/^	u_int16_t isi_inact;		\/* inactivity timer *\/$/;"	m	struct:ieee80211req_sta_info
isi_len	api/madwifi.h	/^	u_int16_t isi_len;		\/* length (mult of 4) *\/$/;"	m	struct:ieee80211req_sta_info
isi_macaddr	api/madwifi.h	/^	u_int8_t isi_macaddr[IEEE80211_ADDR_LEN];$/;"	m	struct:ieee80211req_sta_info
isi_noise	api/madwifi.h	/^	int8_t isi_noise;$/;"	m	struct:ieee80211req_sta_info
isi_nrates	api/madwifi.h	/^	u_int8_t isi_nrates;		\/* negotiated rates *\/$/;"	m	struct:ieee80211req_sta_info
isi_opmode	api/madwifi.h	/^	u_int8_t isi_opmode;		\/* sta operating mode *\/$/;"	m	struct:ieee80211req_sta_info
isi_rates	api/madwifi.h	/^	u_int8_t isi_rates[IEEE80211_RATE_MAXSIZE];$/;"	m	struct:ieee80211req_sta_info
isi_rssi	api/madwifi.h	/^	u_int8_t isi_rssi;$/;"	m	struct:ieee80211req_sta_info
isi_rxseqs	api/madwifi.h	/^	u_int16_t isi_rxseqs[17];	\/* seq previous for qos frames*\/$/;"	m	struct:ieee80211req_sta_info
isi_state	api/madwifi.h	/^	u_int16_t isi_state;		\/* state flags *\/$/;"	m	struct:ieee80211req_sta_info
isi_txpower	api/madwifi.h	/^	u_int16_t isi_txpower;		\/* current tx power *\/$/;"	m	struct:ieee80211req_sta_info
isi_txrate	api/madwifi.h	/^	u_int8_t isi_txrate;		\/* index to isi_rates[] *\/$/;"	m	struct:ieee80211req_sta_info
isi_txseqs	api/madwifi.h	/^	u_int16_t isi_txseqs[17];	\/* seq to be transmitted *\/$/;"	m	struct:ieee80211req_sta_info
isi_uapsd	api/madwifi.h	/^	u_int8_t isi_uapsd;		\/* UAPSD queues *\/$/;"	m	struct:ieee80211req_sta_info
isi_vlan	api/madwifi.h	/^	u_int16_t isi_vlan;		\/* vlan tag *\/$/;"	m	struct:ieee80211req_sta_info
iso3166	include/iwinfo.h	/^	uint16_t iso3166;$/;"	m	struct:iwinfo_country_entry
iso3166	include/iwinfo.h	/^	uint16_t iso3166;$/;"	m	struct:iwinfo_iso3166_label
iso3166	iwinfo_madwifi.c	/^	u_int16_t iso3166;$/;"	m	struct:ISO3166_to_CCode	file:
iw_discarded	api/wext.h	/^struct	iw_discarded$/;"	s
iw_encode_ext	api/wext.h	/^struct	iw_encode_ext$/;"	s
iw_event	api/wext.h	/^struct iw_event$/;"	s
iw_freq	api/wext.h	/^struct	iw_freq$/;"	s
iw_ioctl_description	iwinfo_wext.h	/^struct iw_ioctl_description$/;"	s
iw_michaelmicfailure	api/wext.h	/^struct	iw_michaelmicfailure$/;"	s
iw_missed	api/wext.h	/^struct	iw_missed$/;"	s
iw_mlme	api/wext.h	/^struct	iw_mlme$/;"	s
iw_param	api/wext.h	/^struct	iw_param$/;"	s
iw_pmkid_cand	api/wext.h	/^struct	iw_pmkid_cand$/;"	s
iw_pmksa	api/wext.h	/^struct	iw_pmksa$/;"	s
iw_point	api/wext.h	/^struct	iw_point$/;"	s
iw_priv_args	api/wext.h	/^struct	iw_priv_args$/;"	s
iw_quality	api/wext.h	/^struct	iw_quality$/;"	s
iw_range	api/wext.h	/^struct	iw_range$/;"	s
iw_scan_req	api/wext.h	/^struct	iw_scan_req$/;"	s
iw_statistics	api/wext.h	/^struct	iw_statistics$/;"	s
iw_thrspy	api/wext.h	/^struct	iw_thrspy$/;"	s
iwinfo_L__gc	iwinfo_lua.c	/^static int iwinfo_L__gc(lua_State *L)$/;"	f	file:
iwinfo_L_assoclist	iwinfo_lua.c	/^static int iwinfo_L_assoclist(lua_State *L, int (*func)(const char *, char *, int *))$/;"	f	file:
iwinfo_L_country_lookup	iwinfo_lua.c	/^static char * iwinfo_L_country_lookup(char *buf, int len, int iso3166)$/;"	f	file:
iwinfo_L_countrylist	iwinfo_lua.c	/^static int iwinfo_L_countrylist(lua_State *L, int (*func)(const char *, char *, int *))$/;"	f	file:
iwinfo_L_cryptotable	iwinfo_lua.c	/^static void iwinfo_L_cryptotable(lua_State *L, struct iwinfo_crypto_entry *c)$/;"	f	file:
iwinfo_L_encryption	iwinfo_lua.c	/^static int iwinfo_L_encryption(lua_State *L, int (*func)(const char *, char *))$/;"	f	file:
iwinfo_L_freqlist	iwinfo_lua.c	/^static int iwinfo_L_freqlist(lua_State *L, int (*func)(const char *, char *, int *))$/;"	f	file:
iwinfo_L_hardware_id	iwinfo_lua.c	/^static int iwinfo_L_hardware_id(lua_State *L, int (*func)(const char *, char *))$/;"	f	file:
iwinfo_L_hwmodelist	iwinfo_lua.c	/^static int iwinfo_L_hwmodelist(lua_State *L, int (*func)(const char *, int *))$/;"	f	file:
iwinfo_L_mbssid_support	iwinfo_lua.c	/^static int iwinfo_L_mbssid_support(lua_State *L, int (*func)(const char *, int *))$/;"	f	file:
iwinfo_L_mode	iwinfo_lua.c	/^static int iwinfo_L_mode(lua_State *L, int (*func)(const char *, int *))$/;"	f	file:
iwinfo_L_scanlist	iwinfo_lua.c	/^static int iwinfo_L_scanlist(lua_State *L, int (*func)(const char *, char *, int *))$/;"	f	file:
iwinfo_L_txpwrlist	iwinfo_lua.c	/^static int iwinfo_L_txpwrlist(lua_State *L, int (*func)(const char *, char *, int *))$/;"	f	file:
iwinfo_L_type	iwinfo_lua.c	/^static int iwinfo_L_type(lua_State *L)$/;"	f	file:
iwinfo_assoclist_entry	include/iwinfo.h	/^struct iwinfo_assoclist_entry {$/;"	s
iwinfo_backend	iwinfo_lib.c	/^const struct iwinfo_ops * iwinfo_backend(const char *ifname)$/;"	f
iwinfo_close	iwinfo_utils.c	/^void iwinfo_close(void)$/;"	f
iwinfo_country_entry	include/iwinfo.h	/^struct iwinfo_country_entry {$/;"	s
iwinfo_crypto_desc	iwinfo_lua.c	/^static char * iwinfo_crypto_desc(struct iwinfo_crypto_entry *c)$/;"	f	file:
iwinfo_crypto_entry	include/iwinfo.h	/^struct iwinfo_crypto_entry {$/;"	s
iwinfo_crypto_print_ciphers	iwinfo_lua.c	/^static char * iwinfo_crypto_print_ciphers(int ciphers)$/;"	f	file:
iwinfo_crypto_print_suites	iwinfo_lua.c	/^static char * iwinfo_crypto_print_suites(int suites)$/;"	f	file:
iwinfo_dbm2mw	iwinfo_utils.c	/^int iwinfo_dbm2mw(int in)$/;"	f
iwinfo_finish	iwinfo_lib.c	/^void iwinfo_finish(void)$/;"	f
iwinfo_freqlist_entry	include/iwinfo.h	/^struct iwinfo_freqlist_entry {$/;"	s
iwinfo_hardware	iwinfo_utils.c	/^struct iwinfo_hardware_entry * iwinfo_hardware(struct iwinfo_hardware_id *id)$/;"	f
iwinfo_hardware_entry	include/iwinfo.h	/^struct iwinfo_hardware_entry {$/;"	s
iwinfo_hardware_id	include/iwinfo.h	/^struct iwinfo_hardware_id {$/;"	s
iwinfo_hardware_id_from_mtd	iwinfo_utils.c	/^int iwinfo_hardware_id_from_mtd(struct iwinfo_hardware_id *id)$/;"	f
iwinfo_ifdown	iwinfo_utils.c	/^int iwinfo_ifdown(const char *ifname)$/;"	f
iwinfo_ifmac	iwinfo_utils.c	/^int iwinfo_ifmac(const char *ifname)$/;"	f
iwinfo_ifup	iwinfo_utils.c	/^int iwinfo_ifup(const char *ifname)$/;"	f
iwinfo_ioctl	iwinfo_utils.c	/^int iwinfo_ioctl(int cmd, void *ifr)$/;"	f
iwinfo_ioctl_socket	iwinfo_utils.c	/^static int iwinfo_ioctl_socket(void)$/;"	f	file:
iwinfo_iso3166_label	include/iwinfo.h	/^struct iwinfo_iso3166_label {$/;"	s
iwinfo_mw2dbm	iwinfo_utils.c	/^int iwinfo_mw2dbm(int in)$/;"	f
iwinfo_opmode	include/iwinfo.h	/^enum iwinfo_opmode {$/;"	g
iwinfo_ops	include/iwinfo.h	/^struct iwinfo_ops {$/;"	s
iwinfo_parse_rsn	iwinfo_utils.c	/^void iwinfo_parse_rsn(struct iwinfo_crypto_entry *c, uint8_t *data, uint8_t len,$/;"	f
iwinfo_rate_entry	include/iwinfo.h	/^struct iwinfo_rate_entry {$/;"	s
iwinfo_scanlist_entry	include/iwinfo.h	/^struct iwinfo_scanlist_entry {$/;"	s
iwinfo_txpwrlist_entry	include/iwinfo.h	/^struct iwinfo_txpwrlist_entry {$/;"	s
iwinfo_type	iwinfo_lib.c	/^const char * iwinfo_type(const char *ifname)$/;"	f
iwreq	api/wext.h	/^struct	iwreq $/;"	s
iwreq_data	api/wext.h	/^union	iwreq_data$/;"	u
key	api/wext.h	/^	uint8_t		key[1];$/;"	m	struct:iw_encode_ext
key_len	api/wext.h	/^	uint16_t		key_len;$/;"	m	struct:iw_encode_ext
len	api/broadcom.h	/^	uint32_t				len;	\/* length of user buffer *\/$/;"	m	struct:wl_ioctl
len	api/broadcom.h	/^    uint16_t				len;        \/* length in bytes of this structure *\/$/;"	m	struct:wl_sta_info
len	api/nl80211.h	/^	__u32 offset, len;$/;"	m	struct:nl80211_wowlan_tcp_data_token
len	api/nl80211.h	/^	__u32 start, offset, len;$/;"	m	struct:nl80211_wowlan_tcp_data_seq
len	api/wext.h	/^	uint16_t		len;			\/* Real lenght of this stuff *\/$/;"	m	struct:iw_event
len	iwinfo_nl80211.c	/^	int len;$/;"	m	struct:nl80211_scanlist	file:
length	api/wext.h	/^  uint16_t		length;		\/* number of fields or size in bytes *\/$/;"	m	struct:iw_point
level	api/wext.h	/^	uint8_t		level;		\/* signal level (dBm) *\/$/;"	m	struct:iw_quality
listen_interval_inms	api/broadcom.h	/^    uint32_t				listen_interval_inms; \/* Min Listen interval in ms for this STA *\/$/;"	m	struct:wl_sta_info
lookup_country	iwinfo_cli.c	/^static char * lookup_country(char *buf, int len, int iso3166)$/;"	f	file:
low	api/wext.h	/^	struct iw_quality	low;		\/* Low threshold *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality
luaopen_iwinfo	iwinfo_lua.c	/^LUALIB_API int luaopen_iwinfo(lua_State *L) {$/;"	f
m	api/wext.h	/^	int32_t		m;		\/* Mantissa *\/$/;"	m	struct:iw_freq
mac	api/broadcom.h	/^	char					mac[6];$/;"	m	struct:wl_sta_rssi
mac	include/iwinfo.h	/^	uint8_t	mac[6];$/;"	m	struct:iwinfo_assoclist_entry
mac	include/iwinfo.h	/^	uint8_t mac[6];$/;"	m	struct:iwinfo_scanlist_entry
madwifi_close	iwinfo_madwifi.c	/^static void madwifi_close(void)$/;"	f	file:
madwifi_get_assoclist	iwinfo_madwifi.c	/^static int madwifi_get_assoclist(const char *ifname, char *buf, int *len)$/;"	f	file:
madwifi_get_bitrate	iwinfo_madwifi.c	/^static int madwifi_get_bitrate(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_bssid	iwinfo_madwifi.c	/^static int madwifi_get_bssid(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_channel	iwinfo_madwifi.c	/^static int madwifi_get_channel(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_country	iwinfo_madwifi.c	/^static int madwifi_get_country(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_countrylist	iwinfo_madwifi.c	/^static int madwifi_get_countrylist(const char *ifname, char *buf, int *len)$/;"	f	file:
madwifi_get_encryption	iwinfo_madwifi.c	/^static int madwifi_get_encryption(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_freqlist	iwinfo_madwifi.c	/^static int madwifi_get_freqlist(const char *ifname, char *buf, int *len)$/;"	f	file:
madwifi_get_frequency	iwinfo_madwifi.c	/^static int madwifi_get_frequency(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_frequency_offset	iwinfo_madwifi.c	/^static int madwifi_get_frequency_offset(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_hardware_entry	iwinfo_madwifi.c	/^madwifi_get_hardware_entry(const char *ifname)$/;"	f	file:
madwifi_get_hardware_id	iwinfo_madwifi.c	/^static int madwifi_get_hardware_id(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_hardware_name	iwinfo_madwifi.c	/^static int madwifi_get_hardware_name(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_hwmodelist	iwinfo_madwifi.c	/^static int madwifi_get_hwmodelist(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_mbssid_support	iwinfo_madwifi.c	/^static int madwifi_get_mbssid_support(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_mode	iwinfo_madwifi.c	/^static int madwifi_get_mode(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_noise	iwinfo_madwifi.c	/^static int madwifi_get_noise(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_phyname	iwinfo_madwifi.c	/^static int madwifi_get_phyname(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_quality	iwinfo_madwifi.c	/^static int madwifi_get_quality(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_quality_max	iwinfo_madwifi.c	/^static int madwifi_get_quality_max(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_scanlist	iwinfo_madwifi.c	/^static int madwifi_get_scanlist(const char *ifname, char *buf, int *len)$/;"	f	file:
madwifi_get_signal	iwinfo_madwifi.c	/^static int madwifi_get_signal(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_ssid	iwinfo_madwifi.c	/^static int madwifi_get_ssid(const char *ifname, char *buf)$/;"	f	file:
madwifi_get_txpower	iwinfo_madwifi.c	/^static int madwifi_get_txpower(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_txpower_offset	iwinfo_madwifi.c	/^static int madwifi_get_txpower_offset(const char *ifname, int *buf)$/;"	f	file:
madwifi_get_txpwrlist	iwinfo_madwifi.c	/^static int madwifi_get_txpwrlist(const char *ifname, char *buf, int *len)$/;"	f	file:
madwifi_ifadd	iwinfo_madwifi.c	/^static char * madwifi_ifadd(const char *ifname)$/;"	f	file:
madwifi_ifdel	iwinfo_madwifi.c	/^static void madwifi_ifdel(const char *ifname)$/;"	f	file:
madwifi_isvap	iwinfo_madwifi.c	/^static char * madwifi_isvap(const char *ifname, const char *wifiname)$/;"	f	file:
madwifi_iswifi	iwinfo_madwifi.c	/^static int madwifi_iswifi(const char *ifname)$/;"	f	file:
madwifi_ops	iwinfo_madwifi.c	/^const struct iwinfo_ops madwifi_ops = {$/;"	v	typeref:struct:iwinfo_ops
madwifi_phyname	iwinfo_madwifi.c	/^static const char * madwifi_phyname(const char *ifname)$/;"	f	file:
madwifi_probe	iwinfo_madwifi.c	/^static int madwifi_probe(const char *ifname)$/;"	f	file:
madwifi_wrq	iwinfo_madwifi.c	/^static int madwifi_wrq(struct iwreq *wrq, const char *ifname, int cmd, void *data, size_t len)$/;"	f	file:
main	iwinfo_cli.c	/^int main(int argc, char **argv)$/;"	f
mask	api/nl80211.h	/^	__u32 mask;$/;"	m	struct:nl80211_sta_flag_update
max_channel_time	api/wext.h	/^	uint32_t		max_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req
max_delay	api/nl80211.h	/^	__u32 max_delay;$/;"	m	struct:nl80211_coalesce_rule_support
max_encoding_tokens	api/wext.h	/^	uint8_t	max_encoding_tokens;	\/* Max number of tokens *\/$/;"	m	struct:iw_range
max_frag	api/wext.h	/^	int32_t		max_frag;	\/* Maximal frag threshold *\/$/;"	m	struct:iw_range
max_len	api/nl80211.h	/^	__u32 min_len, max_len, bufsize;$/;"	m	struct:nl80211_wowlan_tcp_data_token_feature
max_nwid	api/wext.h	/^	uint32_t		max_nwid;	\/* Maximal NWID we are able to set *\/$/;"	m	struct:iw_range
max_pattern_len	api/nl80211.h	/^	__u32 max_pattern_len;$/;"	m	struct:nl80211_pattern_support
max_patterns	api/nl80211.h	/^	__u32 max_patterns;$/;"	m	struct:nl80211_pattern_support
max_pkt_offset	api/nl80211.h	/^	__u32 max_pkt_offset;$/;"	m	struct:nl80211_pattern_support
max_pmp	api/wext.h	/^	int32_t		max_pmp;	\/* Maximal PM period *\/$/;"	m	struct:iw_range
max_pms	api/wext.h	/^	int32_t		max_pms;	\/* Maximal PM saving *\/$/;"	m	struct:iw_range
max_pmt	api/wext.h	/^	int32_t		max_pmt;	\/* Maximal PM timeout *\/$/;"	m	struct:iw_range
max_qual	api/wext.h	/^	struct iw_quality	max_qual;	\/* Quality of the link *\/$/;"	m	struct:iw_range	typeref:struct:iw_range::iw_quality
max_r_time	api/wext.h	/^	int32_t		max_r_time;	\/* Maximal retry lifetime *\/$/;"	m	struct:iw_range
max_retry	api/wext.h	/^	int32_t		max_retry;	\/* Maximal number of retries *\/$/;"	m	struct:iw_range
max_rts	api/wext.h	/^	int32_t		max_rts;	\/* Maximal RTS threshold *\/$/;"	m	struct:iw_range
max_rules	api/nl80211.h	/^	__u32 max_rules;$/;"	m	struct:nl80211_coalesce_rule_support
max_tokens	iwinfo_wext.h	/^	uint16_t	max_tokens;		\/* Max acceptable token number *\/$/;"	m	struct:iw_ioctl_description
mbssid_support	include/iwinfo.h	/^	int (*mbssid_support)(const char *, int *);$/;"	m	struct:iwinfo_ops
mcs	api/nl80211.h	/^	__u16 mcs[NL80211_VHT_NSS_MAX];$/;"	m	struct:nl80211_txrate_vht
mcs	include/iwinfo.h	/^	int8_t mcs;$/;"	m	struct:iwinfo_rate_entry
mhz	include/iwinfo.h	/^	uint32_t mhz;$/;"	m	struct:iwinfo_freqlist_entry
min	iwinfo_nl80211.c	28;"	d	file:
min_channel_time	api/wext.h	/^	uint32_t		min_channel_time; \/* in TU *\/$/;"	m	struct:iw_scan_req
min_frag	api/wext.h	/^	int32_t		min_frag;	\/* Minimal frag threshold *\/$/;"	m	struct:iw_range
min_len	api/nl80211.h	/^	__u32 min_len, max_len, bufsize;$/;"	m	struct:nl80211_wowlan_tcp_data_token_feature
min_nwid	api/wext.h	/^	uint32_t		min_nwid;	\/* Minimal NWID we are able to set *\/$/;"	m	struct:iw_range
min_pattern_len	api/nl80211.h	/^	__u32 min_pattern_len;$/;"	m	struct:nl80211_pattern_support
min_pmp	api/wext.h	/^	int32_t		min_pmp;	\/* Minimal PM period *\/$/;"	m	struct:iw_range
min_pms	api/wext.h	/^	int32_t		min_pms;	\/* Minimal PM saving *\/$/;"	m	struct:iw_range
min_pmt	api/wext.h	/^	int32_t		min_pmt;	\/* Minimal PM timeout *\/$/;"	m	struct:iw_range
min_r_time	api/wext.h	/^	int32_t		min_r_time;	\/* Minimal retry lifetime *\/$/;"	m	struct:iw_range
min_retry	api/wext.h	/^	int32_t		min_retry;	\/* Minimal number of retries *\/$/;"	m	struct:iw_range
min_rts	api/wext.h	/^	int32_t		min_rts;	\/* Minimal RTS threshold *\/$/;"	m	struct:iw_range
min_tokens	iwinfo_wext.h	/^	uint16_t	min_tokens;		\/* Min acceptable token number *\/$/;"	m	struct:iw_ioctl_description
misc	api/wext.h	/^	uint32_t		misc;		\/* Others cases *\/$/;"	m	struct:iw_discarded
miss	api/wext.h	/^	struct iw_missed	miss;		\/* Packet missed counts *\/$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_missed
mode	api/wext.h	/^	uint32_t		mode;		\/* Operation mode *\/$/;"	m	union:iwreq_data
mode	include/iwinfo.h	/^	enum iwinfo_opmode mode;$/;"	m	struct:iwinfo_scanlist_entry	typeref:enum:iwinfo_scanlist_entry::iwinfo_opmode
mode	include/iwinfo.h	/^	int (*mode)(const char *, int *);$/;"	m	struct:iwinfo_ops
modul_capa	api/wext.h	/^	int32_t		modul_capa;	\/* IW_MODUL_* bit field *\/$/;"	m	struct:iw_range
msg	iwinfo_nl80211.h	/^	struct nl_msg *msg;$/;"	m	struct:nl80211_msg_conveyor	typeref:struct:nl80211_msg_conveyor::nl_msg
mw	include/iwinfo.h	/^	uint16_t mw;$/;"	m	struct:iwinfo_txpwrlist_entry
name	api/wext.h	/^	char		name[16];	\/* Name of the extension *\/$/;"	m	struct:iw_priv_args
name	api/wext.h	/^	char		name[16];$/;"	m	union:iwreq_data
name	include/iwinfo.h	/^	const char *name;$/;"	m	struct:iwinfo_ops
name	include/iwinfo.h	/^	uint8_t  name[28];$/;"	m	struct:iwinfo_iso3166_label
name	iwinfo_nl80211.h	/^	const char *name;$/;"	m	struct:nl80211_group_conveyor
needed	api/broadcom.h	/^	uint32_t				needed;	\/* bytes needed (optional) *\/$/;"	m	struct:wl_ioctl
nl80211	iwinfo_nl80211.h	/^	struct genl_family *nl80211;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::genl_family
nl80211_ac	api/nl80211.h	/^enum nl80211_ac {$/;"	g
nl80211_acl_policy	api/nl80211.h	/^enum nl80211_acl_policy {$/;"	g
nl80211_array_buf	iwinfo_nl80211.h	/^struct nl80211_array_buf {$/;"	s
nl80211_attr_coalesce_rule	api/nl80211.h	/^enum nl80211_attr_coalesce_rule {$/;"	g
nl80211_attr_cqm	api/nl80211.h	/^enum nl80211_attr_cqm {$/;"	g
nl80211_attrs	api/nl80211.h	/^enum nl80211_attrs {$/;"	g
nl80211_auth_type	api/nl80211.h	/^enum nl80211_auth_type {$/;"	g
nl80211_band	api/nl80211.h	/^enum nl80211_band {$/;"	g
nl80211_band_attr	api/nl80211.h	/^enum nl80211_band_attr {$/;"	g
nl80211_bitrate_attr	api/nl80211.h	/^enum nl80211_bitrate_attr {$/;"	g
nl80211_bss	api/nl80211.h	/^enum nl80211_bss {$/;"	g
nl80211_bss_scan_width	api/nl80211.h	/^enum nl80211_bss_scan_width {$/;"	g
nl80211_bss_status	api/nl80211.h	/^enum nl80211_bss_status {$/;"	g
nl80211_chan_width	api/nl80211.h	/^enum nl80211_chan_width {$/;"	g
nl80211_channel2freq	iwinfo_nl80211.c	/^static int nl80211_channel2freq(int channel, const char *band)$/;"	f	file:
nl80211_channel_type	api/nl80211.h	/^enum nl80211_channel_type {$/;"	g
nl80211_close	iwinfo_nl80211.c	/^static void nl80211_close(void)$/;"	f	file:
nl80211_coalesce_condition	api/nl80211.h	/^enum nl80211_coalesce_condition {$/;"	g
nl80211_coalesce_rule_support	api/nl80211.h	/^struct nl80211_coalesce_rule_support {$/;"	s
nl80211_commands	api/nl80211.h	/^enum nl80211_commands {$/;"	g
nl80211_connect_failed_reason	api/nl80211.h	/^enum nl80211_connect_failed_reason {$/;"	g
nl80211_cqm_rssi_threshold_event	api/nl80211.h	/^enum nl80211_cqm_rssi_threshold_event {$/;"	g
nl80211_crit_proto_id	api/nl80211.h	/^enum nl80211_crit_proto_id {$/;"	g
nl80211_ctl	iwinfo_nl80211.c	/^static struct nl80211_msg_conveyor * nl80211_ctl(int cmd, int flags)$/;"	f	file:
nl80211_dfs_regions	api/nl80211.h	/^enum nl80211_dfs_regions {$/;"	g
nl80211_dfs_state	api/nl80211.h	/^enum nl80211_dfs_state {$/;"	g
nl80211_event_conveyor	iwinfo_nl80211.h	/^struct nl80211_event_conveyor {$/;"	s
nl80211_feature_flags	api/nl80211.h	/^enum nl80211_feature_flags {$/;"	g
nl80211_fill_signal	iwinfo_nl80211.c	/^static void nl80211_fill_signal(const char *ifname, struct nl80211_rssi_rate *r)$/;"	f	file:
nl80211_fill_signal_cb	iwinfo_nl80211.c	/^static int nl80211_fill_signal_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_free	iwinfo_nl80211.c	/^static void nl80211_free(struct nl80211_msg_conveyor *cv)$/;"	f	file:
nl80211_freq2channel	iwinfo_nl80211.c	/^static int nl80211_freq2channel(int freq)$/;"	f	file:
nl80211_frequency_attr	api/nl80211.h	/^enum nl80211_frequency_attr {$/;"	g
nl80211_get_assoclist	iwinfo_nl80211.c	/^static int nl80211_get_assoclist(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_assoclist_cb	iwinfo_nl80211.c	/^static int nl80211_get_assoclist_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_bitrate	iwinfo_nl80211.c	/^static int nl80211_get_bitrate(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_bssid	iwinfo_nl80211.c	/^static int nl80211_get_bssid(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_channel	iwinfo_nl80211.c	/^static int nl80211_get_channel(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_country	iwinfo_nl80211.c	/^static int nl80211_get_country(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_country_cb	iwinfo_nl80211.c	/^static int nl80211_get_country_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_countrylist	iwinfo_nl80211.c	/^static int nl80211_get_countrylist(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_encryption	iwinfo_nl80211.c	/^static int nl80211_get_encryption(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_freqlist	iwinfo_nl80211.c	/^static int nl80211_get_freqlist(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_freqlist_cb	iwinfo_nl80211.c	/^static int nl80211_get_freqlist_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_frequency	iwinfo_nl80211.c	/^static int nl80211_get_frequency(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_frequency_info_cb	iwinfo_nl80211.c	/^static int nl80211_get_frequency_info_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_frequency_offset	iwinfo_nl80211.c	/^static int nl80211_get_frequency_offset(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_frequency_scan_cb	iwinfo_nl80211.c	/^static int nl80211_get_frequency_scan_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_hardware_entry	iwinfo_nl80211.c	/^nl80211_get_hardware_entry(const char *ifname)$/;"	f	file:
nl80211_get_hardware_id	iwinfo_nl80211.c	/^static int nl80211_get_hardware_id(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_hardware_name	iwinfo_nl80211.c	/^static int nl80211_get_hardware_name(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_hwmodelist	iwinfo_nl80211.c	/^static int nl80211_get_hwmodelist(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_hwmodelist_cb	iwinfo_nl80211.c	/^static int nl80211_get_hwmodelist_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_ifcomb_cb	iwinfo_nl80211.c	/^static int nl80211_get_ifcomb_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_mbssid_support	iwinfo_nl80211.c	/^static int nl80211_get_mbssid_support(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_mode	iwinfo_nl80211.c	/^static int nl80211_get_mode(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_mode_cb	iwinfo_nl80211.c	/^static int nl80211_get_mode_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_noise	iwinfo_nl80211.c	/^static int nl80211_get_noise(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_noise_cb	iwinfo_nl80211.c	/^static int nl80211_get_noise_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_phyname	iwinfo_nl80211.c	/^static int nl80211_get_phyname(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_quality	iwinfo_nl80211.c	/^static int nl80211_get_quality(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_quality_max	iwinfo_nl80211.c	/^static int nl80211_get_quality_max(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_scancrypto	iwinfo_nl80211.c	/^static void nl80211_get_scancrypto(const char *spec,$/;"	f	file:
nl80211_get_scanlist	iwinfo_nl80211.c	/^static int nl80211_get_scanlist(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_scanlist_cb	iwinfo_nl80211.c	/^static int nl80211_get_scanlist_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_scanlist_ie	iwinfo_nl80211.c	/^static void nl80211_get_scanlist_ie(struct nlattr **bss,$/;"	f	file:
nl80211_get_scanlist_nl	iwinfo_nl80211.c	/^static int nl80211_get_scanlist_nl(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_signal	iwinfo_nl80211.c	/^static int nl80211_get_signal(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_ssid	iwinfo_nl80211.c	/^static int nl80211_get_ssid(const char *ifname, char *buf)$/;"	f	file:
nl80211_get_ssid_bssid_cb	iwinfo_nl80211.c	/^static int nl80211_get_ssid_bssid_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_get_txpower	iwinfo_nl80211.c	/^static int nl80211_get_txpower(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_txpower_offset	iwinfo_nl80211.c	/^static int nl80211_get_txpower_offset(const char *ifname, int *buf)$/;"	f	file:
nl80211_get_txpwrlist	iwinfo_nl80211.c	/^static int nl80211_get_txpwrlist(const char *ifname, char *buf, int *len)$/;"	f	file:
nl80211_get_txpwrlist_cb	iwinfo_nl80211.c	/^static int nl80211_get_txpwrlist_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_getval	iwinfo_nl80211.c	/^static char * nl80211_getval(const char *ifname, const char *buf, const char *key)$/;"	f	file:
nl80211_group_conveyor	iwinfo_nl80211.h	/^struct nl80211_group_conveyor {$/;"	s
nl80211_hidden_ssid	api/nl80211.h	/^enum nl80211_hidden_ssid {$/;"	g
nl80211_hostapd_hup	iwinfo_nl80211.c	/^static void nl80211_hostapd_hup(const char *ifname)$/;"	f	file:
nl80211_hostapd_info	iwinfo_nl80211.c	/^static char * nl80211_hostapd_info(const char *ifname)$/;"	f	file:
nl80211_if_combination_attrs	api/nl80211.h	/^enum nl80211_if_combination_attrs {$/;"	g
nl80211_iface_limit_attrs	api/nl80211.h	/^enum nl80211_iface_limit_attrs {$/;"	g
nl80211_ifadd	iwinfo_nl80211.c	/^static char * nl80211_ifadd(const char *ifname)$/;"	f	file:
nl80211_ifdel	iwinfo_nl80211.c	/^static void nl80211_ifdel(const char *ifname)$/;"	f	file:
nl80211_ifname2phy	iwinfo_nl80211.c	/^static char * nl80211_ifname2phy(const char *ifname)$/;"	f	file:
nl80211_ifname2phy_cb	iwinfo_nl80211.c	/^static int nl80211_ifname2phy_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_iftype	api/nl80211.h	/^enum nl80211_iftype {$/;"	g
nl80211_init	iwinfo_nl80211.c	/^static int nl80211_init(void)$/;"	f	file:
nl80211_key_attributes	api/nl80211.h	/^enum nl80211_key_attributes {$/;"	g
nl80211_key_default_types	api/nl80211.h	/^enum nl80211_key_default_types {$/;"	g
nl80211_key_type	api/nl80211.h	/^enum nl80211_key_type {$/;"	g
nl80211_mesh_power_mode	api/nl80211.h	/^enum nl80211_mesh_power_mode {$/;"	g
nl80211_mesh_setup_params	api/nl80211.h	/^enum nl80211_mesh_setup_params {$/;"	g
nl80211_meshconf_params	api/nl80211.h	/^enum nl80211_meshconf_params {$/;"	g
nl80211_mfp	api/nl80211.h	/^enum nl80211_mfp {$/;"	g
nl80211_mntr_flags	api/nl80211.h	/^enum nl80211_mntr_flags {$/;"	g
nl80211_mpath_flags	api/nl80211.h	/^enum nl80211_mpath_flags {$/;"	g
nl80211_mpath_info	api/nl80211.h	/^enum nl80211_mpath_info {$/;"	g
nl80211_msg	iwinfo_nl80211.c	/^static struct nl80211_msg_conveyor * nl80211_msg(const char *ifname,$/;"	f	file:
nl80211_msg_ack	iwinfo_nl80211.c	/^static int nl80211_msg_ack(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_msg_conveyor	iwinfo_nl80211.h	/^struct nl80211_msg_conveyor {$/;"	s
nl80211_msg_error	iwinfo_nl80211.c	/^static int nl80211_msg_error(struct sockaddr_nl *nla,$/;"	f	file:
nl80211_msg_finish	iwinfo_nl80211.c	/^static int nl80211_msg_finish(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_msg_response	iwinfo_nl80211.c	/^static int nl80211_msg_response(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_new	iwinfo_nl80211.c	/^static struct nl80211_msg_conveyor * nl80211_new(struct genl_family *family,$/;"	f	file:
nl80211_ops	iwinfo_nl80211.c	/^const struct iwinfo_ops nl80211_ops = {$/;"	v	typeref:struct:iwinfo_ops
nl80211_packet_pattern_attr	api/nl80211.h	/^enum nl80211_packet_pattern_attr {$/;"	g
nl80211_parse	iwinfo_nl80211.c	/^static struct nlattr ** nl80211_parse(struct nl_msg *msg)$/;"	f	file:
nl80211_pattern_support	api/nl80211.h	/^struct nl80211_pattern_support {$/;"	s
nl80211_phy2ifname	iwinfo_nl80211.c	/^static char * nl80211_phy2ifname(const char *ifname)$/;"	f	file:
nl80211_plink_state	api/nl80211.h	/^enum nl80211_plink_state {$/;"	g
nl80211_pmksa_candidate_attr	api/nl80211.h	/^enum nl80211_pmksa_candidate_attr {$/;"	g
nl80211_probe	iwinfo_nl80211.c	/^static int nl80211_probe(const char *ifname)$/;"	f	file:
nl80211_probe_resp_offload_support_attr	api/nl80211.h	/^enum nl80211_probe_resp_offload_support_attr {$/;"	g
nl80211_protocol_features	api/nl80211.h	/^enum nl80211_protocol_features {$/;"	g
nl80211_ps_state	api/nl80211.h	/^enum nl80211_ps_state {$/;"	g
nl80211_radar_event	api/nl80211.h	/^enum nl80211_radar_event {$/;"	g
nl80211_rate_info	api/nl80211.h	/^enum nl80211_rate_info {$/;"	g
nl80211_readint	iwinfo_nl80211.c	/^static int nl80211_readint(const char *path)$/;"	f	file:
nl80211_reg_initiator	api/nl80211.h	/^enum nl80211_reg_initiator {$/;"	g
nl80211_reg_rule_attr	api/nl80211.h	/^enum nl80211_reg_rule_attr {$/;"	g
nl80211_reg_rule_flags	api/nl80211.h	/^enum nl80211_reg_rule_flags {$/;"	g
nl80211_reg_type	api/nl80211.h	/^enum nl80211_reg_type {$/;"	g
nl80211_rekey_data	api/nl80211.h	/^enum nl80211_rekey_data {$/;"	g
nl80211_rssi_rate	iwinfo_nl80211.h	/^struct nl80211_rssi_rate {$/;"	s
nl80211_rxmgmt_flags	api/nl80211.h	/^enum nl80211_rxmgmt_flags {$/;"	g
nl80211_scan_flags	api/nl80211.h	/^enum nl80211_scan_flags {$/;"	g
nl80211_scanlist	iwinfo_nl80211.c	/^struct nl80211_scanlist {$/;"	s	file:
nl80211_sched_scan_match_attr	api/nl80211.h	/^enum nl80211_sched_scan_match_attr {$/;"	g
nl80211_send	iwinfo_nl80211.c	/^static struct nl80211_msg_conveyor * nl80211_send($/;"	f	file:
nl80211_ssid_bssid	iwinfo_nl80211.c	/^struct nl80211_ssid_bssid {$/;"	s	file:
nl80211_sta_bss_param	api/nl80211.h	/^enum nl80211_sta_bss_param {$/;"	g
nl80211_sta_flag_update	api/nl80211.h	/^struct nl80211_sta_flag_update {$/;"	s
nl80211_sta_flags	api/nl80211.h	/^enum nl80211_sta_flags {$/;"	g
nl80211_sta_info	api/nl80211.h	/^enum nl80211_sta_info {$/;"	g
nl80211_sta_wme_attr	api/nl80211.h	/^enum nl80211_sta_wme_attr {$/;"	g
nl80211_state	iwinfo_nl80211.h	/^struct nl80211_state {$/;"	s
nl80211_subscribe	iwinfo_nl80211.c	/^static int nl80211_subscribe(const char *family, const char *group)$/;"	f	file:
nl80211_subscribe_cb	iwinfo_nl80211.c	/^static int nl80211_subscribe_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_survey_info	api/nl80211.h	/^enum nl80211_survey_info {$/;"	g
nl80211_tdls_operation	api/nl80211.h	/^enum nl80211_tdls_operation {$/;"	g
nl80211_tdls_peer_capability	api/nl80211.h	/^enum nl80211_tdls_peer_capability {$/;"	g
nl80211_tx_power_setting	api/nl80211.h	/^enum nl80211_tx_power_setting {$/;"	g
nl80211_tx_rate_attributes	api/nl80211.h	/^enum nl80211_tx_rate_attributes {$/;"	g
nl80211_txq_attr	api/nl80211.h	/^enum nl80211_txq_attr {$/;"	g
nl80211_txrate_gi	api/nl80211.h	/^enum nl80211_txrate_gi {$/;"	g
nl80211_txrate_vht	api/nl80211.h	/^struct nl80211_txrate_vht {$/;"	s
nl80211_user_reg_hint_type	api/nl80211.h	/^enum nl80211_user_reg_hint_type {$/;"	g
nl80211_vendor_cmd_info	api/nl80211.h	/^struct nl80211_vendor_cmd_info {$/;"	s
nl80211_wait	iwinfo_nl80211.c	/^static int nl80211_wait(const char *family, const char *group, int cmd)$/;"	f	file:
nl80211_wait_cb	iwinfo_nl80211.c	/^static int nl80211_wait_cb(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_wait_seq_check	iwinfo_nl80211.c	/^static int nl80211_wait_seq_check(struct nl_msg *msg, void *arg)$/;"	f	file:
nl80211_wowlan_pattern_support	api/nl80211.h	3421;"	d
nl80211_wowlan_tcp_attrs	api/nl80211.h	/^enum nl80211_wowlan_tcp_attrs {$/;"	g
nl80211_wowlan_tcp_data_seq	api/nl80211.h	/^struct nl80211_wowlan_tcp_data_seq {$/;"	s
nl80211_wowlan_tcp_data_token	api/nl80211.h	/^struct nl80211_wowlan_tcp_data_token {$/;"	s
nl80211_wowlan_tcp_data_token_feature	api/nl80211.h	/^struct nl80211_wowlan_tcp_data_token_feature {$/;"	s
nl80211_wowlan_triggers	api/nl80211.h	/^enum nl80211_wowlan_triggers {$/;"	g
nl80211_wpa_versions	api/nl80211.h	/^enum nl80211_wpa_versions {$/;"	g
nl80211_wpactl_info	iwinfo_nl80211.c	/^static char * nl80211_wpactl_info(const char *ifname, const char *cmd,$/;"	f	file:
nl80211_wpactl_recv	iwinfo_nl80211.c	/^static inline int nl80211_wpactl_recv(int sock, char *buf, int blen)$/;"	f	file:
nl_cache	iwinfo_nl80211.h	/^	struct nl_cache *nl_cache;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_cache
nl_sock	iwinfo_nl80211.h	/^	struct nl_sock *nl_sock;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::nl_sock
nlctrl	iwinfo_nl80211.h	/^	struct genl_family *nlctrl;$/;"	m	struct:nl80211_state	typeref:struct:nl80211_state::genl_family
nls	iwinfo_nl80211.c	/^static struct nl80211_state *nls = NULL;$/;"	v	typeref:struct:nl80211_state	file:
noise	api/wext.h	/^	uint8_t		noise;		\/* noise level (dBm) *\/$/;"	m	struct:iw_quality
noise	include/iwinfo.h	/^	int (*noise)(const char *, int *);$/;"	m	struct:iwinfo_ops
noise	include/iwinfo.h	/^	int8_t noise;$/;"	m	struct:iwinfo_assoclist_entry
num_bitrates	api/wext.h	/^	uint8_t		num_bitrates;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range
num_channels	api/wext.h	/^	uint16_t		num_channels;	\/* Number of channels [0; num - 1] *\/$/;"	m	struct:iw_range
num_channels	api/wext.h	/^	uint8_t		num_channels; \/* num entries in channel_list;$/;"	m	struct:iw_scan_req
num_encoding_sizes	api/wext.h	/^	uint8_t	num_encoding_sizes;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range
num_frequency	api/wext.h	/^	uint8_t		num_frequency;	\/* Number of entry in the list *\/$/;"	m	struct:iw_range
num_txpower	api/wext.h	/^	uint8_t		num_txpower;	\/* Number of entries in the list *\/$/;"	m	struct:iw_range
nwid	api/wext.h	/^	struct iw_param	nwid;		\/* network id (or domain - the cell) *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
nwid	api/wext.h	/^	uint32_t		nwid;		\/* Rx : Wrong nwid\/essid *\/$/;"	m	struct:iw_discarded
octet	api/broadcom.h	/^	uint8_t					octet[6];$/;"	m	struct:wl_ether_addr
offset	api/nl80211.h	/^	__u32 offset, len;$/;"	m	struct:nl80211_wowlan_tcp_data_token
offset	api/nl80211.h	/^	__u32 start, offset, len;$/;"	m	struct:nl80211_wowlan_tcp_data_seq
old_num_channels	api/wext.h	/^	uint16_t		old_num_channels;$/;"	m	struct:iw_range
old_num_frequency	api/wext.h	/^	uint8_t		old_num_frequency;$/;"	m	struct:iw_range
pair_ciphers	include/iwinfo.h	/^	uint8_t pair_ciphers;$/;"	m	struct:iwinfo_crypto_entry
param	api/wext.h	/^	struct iw_param	param;		\/* Other small parameters *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
pat	api/nl80211.h	/^	struct nl80211_pattern_support pat;$/;"	m	struct:nl80211_coalesce_rule_support	typeref:struct:nl80211_coalesce_rule_support::nl80211_pattern_support
phyname	include/iwinfo.h	/^	int (*phyname)(const char *, char *);$/;"	m	struct:iwinfo_ops
phyrev	api/broadcom.h	/^	uint		phyrev;		\/* phy revision *\/$/;"	m	struct:wlc_rev_info
phytype	api/broadcom.h	/^	uint		phytype;	\/* phy type *\/$/;"	m	struct:wlc_rev_info
plink_actions	api/nl80211.h	/^enum plink_actions {$/;"	g
pm_capa	api/wext.h	/^	uint16_t		pm_capa;	\/* What PM options are supported *\/$/;"	m	struct:iw_range
pmkid	api/wext.h	/^	uint8_t		pmkid[IW_PMKID_LEN];$/;"	m	struct:iw_pmksa
pmp_flags	api/wext.h	/^	uint16_t		pmp_flags;	\/* How to decode max\/min PM period *\/$/;"	m	struct:iw_range
pms_flags	api/wext.h	/^	uint16_t		pms_flags;	\/* How to decode max\/min PM saving *\/$/;"	m	struct:iw_range
pmt_flags	api/wext.h	/^	uint16_t		pmt_flags;	\/* How to decode max\/min PM timeout *\/$/;"	m	struct:iw_range
pointer	api/wext.h	/^  void 			*pointer;	\/* Pointer to the data  (in user space) *\/$/;"	m	struct:iw_point
power	api/wext.h	/^	struct iw_param	power;		\/* PM duration\/timeout *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
print_assoclist	iwinfo_cli.c	/^static void print_assoclist(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_bssid	iwinfo_cli.c	/^static char * print_bssid(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_channel	iwinfo_cli.c	/^static char * print_channel(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_countrylist	iwinfo_cli.c	/^static void print_countrylist(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_encryption	iwinfo_cli.c	/^static char * print_encryption(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_freqlist	iwinfo_cli.c	/^static void print_freqlist(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_frequency	iwinfo_cli.c	/^static char * print_frequency(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_frequency_offset	iwinfo_cli.c	/^static char * print_frequency_offset(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_hardware_id	iwinfo_cli.c	/^static char * print_hardware_id(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_hardware_name	iwinfo_cli.c	/^static char * print_hardware_name(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_hwmodes	iwinfo_cli.c	/^static char * print_hwmodes(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_info	iwinfo_cli.c	/^static void print_info(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_mbssid_supp	iwinfo_cli.c	/^static char * print_mbssid_supp(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_mode	iwinfo_cli.c	/^static char * print_mode(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_noise	iwinfo_cli.c	/^static char * print_noise(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_phyname	iwinfo_cli.c	/^static char * print_phyname(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_quality	iwinfo_cli.c	/^static char * print_quality(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_quality_max	iwinfo_cli.c	/^static char * print_quality_max(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_rate	iwinfo_cli.c	/^static char * print_rate(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_scanlist	iwinfo_cli.c	/^static void print_scanlist(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_signal	iwinfo_cli.c	/^static char * print_signal(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_ssid	iwinfo_cli.c	/^static char * print_ssid(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_txpower	iwinfo_cli.c	/^static char * print_txpower(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_txpower_offset	iwinfo_cli.c	/^static char * print_txpower_offset(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_txpwrlist	iwinfo_cli.c	/^static void print_txpwrlist(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
print_type	iwinfo_cli.c	/^static const char * print_type(const struct iwinfo_ops *iw, const char *ifname)$/;"	f	file:
probe	include/iwinfo.h	/^	int (*probe)(const char *ifname);$/;"	m	struct:iwinfo_ops
qual	api/wext.h	/^	struct iw_quality	qual;		\/* Quality of the link *\/$/;"	m	struct:iw_thrspy	typeref:struct:iw_thrspy::iw_quality
qual	api/wext.h	/^	struct iw_quality	qual;		\/* Quality of the link$/;"	m	struct:iw_statistics	typeref:struct:iw_statistics::iw_quality
qual	api/wext.h	/^	struct iw_quality qual;		\/* Quality part of statistics *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_quality
qual	api/wext.h	/^	uint8_t		qual;		\/* link quality (%retries, SNR,$/;"	m	struct:iw_quality
quality	include/iwinfo.h	/^	int (*quality)(const char *, int *);$/;"	m	struct:iwinfo_ops
quality	include/iwinfo.h	/^	uint8_t quality;$/;"	m	struct:iwinfo_scanlist_entry
quality_max	include/iwinfo.h	/^	int (*quality_max)(const char *, int *);$/;"	m	struct:iwinfo_ops
quality_max	include/iwinfo.h	/^	uint8_t quality_max;$/;"	m	struct:iwinfo_scanlist_entry
r_time_flags	api/wext.h	/^	uint16_t		r_time_flags;	\/* How to decode max\/min retry life *\/$/;"	m	struct:iw_range
radiorev	api/broadcom.h	/^	uint		radiorev;	\/* radio revision *\/$/;"	m	struct:wlc_rev_info
rate	include/iwinfo.h	/^	uint32_t rate;$/;"	m	struct:iwinfo_rate_entry
rate	iwinfo_nl80211.h	/^	int16_t rate;$/;"	m	struct:nl80211_rssi_rate
rates	api/broadcom.h	/^    uint8_t   				rates[WL_NUMRATES]; \/* rates in 500kbps units w\/hi bit set if basic *\/$/;"	m	struct:wl_rateset
rateset	api/broadcom.h	/^    wl_rateset_t			rateset;    \/* rateset in use *\/$/;"	m	struct:wl_sta_info
reason_code	api/wext.h	/^	uint16_t		reason_code;$/;"	m	struct:iw_mlme
recv	iwinfo_nl80211.h	/^	int recv;$/;"	m	struct:nl80211_event_conveyor
restricted	include/iwinfo.h	/^	uint8_t restricted;$/;"	m	struct:iwinfo_freqlist_entry
retries	api/wext.h	/^	uint32_t		retries;	\/* Tx : Max MAC retries num reached *\/$/;"	m	struct:iw_discarded
retry	api/wext.h	/^	struct iw_param	retry;		\/* Retry limits & lifetime *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
retry_capa	api/wext.h	/^	uint16_t		retry_capa;	\/* What retry options are supported *\/$/;"	m	struct:iw_range
retry_flags	api/wext.h	/^	uint16_t		retry_flags;	\/* How to decode max\/min retry limit *\/$/;"	m	struct:iw_range
rssi	api/broadcom.h	/^	int						rssi;$/;"	m	struct:wl_sta_rssi
rssi	iwinfo_nl80211.h	/^	int8_t  rssi;$/;"	m	struct:nl80211_rssi_rate
rts	api/wext.h	/^	struct iw_param	rts;		\/* RTS threshold threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
rx_mcast_pkts	api/broadcom.h	/^    uint32_t				rx_mcast_pkts;  \/* # of multicast packets received *\/$/;"	m	struct:wl_sta_info
rx_packets	include/iwinfo.h	/^	uint32_t rx_packets;$/;"	m	struct:iwinfo_assoclist_entry
rx_rate	api/broadcom.h	/^    uint32_t				rx_rate;    \/* Rate of last successful rx frame *\/$/;"	m	struct:wl_sta_info
rx_rate	include/iwinfo.h	/^	struct iwinfo_rate_entry rx_rate;$/;"	m	struct:iwinfo_assoclist_entry	typeref:struct:iwinfo_assoclist_entry::iwinfo_rate_entry
rx_seq	api/wext.h	/^	uint8_t		rx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext
rx_ucast_pkts	api/broadcom.h	/^    uint32_t				rx_ucast_pkts;  \/* # of unicast packets received *\/$/;"	m	struct:wl_sta_info
scan_type	api/wext.h	/^	uint8_t		scan_type; \/* IW_SCAN_TYPE_{ACTIVE,PASSIVE} *\/$/;"	m	struct:iw_scan_req
scanlist	include/iwinfo.h	/^	int (*scanlist)(const char *, char *, int *);$/;"	m	struct:iwinfo_ops
sens	api/wext.h	/^	struct iw_param	sens;		\/* signal level threshold *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
sensitivity	api/wext.h	/^	int32_t		sensitivity;$/;"	m	struct:iw_range
set	api/broadcom.h	/^	uint8_t					set;	\/* get or set request (optional) *\/$/;"	m	struct:wl_ioctl
set	api/nl80211.h	/^	__u32 set;$/;"	m	struct:nl80211_sta_flag_update
set_args	api/wext.h	/^	uint16_t		set_args;	\/* Type and number of args *\/$/;"	m	struct:iw_priv_args
signal	include/iwinfo.h	/^	int (*signal)(const char *, int *);$/;"	m	struct:iwinfo_ops
signal	include/iwinfo.h	/^	int8_t signal;$/;"	m	struct:iwinfo_assoclist_entry
signal	include/iwinfo.h	/^	uint8_t signal;$/;"	m	struct:iwinfo_scanlist_entry
src_addr	api/wext.h	/^	struct sockaddr	src_addr;$/;"	m	struct:iw_michaelmicfailure	typeref:struct:iw_michaelmicfailure::sockaddr
ssid	api/broadcom.h	/^	unsigned char			ssid[32];$/;"	m	struct:wlc_ssid
ssid	include/iwinfo.h	/^	int (*ssid)(const char *, char *);$/;"	m	struct:iwinfo_ops
ssid	include/iwinfo.h	/^	uint8_t ssid[IWINFO_ESSID_MAX_SIZE+1];$/;"	m	struct:iwinfo_scanlist_entry
ssid	iwinfo_nl80211.c	/^	unsigned char *ssid;$/;"	m	struct:nl80211_ssid_bssid	file:
ssid_len	api/broadcom.h	/^	uint32_t				ssid_len;$/;"	m	struct:wlc_ssid
standard_event_descr	iwinfo_wext.h	/^static const struct iw_ioctl_description standard_event_descr[] = {$/;"	v	typeref:struct:iw_ioctl_description
standard_event_num	iwinfo_wext.h	/^static const unsigned int standard_event_num =$/;"	v
standard_ioctl_descr	iwinfo_wext.h	/^static const struct iw_ioctl_description standard_ioctl_descr[] = {$/;"	v	typeref:struct:iw_ioctl_description
standard_ioctl_num	iwinfo_wext.h	/^static const unsigned int standard_ioctl_num =$/;"	v
start	api/nl80211.h	/^	__u32 start, offset, len;$/;"	m	struct:nl80211_wowlan_tcp_data_seq
status	api/wext.h	/^	uint16_t		status;		\/* Status$/;"	m	struct:iw_statistics
stream_descr	iwinfo_wext.h	/^typedef struct stream_descr$/;"	s
stream_descr	iwinfo_wext.h	/^} stream_descr;$/;"	t	typeref:struct:stream_descr
subcmd	api/nl80211.h	/^	__u32 subcmd;$/;"	m	struct:nl80211_vendor_cmd_info
subsystem_device_id	include/iwinfo.h	/^	uint16_t subsystem_device_id;$/;"	m	struct:iwinfo_hardware_entry
subsystem_device_id	include/iwinfo.h	/^	uint16_t subsystem_device_id;$/;"	m	struct:iwinfo_hardware_id
subsystem_vendor_id	include/iwinfo.h	/^	uint16_t subsystem_vendor_id;$/;"	m	struct:iwinfo_hardware_entry
subsystem_vendor_id	include/iwinfo.h	/^	uint16_t subsystem_vendor_id;$/;"	m	struct:iwinfo_hardware_id
throughput	api/wext.h	/^	uint32_t		throughput;	\/* To give an idea... *\/$/;"	m	struct:iw_range
token_size	iwinfo_wext.h	/^	uint16_t	token_size;		\/* Granularity of payload *\/$/;"	m	struct:iw_ioctl_description
token_stream	api/nl80211.h	/^	__u8 token_stream[];$/;"	m	struct:nl80211_wowlan_tcp_data_token
token_type	iwinfo_wext.h	/^	uint8_t	token_type;		\/* Future *\/$/;"	m	struct:iw_ioctl_description
tsc	api/wext.h	/^	uint8_t		tsc[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_michaelmicfailure
tx_failures	api/broadcom.h	/^    uint32_t				tx_failures;    \/* # of packets failed *\/$/;"	m	struct:wl_sta_info
tx_packets	include/iwinfo.h	/^	uint32_t tx_packets;$/;"	m	struct:iwinfo_assoclist_entry
tx_pkts	api/broadcom.h	/^    uint32_t				tx_pkts;    \/* # of packets transmitted *\/$/;"	m	struct:wl_sta_info
tx_rate	api/broadcom.h	/^    uint32_t				tx_rate;    \/* Rate of last successful tx frame *\/$/;"	m	struct:wl_sta_info
tx_rate	include/iwinfo.h	/^	struct iwinfo_rate_entry tx_rate;$/;"	m	struct:iwinfo_assoclist_entry	typeref:struct:iwinfo_assoclist_entry::iwinfo_rate_entry
tx_seq	api/wext.h	/^	uint8_t		tx_seq[IW_ENCODE_SEQ_MAX_SIZE]; \/* LSB first *\/$/;"	m	struct:iw_encode_ext
txpower	api/wext.h	/^	int32_t		txpower[IW_MAX_TXPOWER];	\/* list, in bps *\/$/;"	m	struct:iw_range
txpower	api/wext.h	/^	struct iw_param	txpower;	\/* default transmit power *\/$/;"	m	union:iwreq_data	typeref:struct:iwreq_data::iw_param
txpower	include/iwinfo.h	/^	int (*txpower)(const char *, int *);$/;"	m	struct:iwinfo_ops
txpower_capa	api/wext.h	/^	uint16_t		txpower_capa;	\/* What options are supported *\/$/;"	m	struct:iw_range
txpower_offset	include/iwinfo.h	/^	int (*txpower_offset)(const char *, int *);$/;"	m	struct:iwinfo_ops
txpower_offset	include/iwinfo.h	/^	int16_t txpower_offset;$/;"	m	struct:iwinfo_hardware_entry
txpwrlist	include/iwinfo.h	/^	int (*txpwrlist)(const char *, char *, int *);$/;"	m	struct:iwinfo_ops
u	api/wext.h	/^	union	iwreq_data	u;$/;"	m	struct:iwreq	typeref:union:iwreq::iwreq_data
u	api/wext.h	/^	union iwreq_data	u;		\/* IOCTL fixed payload *\/$/;"	m	struct:iw_event	typeref:union:iw_event::iwreq_data
ucoderev	api/broadcom.h	/^	uint		ucoderev;	\/* microcode version *\/$/;"	m	struct:wlc_rev_info
updated	api/wext.h	/^	uint8_t		updated;	\/* Flags to know if updated *\/$/;"	m	struct:iw_quality
used	api/broadcom.h	/^	uint32_t				used;	\/* bytes read or written (optional) *\/$/;"	m	struct:wl_ioctl
value	api/wext.h	/^  int32_t		value;		\/* The value of the parameter itself *\/$/;"	m	struct:iw_param
value	iwinfo_wext.h	/^  char *        value;          \/* Current value in event *\/$/;"	m	struct:stream_descr
vendor_id	api/nl80211.h	/^	__u32 vendor_id;$/;"	m	struct:nl80211_vendor_cmd_info
vendor_id	include/iwinfo.h	/^	uint16_t vendor_id;$/;"	m	struct:iwinfo_hardware_entry
vendor_id	include/iwinfo.h	/^	uint16_t vendor_id;$/;"	m	struct:iwinfo_hardware_id
vendor_name	include/iwinfo.h	/^	char vendor_name[64];$/;"	m	struct:iwinfo_hardware_entry
vendorid	api/broadcom.h	/^	uint		vendorid;	\/* PCI vendor id *\/$/;"	m	struct:wlc_rev_info
ver	api/broadcom.h	/^    uint16_t				ver;        \/* version of this struct *\/$/;"	m	struct:wl_sta_info
wait	iwinfo_nl80211.h	/^	int wait;$/;"	m	struct:nl80211_event_conveyor
we_version_compiled	api/wext.h	/^	uint8_t		we_version_compiled;	\/* Must be WIRELESS_EXT *\/$/;"	m	struct:iw_range
we_version_source	api/wext.h	/^	uint8_t		we_version_source;	\/* Last update of source *\/$/;"	m	struct:iw_range
wext_close	iwinfo_wext.c	/^static void wext_close(void)$/;"	f	file:
wext_extract_event	iwinfo_wext_scan.c	/^static inline int wext_extract_event(struct stream_descr *stream, struct iw_event *iwe, int wev)$/;"	f	file:
wext_fill_entry	iwinfo_wext_scan.c	/^static inline void wext_fill_entry(struct stream_descr *stream, struct iw_event *event,$/;"	f	file:
wext_fill_wpa	iwinfo_wext_scan.c	/^static inline void wext_fill_wpa(unsigned char *iebuf, int ielen, struct iwinfo_scanlist_entry *e)$/;"	f	file:
wext_freq2float	iwinfo_wext.c	/^static double wext_freq2float(const struct iw_freq *in)$/;"	f	file:
wext_freq2float	iwinfo_wext_scan.c	/^static inline double wext_freq2float(const struct iw_freq *in)$/;"	f	file:
wext_freq2mhz	iwinfo_wext.c	/^static inline int wext_freq2mhz(const struct iw_freq *in)$/;"	f	file:
wext_get_assoclist	iwinfo_wext.c	/^static int wext_get_assoclist(const char *ifname, char *buf, int *len)$/;"	f	file:
wext_get_bitrate	iwinfo_wext.c	/^static int wext_get_bitrate(const char *ifname, int *buf)$/;"	f	file:
wext_get_bssid	iwinfo_wext.c	/^static int wext_get_bssid(const char *ifname, char *buf)$/;"	f	file:
wext_get_channel	iwinfo_wext.c	/^static int wext_get_channel(const char *ifname, int *buf)$/;"	f	file:
wext_get_country	iwinfo_wext.c	/^static int wext_get_country(const char *ifname, char *buf)$/;"	f	file:
wext_get_countrylist	iwinfo_wext.c	/^static int wext_get_countrylist(const char *ifname, char *buf, int *len)$/;"	f	file:
wext_get_encryption	iwinfo_wext.c	/^static int wext_get_encryption(const char *ifname, char *buf)$/;"	f	file:
wext_get_freqlist	iwinfo_wext.c	/^static int wext_get_freqlist(const char *ifname, char *buf, int *len)$/;"	f	file:
wext_get_frequency	iwinfo_wext.c	/^static int wext_get_frequency(const char *ifname, int *buf)$/;"	f	file:
wext_get_frequency_offset	iwinfo_wext.c	/^static int wext_get_frequency_offset(const char *ifname, int *buf)$/;"	f	file:
wext_get_hardware_id	iwinfo_wext.c	/^static int wext_get_hardware_id(const char *ifname, char *buf)$/;"	f	file:
wext_get_hardware_name	iwinfo_wext.c	/^static int wext_get_hardware_name(const char *ifname, char *buf)$/;"	f	file:
wext_get_hwmodelist	iwinfo_wext.c	/^static int wext_get_hwmodelist(const char *ifname, int *buf)$/;"	f	file:
wext_get_mbssid_support	iwinfo_wext.c	/^static int wext_get_mbssid_support(const char *ifname, int *buf)$/;"	f	file:
wext_get_mode	iwinfo_wext.c	/^static int wext_get_mode(const char *ifname, int *buf)$/;"	f	file:
wext_get_noise	iwinfo_wext.c	/^static int wext_get_noise(const char *ifname, int *buf)$/;"	f	file:
wext_get_phyname	iwinfo_wext.c	/^static int wext_get_phyname(const char *ifname, char *buf)$/;"	f	file:
wext_get_quality	iwinfo_wext.c	/^static int wext_get_quality(const char *ifname, int *buf)$/;"	f	file:
wext_get_quality_max	iwinfo_wext.c	/^static int wext_get_quality_max(const char *ifname, int *buf)$/;"	f	file:
wext_get_scanlist	iwinfo_wext_scan.c	/^int wext_get_scanlist(const char *ifname, char *buf, int *len)$/;"	f
wext_get_signal	iwinfo_wext.c	/^static int wext_get_signal(const char *ifname, int *buf)$/;"	f	file:
wext_get_ssid	iwinfo_wext.c	/^static int wext_get_ssid(const char *ifname, char *buf)$/;"	f	file:
wext_get_txpower	iwinfo_wext.c	/^static int wext_get_txpower(const char *ifname, int *buf)$/;"	f	file:
wext_get_txpower_offset	iwinfo_wext.c	/^static int wext_get_txpower_offset(const char *ifname, int *buf)$/;"	f	file:
wext_get_txpwrlist	iwinfo_wext.c	/^static int wext_get_txpwrlist(const char *ifname, char *buf, int *len)$/;"	f	file:
wext_ioctl	iwinfo_wext.c	/^static inline int wext_ioctl(const char *ifname, int cmd, struct iwreq *wrq)$/;"	f	file:
wext_ioctl	iwinfo_wext_scan.c	/^static int wext_ioctl(const char *ifname, int cmd, struct iwreq *wrq)$/;"	f	file:
wext_ops	iwinfo_wext.c	/^const struct iwinfo_ops wext_ops = {$/;"	v	typeref:struct:iwinfo_ops
wext_probe	iwinfo_wext.c	/^static int wext_probe(const char *ifname)$/;"	f	file:
wext_sysfs_ifname_file	iwinfo_wext.c	/^static char * wext_sysfs_ifname_file(const char *ifname, const char *path)$/;"	f	file:
wl_close	iwinfo_wl.c	/^static void wl_close(void)$/;"	f	file:
wl_country_list	api/broadcom.h	/^typedef struct wl_country_list {$/;"	s
wl_country_list_t	api/broadcom.h	/^} wl_country_list_t;$/;"	t	typeref:struct:wl_country_list
wl_ether_addr	api/broadcom.h	/^struct wl_ether_addr {$/;"	s
wl_get_assoclist	iwinfo_wl.c	/^static int wl_get_assoclist(const char *ifname, char *buf, int *len)$/;"	f	file:
wl_get_assoclist_cb	iwinfo_wl.c	/^static void wl_get_assoclist_cb(const char *ifname,$/;"	f	file:
wl_get_bitrate	iwinfo_wl.c	/^static int wl_get_bitrate(const char *ifname, int *buf)$/;"	f	file:
wl_get_bssid	iwinfo_wl.c	/^static int wl_get_bssid(const char *ifname, char *buf)$/;"	f	file:
wl_get_channel	iwinfo_wl.c	/^static int wl_get_channel(const char *ifname, int *buf)$/;"	f	file:
wl_get_country	iwinfo_wl.c	/^static int wl_get_country(const char *ifname, char *buf)$/;"	f	file:
wl_get_countrylist	iwinfo_wl.c	/^static int wl_get_countrylist(const char *ifname, char *buf, int *len)$/;"	f	file:
wl_get_encryption	iwinfo_wl.c	/^static int wl_get_encryption(const char *ifname, char *buf)$/;"	f	file:
wl_get_enctype	iwinfo_wl.c	/^static int wl_get_enctype(const char *ifname, char *buf)$/;"	f	file:
wl_get_freqlist	iwinfo_wl.c	/^static int wl_get_freqlist(const char *ifname, char *buf, int *len)$/;"	f	file:
wl_get_frequency	iwinfo_wl.c	/^static int wl_get_frequency(const char *ifname, int *buf)$/;"	f	file:
wl_get_frequency_offset	iwinfo_wl.c	/^static int wl_get_frequency_offset(const char *ifname, int *buf)$/;"	f	file:
wl_get_hardware_id	iwinfo_wl.c	/^static int wl_get_hardware_id(const char *ifname, char *buf)$/;"	f	file:
wl_get_hardware_name	iwinfo_wl.c	/^static int wl_get_hardware_name(const char *ifname, char *buf)$/;"	f	file:
wl_get_hwmodelist	iwinfo_wl.c	/^static int wl_get_hwmodelist(const char *ifname, int *buf)$/;"	f	file:
wl_get_mbssid_support	iwinfo_wl.c	/^static int wl_get_mbssid_support(const char *ifname, int *buf)$/;"	f	file:
wl_get_mode	iwinfo_wl.c	/^static int wl_get_mode(const char *ifname, int *buf)$/;"	f	file:
wl_get_noise	iwinfo_wl.c	/^static int wl_get_noise(const char *ifname, int *buf)$/;"	f	file:
wl_get_phyname	iwinfo_wl.c	/^static int wl_get_phyname(const char *ifname, char *buf)$/;"	f	file:
wl_get_quality	iwinfo_wl.c	/^static int wl_get_quality(const char *ifname, int *buf)$/;"	f	file:
wl_get_quality_max	iwinfo_wl.c	/^static int wl_get_quality_max(const char *ifname, int *buf)$/;"	f	file:
wl_get_scanlist	iwinfo_wl.c	/^static int wl_get_scanlist(const char *ifname, char *buf, int *len)$/;"	f	file:
wl_get_signal	iwinfo_wl.c	/^static int wl_get_signal(const char *ifname, int *buf)$/;"	f	file:
wl_get_ssid	iwinfo_wl.c	/^static int wl_get_ssid(const char *ifname, char *buf)$/;"	f	file:
wl_get_txpower	iwinfo_wl.c	/^static int wl_get_txpower(const char *ifname, int *buf)$/;"	f	file:
wl_get_txpower_offset	iwinfo_wl.c	/^static int wl_get_txpower_offset(const char *ifname, int *buf)$/;"	f	file:
wl_get_txpwrlist	iwinfo_wl.c	/^static int wl_get_txpwrlist(const char *ifname, char *buf, int *len)$/;"	f	file:
wl_ioctl	api/broadcom.h	/^typedef struct wl_ioctl {$/;"	s
wl_ioctl	iwinfo_wl.c	/^static int wl_ioctl(const char *name, int cmd, void *buf, int len)$/;"	f	file:
wl_ioctl_t	api/broadcom.h	/^} wl_ioctl_t;$/;"	t	typeref:struct:wl_ioctl
wl_iovar	iwinfo_wl.c	/^static int wl_iovar(const char *name, const char *cmd, const char *arg,$/;"	f	file:
wl_maclist	api/broadcom.h	/^struct wl_maclist {$/;"	s
wl_ops	iwinfo_wl.c	/^const struct iwinfo_ops wl_ops = {$/;"	v	typeref:struct:iwinfo_ops
wl_probe	iwinfo_wl.c	/^static int wl_probe(const char *ifname)$/;"	f	file:
wl_rateset	api/broadcom.h	/^typedef struct wl_rateset {$/;"	s
wl_rateset_t	api/broadcom.h	/^} wl_rateset_t;$/;"	t	typeref:struct:wl_rateset
wl_read_assoclist	iwinfo_wl.c	/^static struct wl_maclist * wl_read_assoclist(const char *ifname)$/;"	f	file:
wl_sta_info	api/broadcom.h	/^typedef struct wl_sta_info {$/;"	s
wl_sta_info_t	api/broadcom.h	/^} wl_sta_info_t;$/;"	t	typeref:struct:wl_sta_info
wl_sta_rssi	api/broadcom.h	/^typedef struct wl_sta_rssi {$/;"	s
wl_sta_rssi_t	api/broadcom.h	/^} wl_sta_rssi_t;$/;"	t	typeref:struct:wl_sta_rssi
wlc_rev_info	api/broadcom.h	/^typedef struct wlc_rev_info {$/;"	s
wlc_rev_info_t	api/broadcom.h	/^} wlc_rev_info_t;$/;"	t	typeref:struct:wlc_rev_info
wlc_ssid	api/broadcom.h	/^typedef struct wlc_ssid {$/;"	s
wlc_ssid_t	api/broadcom.h	/^} wlc_ssid_t;$/;"	t	typeref:struct:wlc_ssid
wpa_version	include/iwinfo.h	/^	uint8_t wpa_version;$/;"	m	struct:iwinfo_crypto_entry
wpasupp_ssid_decode	iwinfo_nl80211.c	/^static int wpasupp_ssid_decode(const char *in, char *out, int outlen)$/;"	f	file:
