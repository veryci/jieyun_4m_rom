#! /bin/sh

. /lib/functions/system.sh
. /lib/functions/uci-defaults.sh

get_factory()
{
	cat /proc/mtd|sed -n '/Factory/s/\([^:]\+\):.*/\1/p'|sed 's/mtd/mtdblock/'
}
GPIO_WPS_RST=12
GPIO_WPS_LED=39
GPIO_WAN_LED=40
GPIO_24G_LED=72
ETH_MAC="/usr/bin/eth_mac"
PROC_ETH_STATUS="/proc/net/raeth_port/eth"

show_usage()
{
	PRO=`basename $0`
	echo "Usage:"
	echo -e "\t${PRO}  system get mac             -- show system mac"
	echo -e "\t${PRO}  system set mac <mac>       -- set system mac"
	echo -e "\t${PRO}  system get waninfo         -- show wan info"
	echo -e "\t${PRO}  system get version         -- show system version"
	echo -e "\t${PRO}  system get eth_status      -- show eth status"
	echo -e "\t${PRO}  system set factory_config  -- restore factory config,need reboot system"
	echo -e "\t${PRO}  system set default_config  -- restore default config,need reboot system"
	echo -e "\t${PRO}  system get config_mode     -- show config mode"
	echo -e "\t${PRO}  system reboot              -- reboot system"
	echo -e "\t${PRO}  button enable              -- enable button function"
	echo -e "\t${PRO}  button disable             -- diable button function"
	echo -e "\t${PRO}  button get                 -- get button input"
	echo -e "\t${PRO}  led on                     -- led on"
	echo -e "\t${PRO}  led off                    -- led off"
	echo -e "\t${PRO}  led restore                -- led restore"
}

MTD_FAC="/dev/$(get_factory)"

if [ $# -lt 2 ];then
	show_usage
	exit
fi
	

case "$1" in
	system)
		case "$2" in
			set)
				case "$3" in
						mac)
							if [ -n "$4" ];then
								lan_mac=$4
								wan_mac=$(macaddr_add "$lan_mac" 1)
								wifi_mac=$(macaddr_add "$lan_mac" 2)

        							${ETH_MAC} w lan `echo ${lan_mac} | sed -e "s/:/ /g"`
        							${ETH_MAC} w wan `echo ${wan_mac} | sed -e "s/:/ /g"`
        							${ETH_MAC} w wifi `echo ${wifi_mac} | sed -e "s/:/ /g"`

							        [ -n "$lan_mac" ] && ucidef_set_interface_macaddr lan "$lan_mac"
								[ -n "$wan_mac" ] && ucidef_set_interface_macaddr wan "$wan_mac"

								echo "ok"
							fi
							;;

					factory_config)
							mv /etc/rc.d/K101telnetd /etc/rc.d/S101telnetd &>/dev/null 
							sed -i 's/STOP=/START=/' /etc/init.d/telnetd &>/dev/null
							mv /etc/rc.d/K110ated /etc/rc.d/S110ated &>/dev/null
							sed -i 's/STOP=/START=/' /etc/init.d/ated &>/dev/null
							;;
					default_config)
            						echo -n -e $'\x11\x11' | dd bs=1 seek=2048 of=$MTD_FAC count=2 conv=notrunc 2>/dev/null
							mv /etc/rc.d/S101telnetd /etc/rc.d/K101telnetd &>/dev/null
							sed -i 's/START=/STOP=/' /etc/init.d/telnetd  &>/dev/null
							mv /etc/rc.d/S110ated /etc/rc.d/K110ated &>/dev/null
							sed -i 's/START=/STOP=/' /etc/init.d/ated &>/dev/null
							;;	

				esac
				;;
			get)
				case "$3" in
					mac)
						${ETH_MAC} r lan
						;;
					config_mode)
						cat /etc/init.d/telnetd|grep -q "START="
						if [[ $? -eq 0 ]]; then
							echo "factory_config"
						else     
							cat /etc/init.d/telnetd|grep -q "STOP="
					       		if [[ $? -eq 0 ]]; then
								echo "default_config"
							else
								echo "fail"
							fi
				       		fi
						
						;;
					version)
						awk '/fw_ver/{print $NF}' /etc/config/system	
						
						;;
					eth_status)
						ETH_STATUS=$(cat $PROC_ETH_STATUS)
						PORT1=$(echo $ETH_STATUS|awk '{print $1}')
						PORT2=$(echo $ETH_STATUS|awk '{print $2}')
						PORT3=$(echo $ETH_STATUS|awk '{print $3}')
						PORT4=$(echo $ETH_STATUS|awk '{print $4}')
						PORT5=$(echo $ETH_STATUS|awk '{print $5}')
						if [ $PORT1 -eq 0 ];then
							echo "WAN  : off"
						else
							echo "WAN  : on"
						fi
						if [ $PORT2 -eq 0 ];then
							echo "LAN1 : off"
						else
							echo "LAN1 : on"
						fi
								
						if [ $PORT3 -eq 0 ];then
							echo "LAN2 : off"
						else
							echo "LAN2 : on"
						fi

						if [ $PORT4 -eq 0 ];then
							echo "LAN3 : off"
						else
							echo "LAN3 : on"
						fi
						if [ $PORT5 -eq 0 ];then
							echo "LAN4 : off"
						else
							echo "LAN4 : on"
						fi
						;;
					waninfo)
						WANPROTO=$(uci get network.wan.proto 2>/dev/null)
						WANIP=$(ifconfig eth0.2|awk -F'[: ]+' '/inet addr/{print $4}')
						WANMASK=$(ifconfig eth0.2|awk -F'[: ]+' '/inet addr/{print $NF}')
						echo  "wan proto   : $WANPROTO"
						echo  "wan ip      : $WANIP"
						echo  "wan netmask : $WANMASK"
						;;
				esac
				;;

			reboot)
				reboot
				;;
			reset)
				/etc/btnd/wps_hold.sh
				;;
		esac
		;;
	button)
		case "$2" in
			enable)
				btnd wps 38 &
				echo "ok"
				;;
			disable)
				BTND_PID=`pidof btnd`
				kill -9 ${BTND_PID} &>/dev/null
				gpio i 38  &>/dev/null
				echo "one click"
				;;
			get)
				gpio t 38 
				;;
		esac
		;;
	led)
		case "$2" in
			on)
				gpio m 44 1
				gpio w
				;;
			off)
				gpio m 44 1
				gpio r  >/dev/null
				;;
			restore)
				gpio m 44 0
				gpio l 37 1 1 1 1 1
				;;
			*)
			
				show_usage
				;;
		esac
		;;
	
	*)
		show_usage
		;;
esac
